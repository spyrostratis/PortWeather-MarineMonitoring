[
    {
        "id": "b3fbb48bc7759dd9",
        "type": "tab",
        "label": "Exercise",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "3e056246bcfe628d",
        "type": "inject",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "55 23 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 1160,
        "wires": [
            [
                "675f82ed231d26f6",
                "25db107008aaaf18"
            ]
        ]
    },
    {
        "id": "2bffca75ce96bc96",
        "type": "json",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 630,
        "y": 1360,
        "wires": [
            [
                "16e3841b487119a9"
            ]
        ]
    },
    {
        "id": "c2a5fa1150494087",
        "type": "comment",
        "z": "b3fbb48bc7759dd9",
        "name": "Current weather & waves data",
        "info": "",
        "x": 180,
        "y": 60,
        "wires": []
    },
    {
        "id": "edaade5342f7f8f2",
        "type": "inject",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "3600",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 300,
        "wires": [
            [
                "02f7ce9334218f95",
                "acceb051134cf2c7"
            ]
        ]
    },
    {
        "id": "8a34f7ebf11f44e2",
        "type": "json",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 630,
        "y": 500,
        "wires": [
            [
                "4d9b22f62c63054d"
            ]
        ]
    },
    {
        "id": "3be8b40578a975af",
        "type": "comment",
        "z": "b3fbb48bc7759dd9",
        "name": "Hourly weather & waves data for today & tomorrow",
        "info": "",
        "x": 250,
        "y": 920,
        "wires": []
    },
    {
        "id": "7f2eca1443c6a2d4",
        "type": "sqlite",
        "z": "b3fbb48bc7759dd9",
        "mydb": "5592c0ac1723dc37",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "Database",
        "x": 640,
        "y": 160,
        "wires": [
            [
                "e2da44d5d8e3d7d0"
            ]
        ]
    },
    {
        "id": "66fe864df28a8ba3",
        "type": "function",
        "z": "b3fbb48bc7759dd9",
        "name": "CREATE TABLE hourly_data",
        "func": "msg.topic = 'CREATE TABLE hourly_data (' +\n    'latitude FLOAT,' +\n    'longitude FLOAT,' +\n    'temperature FLOAT,' +\n    'humidity FLOAT,' +\n    'rain FLOAT,' +\n    'showers FLOAT,' +\n    'snowfall FLOAT,' +\n    'cloud_cover FLOAT,' +\n    'wind_speed FLOAT,' +\n    'wave_height FLOAT,' +\n    'wave_direction FLOAT,' +\n    'wave_period FLOAT,' +\n    'timestamp TEXT' +\n    ')';\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 960,
        "wires": [
            [
                "c32f9f6e956d0b64"
            ]
        ]
    },
    {
        "id": "55679cb6d1c17af7",
        "type": "function",
        "z": "b3fbb48bc7759dd9",
        "name": "SELECT TABLE hourly_data",
        "func": "msg.topic = 'SELECT * FROM hourly_data';\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 1000,
        "wires": [
            [
                "c32f9f6e956d0b64"
            ]
        ]
    },
    {
        "id": "53e3b406e59796f0",
        "type": "inject",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 960,
        "wires": [
            [
                "66fe864df28a8ba3"
            ]
        ]
    },
    {
        "id": "dba5230a6c2a6d42",
        "type": "inject",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 1000,
        "wires": [
            [
                "55679cb6d1c17af7"
            ]
        ]
    },
    {
        "id": "e2da44d5d8e3d7d0",
        "type": "debug",
        "z": "b3fbb48bc7759dd9",
        "name": "message",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 800,
        "y": 160,
        "wires": []
    },
    {
        "id": "364098b5befdfe32",
        "type": "function",
        "z": "b3fbb48bc7759dd9",
        "name": "DROP TABLE hourly_data",
        "func": "msg.topic = 'DROP TABLE hourly_data';\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 1040,
        "wires": [
            [
                "c32f9f6e956d0b64"
            ]
        ]
    },
    {
        "id": "4bca4b1e4b9820e6",
        "type": "inject",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 1040,
        "wires": [
            [
                "364098b5befdfe32"
            ]
        ]
    },
    {
        "id": "367ae85fe06506ab",
        "type": "function",
        "z": "b3fbb48bc7759dd9",
        "name": "make rows",
        "func": "var weather_data;\nvar waves_data;\n\nvar latitude;\nvar longitude;\n\nif (msg.payload[0].hourly.temperature_2m !== undefined) {\n    weather_data = msg.payload[0].hourly;\n    waves_data = msg.payload[1].hourly;\n    latitude = msg.payload[1].latitude;\n    longitude = msg.payload[1].longitude;\n} else {\n    weather_data = msg.payload[1].hourly;\n    waves_data = msg.payload[0].hourly;\n    latitude = msg.payload[0].latitude;\n    longitude = msg.payload[0].longitude;\n}\n\nvar systemDateTime = new Date();\n\nfor (var i = 0; i < weather_data.time.length; i++) {  \n    \n    var currentDateTime = new Date(weather_data.time[i]);\n    if (currentDateTime < systemDateTime) {\n        continue;\n    }\n    \n    msg.payload = {};\n    \n    msg.payload.latitude = latitude;\n    msg.payload.longitude = longitude;\n\n    msg.payload.temperature = weather_data.temperature_2m[i];\n    msg.payload.humidity = weather_data.relative_humidity_2m[i];\n    msg.payload.rain = weather_data.rain[i];\n    msg.payload.showers = weather_data.showers[i];\n    msg.payload.snowfall = weather_data.snowfall[i];\n    msg.payload.cloud_cover = weather_data.cloud_cover[i];\n    msg.payload.wind_speed = weather_data.wind_speed_10m[i];\n\n    msg.payload.wave_height = waves_data.wave_height[i];\n    msg.payload.wave_direction = waves_data.wave_direction[i];\n    msg.payload.wave_period = waves_data.wave_period[i];\n\n    msg.payload.timestamp = weather_data.time[i];\n\n    node.send(msg);\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 930,
        "y": 1360,
        "wires": [
            [
                "1e51fb63026f06f3",
                "6fc1ba49c4df9573"
            ]
        ]
    },
    {
        "id": "5c199bdb71682e8f",
        "type": "function",
        "z": "b3fbb48bc7759dd9",
        "name": "INSERT TABLE current_data",
        "func": "var weather_data;\nvar waves_data;\n\nvar latitude;\nvar longitude;\n\nif(msg.payload[0].current.temperature_2m !== undefined){\n    weather_data = msg.payload[0].current;\n    waves_data = msg.payload[1].current;\n    latitude = msg.payload[1].latitude;\n    longitude = msg.payload[1].longitude;\n}else{\n    weather_data = msg.payload[1].current;\n    waves_data = msg.payload[0].current;\n    latitude = msg.payload[0].latitude;\n    longitude = msg.payload[0].longitude;\n}\n\nvar temperature = weather_data.temperature_2m;\nvar humidity = weather_data.relative_humidity_2m;\nvar rain = weather_data.rain;\nvar showers = weather_data.showers;\nvar snowfall = weather_data.snowfall;\nvar cloud_cover = weather_data.cloud_cover;\nvar wind_speed = weather_data.wind_speed_10m;\n\nvar wave_height = waves_data.wave_height;\nvar wave_direction = waves_data.wave_direction;\nvar wave_period = waves_data.wave_period;\n\nvar timestamp = weather_data.time;\n\nmsg.topic ='INSERT INTO current_data (latitude, longitude, temperature, humidity, rain, showers, snowfall, cloud_cover, wind_speed, wave_height, wave_direction, wave_period, timestamp) VALUES (' +\n    latitude + ', ' +   \n    longitude + ', ' +\n    temperature + ', ' +\n    humidity + ', ' +\n    rain + ', ' +\n    showers + ', ' +\n    snowfall + ', ' +\n    cloud_cover + ', ' +\n    wind_speed + ', ' +\n    wave_height + ', ' +\n    wave_direction + ', ' +\n    wave_period + ', ' +\n    \"'\" + timestamp + \"'\" + ')';\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 500,
        "wires": [
            [
                "13b410a564d95355"
            ]
        ]
    },
    {
        "id": "886fbacc9e440340",
        "type": "function",
        "z": "b3fbb48bc7759dd9",
        "name": "CREATE TABLE current_data",
        "func": "msg.topic = 'CREATE TABLE current_data (' +\n    'latitude FLOAT,' +\n    'longitude FLOAT,' +\n    'temperature FLOAT,' +\n    'humidity FLOAT,' +\n    'rain FLOAT,' +\n    'showers FLOAT,' +\n    'snowfall FLOAT,' +\n    'cloud_cover FLOAT,' +\n    'wind_speed FLOAT,' +\n    'wave_height FLOAT,' +\n    'wave_direction FLOAT,' +\n    'wave_period FLOAT,' +\n    'timestamp TEXT' +\n    ')';\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 100,
        "wires": [
            [
                "7f2eca1443c6a2d4"
            ]
        ]
    },
    {
        "id": "98d88d69ceaabe60",
        "type": "function",
        "z": "b3fbb48bc7759dd9",
        "name": "SELECT TABLE current_data",
        "func": "msg.topic = 'SELECT * FROM current_data';\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 140,
        "wires": [
            [
                "7f2eca1443c6a2d4"
            ]
        ]
    },
    {
        "id": "536358daa2d04e14",
        "type": "inject",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 100,
        "wires": [
            [
                "886fbacc9e440340"
            ]
        ]
    },
    {
        "id": "01ece97c6e23f513",
        "type": "inject",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 140,
        "wires": [
            [
                "98d88d69ceaabe60"
            ]
        ]
    },
    {
        "id": "5ab5d8f611051a26",
        "type": "function",
        "z": "b3fbb48bc7759dd9",
        "name": "DROP TABLE current_data",
        "func": "msg.topic = 'DROP TABLE current_data';\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 180,
        "wires": [
            [
                "7f2eca1443c6a2d4"
            ]
        ]
    },
    {
        "id": "921ff5e4c7f76ae7",
        "type": "inject",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 180,
        "wires": [
            [
                "5ab5d8f611051a26"
            ]
        ]
    },
    {
        "id": "eef4a5a09d040ff3",
        "type": "link out",
        "z": "b3fbb48bc7759dd9",
        "name": "link out 2",
        "mode": "link",
        "links": [
            "8f23406a8c40fa28",
            "acd94049dbb1094f",
            "aa29c3491d7404da",
            "a8c017db6e7559df",
            "769b24192615dff8",
            "ea2a042f2335451e",
            "8c875cc7d6150437",
            "18676d105663bcf5",
            "ae7753281502f089",
            "d3e89af8ce76bcf7",
            "cbd81dd645dad935",
            "5f73482107134920",
            "69c8c58b2578f901",
            "fc54c45fe2df6d72",
            "651efaf9b6d17dc4"
        ],
        "x": 2575,
        "y": 500,
        "wires": []
    },
    {
        "id": "4d9b22f62c63054d",
        "type": "join",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 770,
        "y": 500,
        "wires": [
            [
                "5c199bdb71682e8f"
            ]
        ]
    },
    {
        "id": "675f82ed231d26f6",
        "type": "http request",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://marine-api.open-meteo.com/v1/marine?latitude=37.944709&longitude=23.638304&hourly=wave_height,wave_direction,wave_period&timezone=auto&forecast_days=2",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 330,
        "y": 1180,
        "wires": [
            [
                "2cf2a5f3b06bd80d"
            ]
        ]
    },
    {
        "id": "16e3841b487119a9",
        "type": "join",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 770,
        "y": 1360,
        "wires": [
            [
                "367ae85fe06506ab"
            ]
        ]
    },
    {
        "id": "8723e7f97e183a6e",
        "type": "link out",
        "z": "b3fbb48bc7759dd9",
        "name": "link out 19",
        "mode": "link",
        "links": [
            "8f23406a8c40fa28",
            "ccb1a923955e85e0",
            "1deaf81aa095cc6d",
            "4c8b7e0bb66aacb4",
            "acd94049dbb1094f",
            "f8362e675b80898f",
            "60eb63c1deb692b8",
            "c21038c5145db6ec",
            "18a7494c266a6a7b",
            "7fe5e9ba4363ed36",
            "f7b88420e2d4f989"
        ],
        "x": 1315,
        "y": 1360,
        "wires": []
    },
    {
        "id": "1e51fb63026f06f3",
        "type": "function",
        "z": "b3fbb48bc7759dd9",
        "name": "INSERT TABLE hourly_data",
        "func": "var values = Object.values(msg.payload);\nvalues = values.join(\"','\");\n\nmsg.topic = \"INSERT INTO hourly_data (latitude, longitude, temperature, humidity, rain, showers, snowfall, cloud_cover, wind_speed, wave_height, wave_direction, wave_period, timestamp) VALUES ('\" + values + \"')\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1160,
        "y": 1360,
        "wires": [
            [
                "8723e7f97e183a6e"
            ]
        ]
    },
    {
        "id": "09369f777d7996ef",
        "type": "link out",
        "z": "b3fbb48bc7759dd9",
        "name": "link out 21",
        "mode": "link",
        "links": [
            "8f23406a8c40fa28",
            "ccb1a923955e85e0",
            "1deaf81aa095cc6d",
            "4c8b7e0bb66aacb4",
            "acd94049dbb1094f",
            "f8e61b2a37e5a87e"
        ],
        "x": 1235,
        "y": 2000,
        "wires": []
    },
    {
        "id": "7548d61d94141cc3",
        "type": "function",
        "z": "b3fbb48bc7759dd9",
        "name": "INSERT TABLE piraeus_historical_data",
        "func": "var values = Object.values(msg.payload);\nvalues = values.join(\"','\");\n\nmsg.topic = \"INSERT INTO piraeus_historical_data (latitude, longitude, temperature, humidity, rain, snowfall, cloud_cover, wind_speed, wave_height, wave_direction, wave_period, timestamp) VALUES ('\" + values + \"')\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1040,
        "y": 2000,
        "wires": [
            [
                "09369f777d7996ef"
            ]
        ]
    },
    {
        "id": "114313cec0f01f61",
        "type": "function",
        "z": "b3fbb48bc7759dd9",
        "name": "make rows",
        "func": "var weather_data;\nvar waves_data;\n\nvar latitude;\nvar longitude;\n\nif (msg.payload[0].hourly.temperature_2m !== undefined) {\n    weather_data = msg.payload[0].hourly;\n    waves_data = msg.payload[1].hourly;\n    latitude = msg.payload[1].latitude;\n    longitude = msg.payload[1].longitude;\n} else {\n    weather_data = msg.payload[1].hourly;\n    waves_data = msg.payload[0].hourly;\n    latitude = msg.payload[0].latitude;\n    longitude = msg.payload[0].longitude;\n}\n\nfor (var i = 0; i < weather_data.time.length; i++) {  \n    \n    msg.payload = {};\n    \n    msg.payload.latitude = latitude;\n    msg.payload.longitude = longitude;\n\n    msg.payload.temperature = weather_data.temperature_2m[i];\n    msg.payload.humidity = weather_data.relative_humidity_2m[i];\n    msg.payload.rain = weather_data.rain[i];\n    msg.payload.snowfall = weather_data.snowfall[i];\n    msg.payload.cloud_cover = weather_data.cloud_cover[i];\n    msg.payload.wind_speed = weather_data.wind_speed_10m[i];\n\n    msg.payload.wave_height = waves_data.wave_height[i];\n    msg.payload.wave_direction = waves_data.wave_direction[i];\n    msg.payload.wave_period = waves_data.wave_period[i];\n\n    msg.payload.timestamp = weather_data.time[i];\n\n    node.send(msg);\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 2000,
        "wires": [
            [
                "7548d61d94141cc3"
            ]
        ]
    },
    {
        "id": "eda04aa1085205d4",
        "type": "comment",
        "z": "b3fbb48bc7759dd9",
        "name": "Historical weather & waves data for 2023",
        "info": "",
        "x": 220,
        "y": 1800,
        "wires": []
    },
    {
        "id": "16a6561bd48c1b45",
        "type": "function",
        "z": "b3fbb48bc7759dd9",
        "name": "CREATE TABLE piraeus_historical_data",
        "func": "msg.topic = 'CREATE TABLE piraeus_historical_data (' +\n    'latitude FLOAT,' +\n    'longitude FLOAT,' +\n    'temperature FLOAT,' +\n    'humidity FLOAT,' +\n    'rain FLOAT,' +\n    'snowfall FLOAT,' +\n    'cloud_cover FLOAT,' +\n    'wind_speed FLOAT,' +\n    'wave_height FLOAT,' +\n    'wave_direction FLOAT,' +\n    'wave_period FLOAT,' +\n    'timestamp TEXT' +\n    ')';\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 1840,
        "wires": [
            [
                "331d57747d1624cf"
            ]
        ]
    },
    {
        "id": "932ff34c23df4258",
        "type": "function",
        "z": "b3fbb48bc7759dd9",
        "name": "SELECT TABLE piraeus_historical_data",
        "func": "msg.topic = 'SELECT * FROM piraeus_historical_data';\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 1880,
        "wires": [
            [
                "331d57747d1624cf"
            ]
        ]
    },
    {
        "id": "393592d11c8af73d",
        "type": "inject",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 1840,
        "wires": [
            [
                "16a6561bd48c1b45"
            ]
        ]
    },
    {
        "id": "3a30186ee589c37f",
        "type": "inject",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 1880,
        "wires": [
            [
                "932ff34c23df4258"
            ]
        ]
    },
    {
        "id": "e653c5737c5d9d14",
        "type": "function",
        "z": "b3fbb48bc7759dd9",
        "name": "DROP TABLE piraeus_historical_data",
        "func": "msg.topic = 'DROP TABLE piraeus_historical_data';\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 1920,
        "wires": [
            [
                "331d57747d1624cf"
            ]
        ]
    },
    {
        "id": "ecc0b026c5deb16e",
        "type": "inject",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 1920,
        "wires": [
            [
                "e653c5737c5d9d14"
            ]
        ]
    },
    {
        "id": "69e27ba31c050ee3",
        "type": "inject",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 2000,
        "wires": [
            [
                "7fb0cf4623ba5263",
                "8fcc49f512e308e4"
            ]
        ]
    },
    {
        "id": "cad04ae23efb1d4a",
        "type": "json",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 470,
        "y": 2000,
        "wires": [
            [
                "1a218556a415787b"
            ]
        ]
    },
    {
        "id": "7fb0cf4623ba5263",
        "type": "http request",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://marine-api.open-meteo.com/v1/marine?latitude=37.9838&longitude=23.7278&hourly=wave_height,wave_direction,wave_period&start_date=2023-01-01&end_date=2023-12-31",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 310,
        "y": 2020,
        "wires": [
            [
                "cad04ae23efb1d4a"
            ]
        ]
    },
    {
        "id": "1a218556a415787b",
        "type": "join",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 610,
        "y": 2000,
        "wires": [
            [
                "114313cec0f01f61"
            ]
        ]
    },
    {
        "id": "8fcc49f512e308e4",
        "type": "http request",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://archive-api.open-meteo.com/v1/archive?latitude=37.9838&longitude=23.7278&start_date=2023-01-01&end_date=2023-12-31&hourly=temperature_2m,relative_humidity_2m,rain,snowfall,cloud_cover,wind_speed_10m",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 310,
        "y": 1980,
        "wires": [
            [
                "cad04ae23efb1d4a"
            ]
        ]
    },
    {
        "id": "e6f21d98510d6cb6",
        "type": "sqlite",
        "z": "b3fbb48bc7759dd9",
        "mydb": "5592c0ac1723dc37",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "Database",
        "x": 660,
        "y": 2140,
        "wires": [
            [
                "f1e325076473e013"
            ]
        ]
    },
    {
        "id": "ceb5ab55569e5658",
        "type": "inject",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 2140,
        "wires": [
            [
                "22de9593bdb01c97"
            ]
        ]
    },
    {
        "id": "22de9593bdb01c97",
        "type": "function",
        "z": "b3fbb48bc7759dd9",
        "name": "SELECT TABLE piraeus_historical_data",
        "func": "msg.topic = 'SELECT * FROM piraeus_historical_data';\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 2140,
        "wires": [
            [
                "e6f21d98510d6cb6"
            ]
        ]
    },
    {
        "id": "8f380f9731b630d9",
        "type": "function",
        "z": "b3fbb48bc7759dd9",
        "name": "filter data",
        "func": "var temperature = new Array();\n\ntemperature[0] = msg.payload.temperature;\nmsg.payload = {};\nmsg.payload = temperature;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 2080,
        "wires": [
            [
                "0c76d78a51ab8d21"
            ]
        ]
    },
    {
        "id": "0c76d78a51ab8d21",
        "type": "join",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "mode": "auto",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": "false",
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "x": 1150,
        "y": 2080,
        "wires": [
            [
                "078eab0134d22ae5"
            ]
        ]
    },
    {
        "id": "078eab0134d22ae5",
        "type": "function",
        "z": "b3fbb48bc7759dd9",
        "name": "temperature kmeans clusters",
        "func": "var clusterMaker = context.global.clusters;\n\n//number of clusters, defaults to undefined\nclusterMaker.k(4);\n\n//number of iterations (higher number gives more time to converge), defaults to 1000\nclusterMaker.iterations(750);\n\nclusterMaker.data(msg.payload);\nmsg.payload = clusterMaker.clusters();\n\nmsg.payload.sort(function(a, b) {\n    return parseFloat(a.centroid) - parseFloat(b.centroid);\n});\n\nglobal.set(\"piraeusTemperatureClusters\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1360,
        "y": 2080,
        "wires": [
            [
                "6132ea2330057e31"
            ]
        ]
    },
    {
        "id": "6132ea2330057e31",
        "type": "debug",
        "z": "b3fbb48bc7759dd9",
        "name": "message",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1620,
        "y": 2140,
        "wires": []
    },
    {
        "id": "361ff05cc930f3ff",
        "type": "function",
        "z": "b3fbb48bc7759dd9",
        "name": "filter data",
        "func": "var rain = new Array();\n\nrain[0] = msg.payload.rain;\nmsg.payload = {};\nmsg.payload = rain;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 2120,
        "wires": [
            [
                "d468fcc902bbe018"
            ]
        ]
    },
    {
        "id": "d468fcc902bbe018",
        "type": "join",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "mode": "auto",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": "false",
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "x": 1150,
        "y": 2120,
        "wires": [
            [
                "b7dc5e0ae15f1812"
            ]
        ]
    },
    {
        "id": "b7dc5e0ae15f1812",
        "type": "function",
        "z": "b3fbb48bc7759dd9",
        "name": "rain kmeans clusters",
        "func": "var clusterMaker = context.global.clusters;\n\n//number of clusters, defaults to undefined\nclusterMaker.k(4);\n\n//number of iterations (higher number gives more time to converge), defaults to 1000\nclusterMaker.iterations(750);\n\nclusterMaker.data(msg.payload);\nmsg.payload = clusterMaker.clusters();\n\nmsg.payload.sort(function(a, b) {\n    return parseFloat(b.centroid) - parseFloat(a.centroid);\n});\n\nglobal.set(\"piraeusRainClusters\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1380,
        "y": 2120,
        "wires": [
            [
                "6132ea2330057e31"
            ]
        ]
    },
    {
        "id": "52e1fe8703cbecc9",
        "type": "function",
        "z": "b3fbb48bc7759dd9",
        "name": "filter data",
        "func": "var wind_speed = new Array();\n\nwind_speed[0] = msg.payload.wind_speed;\nmsg.payload = {};\nmsg.payload = wind_speed;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 2160,
        "wires": [
            [
                "429dfad6764b4b78"
            ]
        ]
    },
    {
        "id": "429dfad6764b4b78",
        "type": "join",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "mode": "auto",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": "false",
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "x": 1150,
        "y": 2160,
        "wires": [
            [
                "58795d090647e7dc"
            ]
        ]
    },
    {
        "id": "58795d090647e7dc",
        "type": "function",
        "z": "b3fbb48bc7759dd9",
        "name": "wind_speed kmeans clusters",
        "func": "var clusterMaker = context.global.clusters;\n\n//number of clusters, defaults to undefined\nclusterMaker.k(4);\n\n//number of iterations (higher number gives more time to converge), defaults to 1000\nclusterMaker.iterations(750);\n\nclusterMaker.data(msg.payload);\nmsg.payload = clusterMaker.clusters();\n\nmsg.payload.sort(function(a, b) {\n    return parseFloat(b.centroid) - parseFloat(a.centroid);\n});\n\nglobal.set(\"piraeusWindSpeedClusters\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1360,
        "y": 2160,
        "wires": [
            [
                "6132ea2330057e31"
            ]
        ]
    },
    {
        "id": "d527e8147f9f7816",
        "type": "function",
        "z": "b3fbb48bc7759dd9",
        "name": "filter data",
        "func": "var wave_height = new Array();\n\nwave_height[0] = msg.payload.wave_height;\nmsg.payload = {};\nmsg.payload = wave_height;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 2200,
        "wires": [
            [
                "4f35dcb00629323f"
            ]
        ]
    },
    {
        "id": "4f35dcb00629323f",
        "type": "join",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "mode": "auto",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": "false",
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "x": 1150,
        "y": 2200,
        "wires": [
            [
                "88a44538a2a088be"
            ]
        ]
    },
    {
        "id": "88a44538a2a088be",
        "type": "function",
        "z": "b3fbb48bc7759dd9",
        "name": "wave_height kmeans clusters",
        "func": "var clusterMaker = context.global.clusters;\n\n//number of clusters, defaults to undefined\nclusterMaker.k(4);\n\n//number of iterations (higher number gives more time to converge), defaults to 1000\nclusterMaker.iterations(750);\n\nclusterMaker.data(msg.payload);\nmsg.payload = clusterMaker.clusters();\n\nmsg.payload.sort(function(a, b) {\n    return parseFloat(b.centroid) - parseFloat(a.centroid);\n});\n\nglobal.set(\"piraeusWaveHeightClusters\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1350,
        "y": 2200,
        "wires": [
            [
                "6132ea2330057e31"
            ]
        ]
    },
    {
        "id": "f1e325076473e013",
        "type": "split",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 810,
        "y": 2140,
        "wires": [
            [
                "8f380f9731b630d9",
                "361ff05cc930f3ff",
                "52e1fe8703cbecc9",
                "d527e8147f9f7816"
            ]
        ]
    },
    {
        "id": "0db9e82ffe69ce77",
        "type": "function",
        "z": "b3fbb48bc7759dd9",
        "name": "clusters",
        "func": "var temperature = msg.payload.temperature;\nvar rain = msg.payload.rain;\nvar wind_speed = msg.payload.wind_speed;\nvar wave_height = msg.payload.wave_height;\nvar timestamp = msg.payload.timestamp;\n\nvar lat = msg.payload.latitude;\nvar lon = msg.payload.longitude;\n\nvar temperature_clusters = global.get('piraeusTemperatureClusters');\nvar rain_clusters = global.get('piraeusRainClusters');\nvar wind_speed_clusters = global.get('piraeusWindSpeedClusters');\nvar wave_height_clusters = global.get('piraeusWaveHeightClusters');\n\nvar name = \"Piraeus\"\n\nvar diff;\nvar min;\n\nmin = 10000000;\nvar overall_temperature_cluster = -1;\nfor (var k = 0; k < temperature_clusters.length;k++) {\n    diff = Math.abs(temperature_clusters[k].centroid[0] - temperature);\n    if (diff<min) {\n        overall_temperature_cluster = k;\n        min = diff;\n    }\n}\n\nmin = 10000000;\nvar overall_rain_cluster = -1;\nfor (var k = 0; k < rain_clusters.length; k++) {\n    diff = Math.abs(rain_clusters[k].centroid[0] - rain);\n    if (diff < min) {\n        overall_rain_cluster = k;\n        min = diff;\n    }\n}\n\nmin = 10000000;\nvar overall_wind_speed_cluster = -1;\nfor (var k = 0; k < wind_speed_clusters.length; k++) {\n    diff = Math.abs(wind_speed_clusters[k].centroid[0] - wind_speed);\n    if (diff < min) {\n        overall_wind_speed_cluster = k;\n        min = diff;\n    }\n}\n\nmin = 10000000;\nvar overall_wave_height_cluster = -1;\nfor (var k = 0; k < wave_height_clusters.length; k++) {\n    diff = Math.abs(wave_height_clusters[k].centroid[0] - wave_height);\n    if (diff < min) {\n        overall_wave_height_cluster = k;\n        min = diff;\n    }\n}\n\nvar temperatureState;\nswitch (overall_temperature_cluster) {\n    case 0:\n        temperatureState = \"bad state\"\n        break;\n    case 1:\n        temperatureState = \"moderate state\"\n        break;\n    case 2:\n        temperatureState = \"good state\"\n        break;\n    case 3:\n        temperatureState = \"excellent state\"\n        break;\n    default:\n        temperatureState = \"unknown state\"\n}\n\nvar rainState;\nswitch (overall_rain_cluster) {\n    case 0:\n        rainState = \"bad state\"\n        break;\n    case 1:\n        rainState = \"moderate state\"\n        break;\n    case 2:\n        rainState = \"good state\"\n        break;\n    case 3:\n        rainState = \"excellent state\"\n        break;\n    default:\n        rainState = \"unknown state\"\n}\n\nvar windSpeedState;\nswitch (overall_wind_speed_cluster) {\n    case 0:\n        windSpeedState = \"bad state\"\n        break;\n    case 1:\n        windSpeedState = \"moderate state\"\n        break;\n    case 2:\n        windSpeedState = \"good state\"\n        break;\n    case 3:\n        windSpeedState = \"excellent state\"\n        break;\n    default:\n        windSpeedState = \"unknown state\"\n}\n\nvar waveHeightState;\nswitch (overall_wave_height_cluster) {\n    case 0:\n        waveHeightState = \"bad state\"\n        break;\n    case 1:\n        waveHeightState = \"moderate state\"\n        break;\n    case 2:\n        waveHeightState = \"good state\"\n        break;\n    case 3:\n        waveHeightState = \"excellent state\"\n        break;\n    default:\n        waveHeightState = \"unknown state\"\n}\n\nvar states = [temperatureState, rainState, windSpeedState, waveHeightState];\n\nvar statePriority = {\n    \"bad state\": 3,\n    \"moderate state\": 2,\n    \"good state\": 1,\n    \"excellent state\": 0\n};\n\nvar priorityColor = {\n    3: \"red\",\n    2: \"orange\",\n    1: \"green\",\n    0: \"blue\"\n};\n\nvar highestPriority = -1;\nfor (var i = 0; i < states.length; i++) {\n    var currentState = states[i];\n    if (statePriority.hasOwnProperty(currentState)) {\n        var currentPriority = statePriority[currentState];\n        if (currentPriority > highestPriority) {\n            highestPriority = currentPriority;\n        }\n    }\n}\n\nvar iconColor = \"grey\";\niconColor = priorityColor[highestPriority]\n\nmsg.payload = {};\nmsg.payload.name = name;\nmsg.payload.lat = lat;\nmsg.payload.lon = lon;\nmsg.payload.timestamp = timestamp;\nmsg.payload.iconColor = iconColor;\nmsg.payload.layer = \"location\";\n\nmsg.payload.temperature = temperature;\nmsg.payload.temperatureState = temperatureState;\n\nmsg.payload.rain = rain;\nmsg.payload.rainState = rainState;\n\nmsg.payload.wind_speed = wind_speed;\nmsg.payload.windSpeedState = windSpeedState;\n\nmsg.payload.wave_height = wave_height;\nmsg.payload.waveHeightState = waveHeightState;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 2320,
        "wires": [
            [
                "9384d79db445db69",
                "1789322a1c8c5151",
                "30344a53ac70dfa4"
            ]
        ]
    },
    {
        "id": "52207849efb75876",
        "type": "inject",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 2440,
        "wires": [
            [
                "088588d7ca356b7f",
                "9d1a0a3e91c02737"
            ]
        ]
    },
    {
        "id": "9cf9cff306175680",
        "type": "json",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 450,
        "y": 2440,
        "wires": [
            [
                "368945d43b83b922"
            ]
        ]
    },
    {
        "id": "088588d7ca356b7f",
        "type": "http request",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://api.open-meteo.com/v1/forecast?latitude=37.9838&longitude=23.7278&hourly=temperature_2m,relative_humidity_2m,rain,showers,snowfall,cloud_cover,wind_speed_10m&forecast_days=2&timezone=auto",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 310,
        "y": 2420,
        "wires": [
            [
                "9cf9cff306175680"
            ]
        ]
    },
    {
        "id": "9d1a0a3e91c02737",
        "type": "http request",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://marine-api.open-meteo.com/v1/marine?latitude=37.9838&longitude=23.7278&hourly=wave_height,wave_direction,wave_period&timezone=auto&forecast_days=2",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 310,
        "y": 2460,
        "wires": [
            [
                "9cf9cff306175680"
            ]
        ]
    },
    {
        "id": "368945d43b83b922",
        "type": "join",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 570,
        "y": 2440,
        "wires": [
            [
                "a9ad38ef68e5cea0"
            ]
        ]
    },
    {
        "id": "419a1e5a1ed6249e",
        "type": "inject",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 2300,
        "wires": [
            [
                "f2e53dea5af14a87",
                "20dae60212f7fc16"
            ]
        ]
    },
    {
        "id": "f2e53dea5af14a87",
        "type": "http request",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://api.open-meteo.com/v1/forecast?latitude=37.944709&longitude=23.638304&current=temperature_2m,relative_humidity_2m,rain,showers,snowfall,cloud_cover,wind_speed_10m&timezone=auto",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 310,
        "y": 2300,
        "wires": [
            [
                "2ae331a31fd3bcb3"
            ]
        ]
    },
    {
        "id": "2ae331a31fd3bcb3",
        "type": "json",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 450,
        "y": 2320,
        "wires": [
            [
                "5e5569f1eff61302"
            ]
        ]
    },
    {
        "id": "975432478fa198e0",
        "type": "function",
        "z": "b3fbb48bc7759dd9",
        "name": "make row",
        "func": "var weather_data;\nvar waves_data;\n\nvar latitude;\nvar longitude;\n\nif(msg.payload[0].current.temperature_2m !== undefined){\n    weather_data = msg.payload[0].current;\n    waves_data = msg.payload[1].current;\n    latitude = msg.payload[1].latitude;\n    longitude = msg.payload[1].longitude;\n}else{\n    weather_data = msg.payload[1].current;\n    waves_data = msg.payload[0].current;\n    latitude = msg.payload[0].latitude;\n    longitude = msg.payload[0].longitude;\n}\n\nvar message = {};\n\nmessage.temperature = weather_data.temperature_2m;\nmessage.humidity = weather_data.relative_humidity_2m;\nmessage.rain = weather_data.rain;\nmessage.showers = weather_data.showers;\nmessage.snowfall = weather_data.snowfall;\nmessage.cloud_cover = weather_data.cloud_cover;\nmessage.wind_speed = weather_data.wind_speed_10m;\n\nmessage.wave_height = waves_data.wave_height;\nmessage.wave_direction = waves_data.wave_direction;\nmessage.wave_period = waves_data.wave_period;\n\nmessage.latitude = latitude;\nmessage.longitude = longitude;\n\nmessage.timestamp = weather_data.time;\n\nmsg.payload = {};\nmsg.payload = message;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 2320,
        "wires": [
            [
                "0db9e82ffe69ce77"
            ]
        ]
    },
    {
        "id": "20dae60212f7fc16",
        "type": "http request",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://marine-api.open-meteo.com/v1/marine?latitude=37.944709&longitude=23.638304&current=wave_height,wave_direction,wave_period&timezone=auto",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 310,
        "y": 2340,
        "wires": [
            [
                "2ae331a31fd3bcb3"
            ]
        ]
    },
    {
        "id": "5e5569f1eff61302",
        "type": "join",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 570,
        "y": 2320,
        "wires": [
            [
                "975432478fa198e0"
            ]
        ]
    },
    {
        "id": "21f0ca2b6c5b5549",
        "type": "comment",
        "z": "b3fbb48bc7759dd9",
        "name": "current data",
        "info": "",
        "x": 130,
        "y": 2260,
        "wires": []
    },
    {
        "id": "d12f1df369281760",
        "type": "comment",
        "z": "b3fbb48bc7759dd9",
        "name": "hourly data",
        "info": "",
        "x": 120,
        "y": 2400,
        "wires": []
    },
    {
        "id": "9384d79db445db69",
        "type": "debug",
        "z": "b3fbb48bc7759dd9",
        "name": "message",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1020,
        "y": 2380,
        "wires": []
    },
    {
        "id": "501ed10e34db4178",
        "type": "comment",
        "z": "b3fbb48bc7759dd9",
        "name": "Clustering",
        "info": "",
        "x": 120,
        "y": 2100,
        "wires": []
    },
    {
        "id": "6fc1ba49c4df9573",
        "type": "debug",
        "z": "b3fbb48bc7759dd9",
        "name": "message",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1080,
        "y": 1300,
        "wires": []
    },
    {
        "id": "191dc7d897d467b6",
        "type": "link in",
        "z": "b3fbb48bc7759dd9",
        "name": "link in 12",
        "links": [
            "166e0a89e897ded9",
            "d00fc06215943a02",
            "bcf6490b4d911af1",
            "c61f9264afdacb80",
            "3f522fff00ee33bb",
            "1fb09189f3ce504f",
            "8fd3c6e5aa41174f",
            "0266aaaf679fbf8a",
            "85a30b3d461ce6a4",
            "e7899229b429322b",
            "ff9d3fabc538ead5",
            "aedd1a42714f73c0",
            "4770713a1dd7a4fb",
            "0c04f31606d907d2",
            "f3e4214d473e8d2d",
            "8e0bbd5de2c6b64e",
            "f2c67974955cb099",
            "68659ce8c0263d09",
            "ce946bb289524993",
            "d856b38cd482fe04",
            "8dad7585d43f131e"
        ],
        "x": 545,
        "y": 500,
        "wires": [
            [
                "8a34f7ebf11f44e2"
            ]
        ]
    },
    {
        "id": "166e0a89e897ded9",
        "type": "link out",
        "z": "b3fbb48bc7759dd9",
        "name": "link out 42",
        "mode": "link",
        "links": [
            "191dc7d897d467b6"
        ],
        "x": 435,
        "y": 280,
        "wires": []
    },
    {
        "id": "6a197805cbf5a6c5",
        "type": "inject",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "3600",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 400,
        "wires": [
            [
                "5b73f637959dde58",
                "0f586a8bcff67335"
            ]
        ]
    },
    {
        "id": "5b73f637959dde58",
        "type": "http request",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://api.open-meteo.com/v1/forecast?latitude=35.489126&longitude=24.0755468&current=temperature_2m,relative_humidity_2m,rain,showers,snowfall,cloud_cover,wind_speed_10m&timezone=auto",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 330,
        "y": 380,
        "wires": [
            [
                "bcf6490b4d911af1"
            ]
        ]
    },
    {
        "id": "0f586a8bcff67335",
        "type": "http request",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://marine-api.open-meteo.com/v1/marine?latitude=35.489126&longitude=24.075546&current=wave_height,wave_direction,wave_period&timezone=auto",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 330,
        "y": 420,
        "wires": [
            [
                "c61f9264afdacb80"
            ]
        ]
    },
    {
        "id": "dcc51cefb0d2a366",
        "type": "comment",
        "z": "b3fbb48bc7759dd9",
        "name": "Piraeus",
        "info": "",
        "x": 110,
        "y": 260,
        "wires": []
    },
    {
        "id": "673dfdb192dcfafd",
        "type": "comment",
        "z": "b3fbb48bc7759dd9",
        "name": "Crete",
        "info": "",
        "x": 110,
        "y": 360,
        "wires": []
    },
    {
        "id": "d00fc06215943a02",
        "type": "link out",
        "z": "b3fbb48bc7759dd9",
        "name": "link out 43",
        "mode": "link",
        "links": [
            "191dc7d897d467b6"
        ],
        "x": 435,
        "y": 320,
        "wires": []
    },
    {
        "id": "bcf6490b4d911af1",
        "type": "link out",
        "z": "b3fbb48bc7759dd9",
        "name": "link out 44",
        "mode": "link",
        "links": [
            "191dc7d897d467b6"
        ],
        "x": 435,
        "y": 380,
        "wires": []
    },
    {
        "id": "c61f9264afdacb80",
        "type": "link out",
        "z": "b3fbb48bc7759dd9",
        "name": "link out 45",
        "mode": "link",
        "links": [
            "191dc7d897d467b6"
        ],
        "x": 435,
        "y": 420,
        "wires": []
    },
    {
        "id": "4b7ff47786b8f7cc",
        "type": "inject",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "3600",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 500,
        "wires": [
            [
                "1af71afed474c0f6",
                "97906035bad14cdd"
            ]
        ]
    },
    {
        "id": "1af71afed474c0f6",
        "type": "http request",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://api.open-meteo.com/v1/forecast?latitude=40.635485&longitude=22.932838&current=temperature_2m,relative_humidity_2m,rain,showers,snowfall,cloud_cover,wind_speed_10m&timezone=auto",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 330,
        "y": 480,
        "wires": [
            [
                "3f522fff00ee33bb"
            ]
        ]
    },
    {
        "id": "97906035bad14cdd",
        "type": "http request",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://marine-api.open-meteo.com/v1/marine?latitude=40.635485&longitude=22.932838&current=wave_height,wave_direction,wave_period&timezone=auto",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 330,
        "y": 520,
        "wires": [
            [
                "1fb09189f3ce504f"
            ]
        ]
    },
    {
        "id": "1e382c886673a2c8",
        "type": "comment",
        "z": "b3fbb48bc7759dd9",
        "name": "Thessaloniki",
        "info": "",
        "x": 130,
        "y": 460,
        "wires": []
    },
    {
        "id": "3f522fff00ee33bb",
        "type": "link out",
        "z": "b3fbb48bc7759dd9",
        "name": "link out 46",
        "mode": "link",
        "links": [
            "191dc7d897d467b6"
        ],
        "x": 435,
        "y": 480,
        "wires": []
    },
    {
        "id": "1fb09189f3ce504f",
        "type": "link out",
        "z": "b3fbb48bc7759dd9",
        "name": "link out 47",
        "mode": "link",
        "links": [
            "191dc7d897d467b6"
        ],
        "x": 435,
        "y": 520,
        "wires": []
    },
    {
        "id": "a3338c3ea8a73549",
        "type": "http request",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://api.open-meteo.com/v1/forecast?latitude=35.489126&longitude=24.075546&hourly=temperature_2m,relative_humidity_2m,rain,showers,snowfall,cloud_cover,wind_speed_10m&forecast_days=2&timezone=auto",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 330,
        "y": 1240,
        "wires": [
            [
                "d9b62df4b4df8527"
            ]
        ]
    },
    {
        "id": "94bee9152a255e0d",
        "type": "http request",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://marine-api.open-meteo.com/v1/marine?latitude=35.489126&longitude=24.075546&hourly=wave_height,wave_direction,wave_period&timezone=auto&forecast_days=2",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 330,
        "y": 1280,
        "wires": [
            [
                "f239cc8575321c23"
            ]
        ]
    },
    {
        "id": "f67995140fe4c88a",
        "type": "link out",
        "z": "b3fbb48bc7759dd9",
        "name": "link out 48",
        "mode": "link",
        "links": [
            "99f205b2514109cc"
        ],
        "x": 435,
        "y": 1140,
        "wires": []
    },
    {
        "id": "2cf2a5f3b06bd80d",
        "type": "link out",
        "z": "b3fbb48bc7759dd9",
        "name": "link out 49",
        "mode": "link",
        "links": [
            "99f205b2514109cc"
        ],
        "x": 435,
        "y": 1180,
        "wires": []
    },
    {
        "id": "99f205b2514109cc",
        "type": "link in",
        "z": "b3fbb48bc7759dd9",
        "name": "link in 13",
        "links": [
            "f67995140fe4c88a",
            "2cf2a5f3b06bd80d",
            "d9b62df4b4df8527",
            "f239cc8575321c23",
            "165b8c25c729d7e5",
            "0a7cd6b169892ba7",
            "6caf90c41a8b5217",
            "5178bb13c6f66f25",
            "b5d40fed8c011ee9",
            "98cef7ab68a82959"
        ],
        "x": 545,
        "y": 1360,
        "wires": [
            [
                "2bffca75ce96bc96"
            ]
        ]
    },
    {
        "id": "d9b62df4b4df8527",
        "type": "link out",
        "z": "b3fbb48bc7759dd9",
        "name": "link out 50",
        "mode": "link",
        "links": [
            "99f205b2514109cc"
        ],
        "x": 435,
        "y": 1240,
        "wires": []
    },
    {
        "id": "f239cc8575321c23",
        "type": "link out",
        "z": "b3fbb48bc7759dd9",
        "name": "link out 51",
        "mode": "link",
        "links": [
            "99f205b2514109cc"
        ],
        "x": 435,
        "y": 1280,
        "wires": []
    },
    {
        "id": "8156f7e391c9f689",
        "type": "comment",
        "z": "b3fbb48bc7759dd9",
        "name": "Piraeus",
        "info": "",
        "x": 110,
        "y": 1120,
        "wires": []
    },
    {
        "id": "c2087d6603019378",
        "type": "comment",
        "z": "b3fbb48bc7759dd9",
        "name": "Crete",
        "info": "",
        "x": 110,
        "y": 1220,
        "wires": []
    },
    {
        "id": "c6afabaf6093fdea",
        "type": "comment",
        "z": "b3fbb48bc7759dd9",
        "name": "Thessaloniki",
        "info": "",
        "x": 130,
        "y": 1320,
        "wires": []
    },
    {
        "id": "57383dcaff936fcb",
        "type": "http request",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://api.open-meteo.com/v1/forecast?latitude=40.635485&longitude=22.932838&hourly=temperature_2m,relative_humidity_2m,rain,showers,snowfall,cloud_cover,wind_speed_10m&forecast_days=2&timezone=auto",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 330,
        "y": 1340,
        "wires": [
            [
                "165b8c25c729d7e5"
            ]
        ]
    },
    {
        "id": "dbd478540dae3649",
        "type": "http request",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://marine-api.open-meteo.com/v1/marine?latitude=40.635485&longitude=22.932838&hourly=wave_height,wave_direction,wave_period&timezone=auto&forecast_days=2",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 330,
        "y": 1380,
        "wires": [
            [
                "0a7cd6b169892ba7"
            ]
        ]
    },
    {
        "id": "165b8c25c729d7e5",
        "type": "link out",
        "z": "b3fbb48bc7759dd9",
        "name": "link out 52",
        "mode": "link",
        "links": [
            "99f205b2514109cc"
        ],
        "x": 435,
        "y": 1340,
        "wires": []
    },
    {
        "id": "0a7cd6b169892ba7",
        "type": "link out",
        "z": "b3fbb48bc7759dd9",
        "name": "link out 53",
        "mode": "link",
        "links": [
            "99f205b2514109cc"
        ],
        "x": 435,
        "y": 1380,
        "wires": []
    },
    {
        "id": "cd6e5fb1f0cd7a77",
        "type": "http request",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://api.open-meteo.com/v1/forecast?latitude=39.63028&longitude=19.90177&hourly=temperature_2m,relative_humidity_2m,rain,showers,snowfall,cloud_cover,wind_speed_10m&forecast_days=2&timezone=auto",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 330,
        "y": 1440,
        "wires": [
            [
                "6caf90c41a8b5217"
            ]
        ]
    },
    {
        "id": "4b8aea4626b79da9",
        "type": "http request",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://marine-api.open-meteo.com/v1/marine?latitude=39.63028&longitude=19.90177&hourly=wave_height,wave_direction,wave_period&timezone=auto&forecast_days=2",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 330,
        "y": 1480,
        "wires": [
            [
                "5178bb13c6f66f25"
            ]
        ]
    },
    {
        "id": "6caf90c41a8b5217",
        "type": "link out",
        "z": "b3fbb48bc7759dd9",
        "name": "link out 54",
        "mode": "link",
        "links": [
            "99f205b2514109cc"
        ],
        "x": 435,
        "y": 1440,
        "wires": []
    },
    {
        "id": "5178bb13c6f66f25",
        "type": "link out",
        "z": "b3fbb48bc7759dd9",
        "name": "link out 55",
        "mode": "link",
        "links": [
            "99f205b2514109cc"
        ],
        "x": 435,
        "y": 1480,
        "wires": []
    },
    {
        "id": "a9f44a0f19552f7c",
        "type": "comment",
        "z": "b3fbb48bc7759dd9",
        "name": "Kerkyra",
        "info": "",
        "x": 110,
        "y": 1420,
        "wires": []
    },
    {
        "id": "409dc10ce7ae9d55",
        "type": "comment",
        "z": "b3fbb48bc7759dd9",
        "name": "Lesvos",
        "info": "",
        "x": 110,
        "y": 1520,
        "wires": []
    },
    {
        "id": "0a48a3ca4c091a6a",
        "type": "http request",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://api.open-meteo.com/v1/forecast?latitude=39.10412&longitude=26.56064&hourly=temperature_2m,relative_humidity_2m,rain,showers,snowfall,cloud_cover,wind_speed_10m&forecast_days=2&timezone=auto",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 330,
        "y": 1540,
        "wires": [
            [
                "b5d40fed8c011ee9"
            ]
        ]
    },
    {
        "id": "a10676918fb90a2a",
        "type": "http request",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://marine-api.open-meteo.com/v1/marine?latitude=39.10412&longitude=26.56064&hourly=wave_height,wave_direction,wave_period&timezone=auto&forecast_days=2",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 330,
        "y": 1580,
        "wires": [
            [
                "98cef7ab68a82959"
            ]
        ]
    },
    {
        "id": "b5d40fed8c011ee9",
        "type": "link out",
        "z": "b3fbb48bc7759dd9",
        "name": "link out 56",
        "mode": "link",
        "links": [
            "99f205b2514109cc"
        ],
        "x": 435,
        "y": 1540,
        "wires": []
    },
    {
        "id": "98cef7ab68a82959",
        "type": "link out",
        "z": "b3fbb48bc7759dd9",
        "name": "link out 57",
        "mode": "link",
        "links": [
            "99f205b2514109cc"
        ],
        "x": 435,
        "y": 1580,
        "wires": []
    },
    {
        "id": "82cb77b133342062",
        "type": "inject",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "3600",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 600,
        "wires": [
            [
                "45c6803258ea53cc",
                "d89053e6a04c403c"
            ]
        ]
    },
    {
        "id": "45c6803258ea53cc",
        "type": "http request",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://api.open-meteo.com/v1/forecast?latitude=39.63028&longitude=19.90177&current=temperature_2m,relative_humidity_2m,rain,showers,snowfall,cloud_cover,wind_speed_10m&timezone=auto",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 330,
        "y": 580,
        "wires": [
            [
                "8fd3c6e5aa41174f"
            ]
        ]
    },
    {
        "id": "d89053e6a04c403c",
        "type": "http request",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://marine-api.open-meteo.com/v1/marine?latitude=39.63028&longitude=19.90177&current=wave_height,wave_direction,wave_period&timezone=auto",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 330,
        "y": 620,
        "wires": [
            [
                "0266aaaf679fbf8a"
            ]
        ]
    },
    {
        "id": "8fd3c6e5aa41174f",
        "type": "link out",
        "z": "b3fbb48bc7759dd9",
        "name": "link out 58",
        "mode": "link",
        "links": [
            "191dc7d897d467b6"
        ],
        "x": 435,
        "y": 580,
        "wires": []
    },
    {
        "id": "0266aaaf679fbf8a",
        "type": "link out",
        "z": "b3fbb48bc7759dd9",
        "name": "link out 59",
        "mode": "link",
        "links": [
            "191dc7d897d467b6"
        ],
        "x": 435,
        "y": 620,
        "wires": []
    },
    {
        "id": "4e2d1390f52deff8",
        "type": "inject",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "3600",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 700,
        "wires": [
            [
                "1296fc396da62aab",
                "fa6c65a3c56545bc"
            ]
        ]
    },
    {
        "id": "1296fc396da62aab",
        "type": "http request",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://api.open-meteo.com/v1/forecast?latitude=39.10412&longitude=26.56064&current=temperature_2m,relative_humidity_2m,rain,showers,snowfall,cloud_cover,wind_speed_10m&timezone=auto",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 330,
        "y": 680,
        "wires": [
            [
                "85a30b3d461ce6a4"
            ]
        ]
    },
    {
        "id": "fa6c65a3c56545bc",
        "type": "http request",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://marine-api.open-meteo.com/v1/marine?latitude=39.10412&longitude=26.56064&current=wave_height,wave_direction,wave_period&timezone=auto",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 330,
        "y": 720,
        "wires": [
            [
                "e7899229b429322b"
            ]
        ]
    },
    {
        "id": "85a30b3d461ce6a4",
        "type": "link out",
        "z": "b3fbb48bc7759dd9",
        "name": "link out 60",
        "mode": "link",
        "links": [
            "191dc7d897d467b6"
        ],
        "x": 435,
        "y": 680,
        "wires": []
    },
    {
        "id": "e7899229b429322b",
        "type": "link out",
        "z": "b3fbb48bc7759dd9",
        "name": "link out 61",
        "mode": "link",
        "links": [
            "191dc7d897d467b6"
        ],
        "x": 435,
        "y": 720,
        "wires": []
    },
    {
        "id": "f500f18817ad38e6",
        "type": "comment",
        "z": "b3fbb48bc7759dd9",
        "name": "Kerkyra",
        "info": "",
        "x": 110,
        "y": 560,
        "wires": []
    },
    {
        "id": "a829bab561486ee5",
        "type": "comment",
        "z": "b3fbb48bc7759dd9",
        "name": "Lesvos",
        "info": "",
        "x": 110,
        "y": 660,
        "wires": []
    },
    {
        "id": "c32f9f6e956d0b64",
        "type": "sqlite",
        "z": "b3fbb48bc7759dd9",
        "mydb": "5592c0ac1723dc37",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "Database",
        "x": 620,
        "y": 1020,
        "wires": [
            [
                "0152e4b92a8161f9"
            ]
        ]
    },
    {
        "id": "0152e4b92a8161f9",
        "type": "debug",
        "z": "b3fbb48bc7759dd9",
        "name": "message",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 780,
        "y": 1020,
        "wires": []
    },
    {
        "id": "f8362e675b80898f",
        "type": "link in",
        "z": "b3fbb48bc7759dd9",
        "name": "link in 19",
        "links": [
            "bc8f6ea4d3a69a85",
            "48fdf1f0c976aeeb",
            "a617f9cd9221bbf4",
            "8723e7f97e183a6e"
        ],
        "x": 465,
        "y": 1080,
        "wires": [
            [
                "c32f9f6e956d0b64"
            ]
        ]
    },
    {
        "id": "331d57747d1624cf",
        "type": "sqlite",
        "z": "b3fbb48bc7759dd9",
        "mydb": "5592c0ac1723dc37",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "Database",
        "x": 700,
        "y": 1900,
        "wires": [
            [
                "04f253e60292d75c"
            ]
        ]
    },
    {
        "id": "04f253e60292d75c",
        "type": "debug",
        "z": "b3fbb48bc7759dd9",
        "name": "message",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 860,
        "y": 1900,
        "wires": []
    },
    {
        "id": "f8e61b2a37e5a87e",
        "type": "link in",
        "z": "b3fbb48bc7759dd9",
        "name": "link in 20",
        "links": [
            "2da309db89650ac1",
            "9052c71b5baabac3",
            "a5ff9fa841381c01",
            "09369f777d7996ef"
        ],
        "x": 545,
        "y": 1960,
        "wires": [
            [
                "331d57747d1624cf"
            ]
        ]
    },
    {
        "id": "28699f145dcc1e56",
        "type": "link out",
        "z": "b3fbb48bc7759dd9",
        "name": "link out 62",
        "mode": "link",
        "links": [
            "8f23406a8c40fa28",
            "ccb1a923955e85e0",
            "1deaf81aa095cc6d",
            "4c8b7e0bb66aacb4",
            "acd94049dbb1094f",
            "72bfe3bef3dc0bca"
        ],
        "x": 1215,
        "y": 2900,
        "wires": []
    },
    {
        "id": "15d8dc20bdac9709",
        "type": "function",
        "z": "b3fbb48bc7759dd9",
        "name": "INSERT TABLE crete_historical_data",
        "func": "var values = Object.values(msg.payload);\nvalues = values.join(\"','\");\n\nmsg.topic = \"INSERT INTO crete_historical_data (latitude, longitude, temperature, humidity, rain, snowfall, cloud_cover, wind_speed, wave_height, wave_direction, wave_period, timestamp) VALUES ('\" + values + \"')\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 2900,
        "wires": [
            [
                "28699f145dcc1e56"
            ]
        ]
    },
    {
        "id": "5efeb0b0a7c720f1",
        "type": "function",
        "z": "b3fbb48bc7759dd9",
        "name": "make rows",
        "func": "var weather_data;\nvar waves_data;\n\nvar latitude;\nvar longitude;\n\nif (msg.payload[0].hourly.temperature_2m !== undefined) {\n    weather_data = msg.payload[0].hourly;\n    waves_data = msg.payload[1].hourly;\n    latitude = msg.payload[1].latitude;\n    longitude = msg.payload[1].longitude;\n} else {\n    weather_data = msg.payload[1].hourly;\n    waves_data = msg.payload[0].hourly;\n    latitude = msg.payload[0].latitude;\n    longitude = msg.payload[0].longitude;\n}\n\nfor (var i = 0; i < weather_data.time.length; i++) {  \n    \n    msg.payload = {};\n    \n    msg.payload.latitude = latitude;\n    msg.payload.longitude = longitude;\n\n    msg.payload.temperature = weather_data.temperature_2m[i];\n    msg.payload.humidity = weather_data.relative_humidity_2m[i];\n    msg.payload.rain = weather_data.rain[i];\n    msg.payload.snowfall = weather_data.snowfall[i];\n    msg.payload.cloud_cover = weather_data.cloud_cover[i];\n    msg.payload.wind_speed = weather_data.wind_speed_10m[i];\n\n    msg.payload.wave_height = waves_data.wave_height[i];\n    msg.payload.wave_direction = waves_data.wave_direction[i];\n    msg.payload.wave_period = waves_data.wave_period[i];\n\n    msg.payload.timestamp = weather_data.time[i];\n\n    node.send(msg);\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 2900,
        "wires": [
            [
                "15d8dc20bdac9709"
            ]
        ]
    },
    {
        "id": "28483a90f50c5889",
        "type": "comment",
        "z": "b3fbb48bc7759dd9",
        "name": "Historical weather & waves data for 2023",
        "info": "",
        "x": 220,
        "y": 2700,
        "wires": []
    },
    {
        "id": "70fb573c6ab0347c",
        "type": "function",
        "z": "b3fbb48bc7759dd9",
        "name": "CREATE TABLE crete_historical_data",
        "func": "msg.topic = 'CREATE TABLE crete_historical_data (' +\n    'latitude FLOAT,' +\n    'longitude FLOAT,' +\n    'temperature FLOAT,' +\n    'humidity FLOAT,' +\n    'rain FLOAT,' +\n    'snowfall FLOAT,' +\n    'cloud_cover FLOAT,' +\n    'wind_speed FLOAT,' +\n    'wave_height FLOAT,' +\n    'wave_direction FLOAT,' +\n    'wave_period FLOAT,' +\n    'timestamp TEXT' +\n    ')';\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 2740,
        "wires": [
            [
                "2834825889dabbbc"
            ]
        ]
    },
    {
        "id": "7163fa2a7b3629b9",
        "type": "function",
        "z": "b3fbb48bc7759dd9",
        "name": "SELECT TABLE crete_historical_data",
        "func": "msg.topic = 'SELECT * FROM crete_historical_data';\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 2780,
        "wires": [
            [
                "2834825889dabbbc"
            ]
        ]
    },
    {
        "id": "08702bdf5daf47f5",
        "type": "inject",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 2740,
        "wires": [
            [
                "70fb573c6ab0347c"
            ]
        ]
    },
    {
        "id": "bd63c91a2acf2796",
        "type": "inject",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 2780,
        "wires": [
            [
                "7163fa2a7b3629b9"
            ]
        ]
    },
    {
        "id": "8c0e6af07a817277",
        "type": "function",
        "z": "b3fbb48bc7759dd9",
        "name": "DROP TABLE crete_historical_data",
        "func": "msg.topic = 'DROP TABLE crete_historical_data';\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 2820,
        "wires": [
            [
                "2834825889dabbbc"
            ]
        ]
    },
    {
        "id": "c38535ea018cc97b",
        "type": "inject",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 2820,
        "wires": [
            [
                "8c0e6af07a817277"
            ]
        ]
    },
    {
        "id": "f30e6cafc6ce85e0",
        "type": "inject",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 2900,
        "wires": [
            [
                "c61dfc7a3196cafe",
                "b232d979ddf007fb"
            ]
        ]
    },
    {
        "id": "63dd7411b47a06bc",
        "type": "json",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 470,
        "y": 2900,
        "wires": [
            [
                "6c5266a3514c987f"
            ]
        ]
    },
    {
        "id": "c61dfc7a3196cafe",
        "type": "http request",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://marine-api.open-meteo.com/v1/marine?latitude=35.489126&longitude=24.0755468&hourly=wave_height,wave_direction,wave_period&start_date=2023-01-01&end_date=2023-12-31",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 310,
        "y": 2920,
        "wires": [
            [
                "63dd7411b47a06bc"
            ]
        ]
    },
    {
        "id": "6c5266a3514c987f",
        "type": "join",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 610,
        "y": 2900,
        "wires": [
            [
                "5efeb0b0a7c720f1"
            ]
        ]
    },
    {
        "id": "b232d979ddf007fb",
        "type": "http request",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://archive-api.open-meteo.com/v1/archive?latitude=35.489126&longitude=24.0755468&start_date=2023-01-01&end_date=2023-12-31&hourly=temperature_2m,relative_humidity_2m,rain,snowfall,cloud_cover,wind_speed_10m",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 310,
        "y": 2880,
        "wires": [
            [
                "63dd7411b47a06bc"
            ]
        ]
    },
    {
        "id": "7a2178c746d4c694",
        "type": "sqlite",
        "z": "b3fbb48bc7759dd9",
        "mydb": "5592c0ac1723dc37",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "Database",
        "x": 640,
        "y": 3040,
        "wires": [
            [
                "060382f585ee9687"
            ]
        ]
    },
    {
        "id": "83c086339a008cb3",
        "type": "inject",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 3040,
        "wires": [
            [
                "bf56ab4e22358af8"
            ]
        ]
    },
    {
        "id": "bf56ab4e22358af8",
        "type": "function",
        "z": "b3fbb48bc7759dd9",
        "name": "SELECT TABLE crete_historical_data",
        "func": "msg.topic = 'SELECT * FROM crete_historical_data';\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 3040,
        "wires": [
            [
                "7a2178c746d4c694"
            ]
        ]
    },
    {
        "id": "cb270b095819a115",
        "type": "function",
        "z": "b3fbb48bc7759dd9",
        "name": "filter data",
        "func": "var temperature = new Array();\n\ntemperature[0] = msg.payload.temperature;\nmsg.payload = {};\nmsg.payload = temperature;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 2980,
        "wires": [
            [
                "c9809b53b1c2dc47"
            ]
        ]
    },
    {
        "id": "c9809b53b1c2dc47",
        "type": "join",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "mode": "auto",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": "false",
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "x": 1130,
        "y": 2980,
        "wires": [
            [
                "5e15b791c5eff9b6"
            ]
        ]
    },
    {
        "id": "5e15b791c5eff9b6",
        "type": "function",
        "z": "b3fbb48bc7759dd9",
        "name": "temperature kmeans clusters",
        "func": "var clusterMaker = context.global.clusters;\n\n//number of clusters, defaults to undefined\nclusterMaker.k(4);\n\n//number of iterations (higher number gives more time to converge), defaults to 1000\nclusterMaker.iterations(750);\n\nclusterMaker.data(msg.payload);\nmsg.payload = clusterMaker.clusters();\n\nmsg.payload.sort(function(a, b) {\n    return parseFloat(a.centroid) - parseFloat(b.centroid);\n});\n\nglobal.set(\"creteTemperatureClusters\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1340,
        "y": 2980,
        "wires": [
            [
                "09c7ef9ac43ccf0a"
            ]
        ]
    },
    {
        "id": "09c7ef9ac43ccf0a",
        "type": "debug",
        "z": "b3fbb48bc7759dd9",
        "name": "message",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1600,
        "y": 3040,
        "wires": []
    },
    {
        "id": "634a98b9bd7e9b0b",
        "type": "function",
        "z": "b3fbb48bc7759dd9",
        "name": "filter data",
        "func": "var rain = new Array();\n\nrain[0] = msg.payload.rain;\nmsg.payload = {};\nmsg.payload = rain;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 3020,
        "wires": [
            [
                "d21c0f772732313f"
            ]
        ]
    },
    {
        "id": "d21c0f772732313f",
        "type": "join",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "mode": "auto",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": "false",
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "x": 1130,
        "y": 3020,
        "wires": [
            [
                "5642f1ece61c36da"
            ]
        ]
    },
    {
        "id": "5642f1ece61c36da",
        "type": "function",
        "z": "b3fbb48bc7759dd9",
        "name": "rain kmeans clusters",
        "func": "var clusterMaker = context.global.clusters;\n\n//number of clusters, defaults to undefined\nclusterMaker.k(4);\n\n//number of iterations (higher number gives more time to converge), defaults to 1000\nclusterMaker.iterations(750);\n\nclusterMaker.data(msg.payload);\nmsg.payload = clusterMaker.clusters();\n\nmsg.payload.sort(function(a, b) {\n    return parseFloat(b.centroid) - parseFloat(a.centroid);\n});\n\nglobal.set(\"creteRainClusters\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1360,
        "y": 3020,
        "wires": [
            [
                "09c7ef9ac43ccf0a"
            ]
        ]
    },
    {
        "id": "f1eac3932d49bfa6",
        "type": "function",
        "z": "b3fbb48bc7759dd9",
        "name": "filter data",
        "func": "var wind_speed = new Array();\n\nwind_speed[0] = msg.payload.wind_speed;\nmsg.payload = {};\nmsg.payload = wind_speed;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 3060,
        "wires": [
            [
                "ffcb821849cf46c9"
            ]
        ]
    },
    {
        "id": "ffcb821849cf46c9",
        "type": "join",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "mode": "auto",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": "false",
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "x": 1130,
        "y": 3060,
        "wires": [
            [
                "b4a5fe3353b98775"
            ]
        ]
    },
    {
        "id": "b4a5fe3353b98775",
        "type": "function",
        "z": "b3fbb48bc7759dd9",
        "name": "wind_speed kmeans clusters",
        "func": "var clusterMaker = context.global.clusters;\n\n//number of clusters, defaults to undefined\nclusterMaker.k(4);\n\n//number of iterations (higher number gives more time to converge), defaults to 1000\nclusterMaker.iterations(750);\n\nclusterMaker.data(msg.payload);\nmsg.payload = clusterMaker.clusters();\n\nmsg.payload.sort(function(a, b) {\n    return parseFloat(b.centroid) - parseFloat(a.centroid);\n});\n\nglobal.set(\"creteWindSpeedClusters\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1340,
        "y": 3060,
        "wires": [
            [
                "09c7ef9ac43ccf0a"
            ]
        ]
    },
    {
        "id": "1b2c4c5c5d5f4bb9",
        "type": "function",
        "z": "b3fbb48bc7759dd9",
        "name": "filter data",
        "func": "var wave_height = new Array();\n\nwave_height[0] = msg.payload.wave_height;\nmsg.payload = {};\nmsg.payload = wave_height;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 3100,
        "wires": [
            [
                "def3a4ed9c84d1c5"
            ]
        ]
    },
    {
        "id": "def3a4ed9c84d1c5",
        "type": "join",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "mode": "auto",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": "false",
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "x": 1130,
        "y": 3100,
        "wires": [
            [
                "9835ece39724c18d"
            ]
        ]
    },
    {
        "id": "9835ece39724c18d",
        "type": "function",
        "z": "b3fbb48bc7759dd9",
        "name": "wave_height kmeans clusters",
        "func": "var clusterMaker = context.global.clusters;\n\n//number of clusters, defaults to undefined\nclusterMaker.k(4);\n\n//number of iterations (higher number gives more time to converge), defaults to 1000\nclusterMaker.iterations(750);\n\nclusterMaker.data(msg.payload);\nmsg.payload = clusterMaker.clusters();\n\nmsg.payload.sort(function(a, b) {\n    return parseFloat(b.centroid) - parseFloat(a.centroid);\n});\n\nglobal.set(\"creteWaveHeightClusters\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1330,
        "y": 3100,
        "wires": [
            [
                "09c7ef9ac43ccf0a"
            ]
        ]
    },
    {
        "id": "060382f585ee9687",
        "type": "split",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 790,
        "y": 3040,
        "wires": [
            [
                "cb270b095819a115",
                "634a98b9bd7e9b0b",
                "f1eac3932d49bfa6",
                "1b2c4c5c5d5f4bb9"
            ]
        ]
    },
    {
        "id": "afe10e8c8aea8b77",
        "type": "inject",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 3340,
        "wires": [
            [
                "6bd9ef8e635da7e1",
                "72a735075e2d6823"
            ]
        ]
    },
    {
        "id": "d896fc7225f90b80",
        "type": "json",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 450,
        "y": 3340,
        "wires": [
            [
                "df87df3cea66e6c4"
            ]
        ]
    },
    {
        "id": "6bd9ef8e635da7e1",
        "type": "http request",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://api.open-meteo.com/v1/forecast?latitude=35.489126&longitude=24.0755468&hourly=temperature_2m,relative_humidity_2m,rain,showers,snowfall,cloud_cover,wind_speed_10m&forecast_days=2&timezone=auto",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 310,
        "y": 3320,
        "wires": [
            [
                "d896fc7225f90b80"
            ]
        ]
    },
    {
        "id": "a6e7a0aa08b82be3",
        "type": "function",
        "z": "b3fbb48bc7759dd9",
        "name": "make rows",
        "func": "var weather_data;\nvar waves_data;\n\nvar latitude;\nvar longitude;\n\nif (msg.payload[0].hourly.temperature_2m !== undefined) {\n    weather_data = msg.payload[0].hourly;\n    waves_data = msg.payload[1].hourly;\n    latitude = msg.payload[1].latitude;\n    longitude = msg.payload[1].longitude;\n} else {\n    weather_data = msg.payload[1].hourly;\n    waves_data = msg.payload[0].hourly;\n    latitude = msg.payload[0].latitude;\n    longitude = msg.payload[0].longitude;\n}\n\nvar systemDateTime = new Date();\n\nfor (var i = 0; i < weather_data.time.length; i++) {  \n    \n    var currentDateTime = new Date(weather_data.time[i]);\n    if (currentDateTime < systemDateTime) {\n        continue;\n    }\n    \n    msg.payload = {};\n    \n    msg.payload.latitude = latitude;\n    msg.payload.longitude = longitude;\n\n    msg.payload.temperature = weather_data.temperature_2m[i];\n    msg.payload.humidity = weather_data.relative_humidity_2m[i];\n    msg.payload.rain = weather_data.rain[i];\n    msg.payload.showers = weather_data.showers[i];\n    msg.payload.snowfall = weather_data.snowfall[i];\n    msg.payload.cloud_cover = weather_data.cloud_cover[i];\n    msg.payload.wind_speed = weather_data.wind_speed_10m[i];\n\n    msg.payload.wave_height = waves_data.wave_height[i];\n    msg.payload.wave_direction = waves_data.wave_direction[i];\n    msg.payload.wave_period = waves_data.wave_period[i];\n\n    msg.payload.timestamp = weather_data.time[i];\n\n    node.send(msg);\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 3340,
        "wires": [
            [
                "4eba479c87111f37"
            ]
        ]
    },
    {
        "id": "72a735075e2d6823",
        "type": "http request",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://marine-api.open-meteo.com/v1/marine?latitude=35.489126&longitude=24.0755468&hourly=wave_height,wave_direction,wave_period&timezone=auto&forecast_days=2",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 310,
        "y": 3340,
        "wires": [
            [
                "d896fc7225f90b80"
            ]
        ]
    },
    {
        "id": "df87df3cea66e6c4",
        "type": "join",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 570,
        "y": 3340,
        "wires": [
            [
                "a6e7a0aa08b82be3"
            ]
        ]
    },
    {
        "id": "ee08df474f59ec9c",
        "type": "inject",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 3200,
        "wires": [
            [
                "86ed5feb1ec54e47",
                "72f52b618aadf0d6"
            ]
        ]
    },
    {
        "id": "86ed5feb1ec54e47",
        "type": "http request",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://api.open-meteo.com/v1/forecast?latitude=35.489126&longitude=24.0755468&current=temperature_2m,relative_humidity_2m,rain,showers,snowfall,cloud_cover,wind_speed_10m&timezone=auto",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 310,
        "y": 3200,
        "wires": [
            [
                "719f0e6e26c55575"
            ]
        ]
    },
    {
        "id": "719f0e6e26c55575",
        "type": "json",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 450,
        "y": 3220,
        "wires": [
            [
                "a625c0b386311f21"
            ]
        ]
    },
    {
        "id": "72f52b618aadf0d6",
        "type": "http request",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://marine-api.open-meteo.com/v1/marine?latitude=35.489126&longitude=24.0755468&current=wave_height,wave_direction,wave_period&timezone=auto",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 310,
        "y": 3240,
        "wires": [
            [
                "719f0e6e26c55575"
            ]
        ]
    },
    {
        "id": "a625c0b386311f21",
        "type": "join",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 570,
        "y": 3220,
        "wires": [
            [
                "e37c27b79cb420b7"
            ]
        ]
    },
    {
        "id": "f975e7f303e8b050",
        "type": "comment",
        "z": "b3fbb48bc7759dd9",
        "name": "current data",
        "info": "",
        "x": 130,
        "y": 3160,
        "wires": []
    },
    {
        "id": "51c60f513548fcbd",
        "type": "comment",
        "z": "b3fbb48bc7759dd9",
        "name": "hourly data",
        "info": "",
        "x": 120,
        "y": 3300,
        "wires": []
    },
    {
        "id": "fe2cce4e0f786f34",
        "type": "debug",
        "z": "b3fbb48bc7759dd9",
        "name": "message",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1020,
        "y": 3280,
        "wires": []
    },
    {
        "id": "a1266c13b2bd3e80",
        "type": "comment",
        "z": "b3fbb48bc7759dd9",
        "name": "Clustering",
        "info": "",
        "x": 120,
        "y": 3000,
        "wires": []
    },
    {
        "id": "2834825889dabbbc",
        "type": "sqlite",
        "z": "b3fbb48bc7759dd9",
        "mydb": "5592c0ac1723dc37",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "Database",
        "x": 680,
        "y": 2800,
        "wires": [
            [
                "d057b0e4398e2c09"
            ]
        ]
    },
    {
        "id": "d057b0e4398e2c09",
        "type": "debug",
        "z": "b3fbb48bc7759dd9",
        "name": "message",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 840,
        "y": 2800,
        "wires": []
    },
    {
        "id": "72bfe3bef3dc0bca",
        "type": "link in",
        "z": "b3fbb48bc7759dd9",
        "name": "link in 25",
        "links": [
            "be9a9bc44864d6fb",
            "c1f02caeb5cf66d0",
            "98d7e64e4a33d021",
            "28699f145dcc1e56"
        ],
        "x": 525,
        "y": 2860,
        "wires": [
            [
                "2834825889dabbbc"
            ]
        ]
    },
    {
        "id": "25db107008aaaf18",
        "type": "http request",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://api.open-meteo.com/v1/forecast?latitude=37.944709&longitude=23.638304&hourly=temperature_2m,relative_humidity_2m,rain,showers,snowfall,cloud_cover,wind_speed_10m&forecast_days=2&timezone=auto",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 330,
        "y": 1140,
        "wires": [
            [
                "f67995140fe4c88a"
            ]
        ]
    },
    {
        "id": "0865935337a64331",
        "type": "link out",
        "z": "b3fbb48bc7759dd9",
        "name": "link out 67",
        "mode": "link",
        "links": [
            "8f23406a8c40fa28",
            "ccb1a923955e85e0",
            "1deaf81aa095cc6d",
            "4c8b7e0bb66aacb4",
            "acd94049dbb1094f",
            "0294da0f1f0cc7b8"
        ],
        "x": 1195,
        "y": 3820,
        "wires": []
    },
    {
        "id": "07c2ad8232d5caad",
        "type": "function",
        "z": "b3fbb48bc7759dd9",
        "name": "INSERT TABLE skg_historical_data",
        "func": "var values = Object.values(msg.payload);\nvalues = values.join(\"','\");\n\nmsg.topic = \"INSERT INTO skg_historical_data (latitude, longitude, temperature, humidity, rain, snowfall, cloud_cover, wind_speed, wave_height, wave_direction, wave_period, timestamp) VALUES ('\" + values + \"')\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 3820,
        "wires": [
            [
                "0865935337a64331"
            ]
        ]
    },
    {
        "id": "5118dd292870f798",
        "type": "function",
        "z": "b3fbb48bc7759dd9",
        "name": "make rows",
        "func": "var weather_data;\nvar waves_data;\n\nvar latitude;\nvar longitude;\n\nif (msg.payload[0].hourly.temperature_2m !== undefined) {\n    weather_data = msg.payload[0].hourly;\n    waves_data = msg.payload[1].hourly;\n    latitude = msg.payload[1].latitude;\n    longitude = msg.payload[1].longitude;\n} else {\n    weather_data = msg.payload[1].hourly;\n    waves_data = msg.payload[0].hourly;\n    latitude = msg.payload[0].latitude;\n    longitude = msg.payload[0].longitude;\n}\n\nfor (var i = 0; i < weather_data.time.length; i++) {  \n    \n    msg.payload = {};\n    \n    msg.payload.latitude = latitude;\n    msg.payload.longitude = longitude;\n\n    msg.payload.temperature = weather_data.temperature_2m[i];\n    msg.payload.humidity = weather_data.relative_humidity_2m[i];\n    msg.payload.rain = weather_data.rain[i];\n    msg.payload.snowfall = weather_data.snowfall[i];\n    msg.payload.cloud_cover = weather_data.cloud_cover[i];\n    msg.payload.wind_speed = weather_data.wind_speed_10m[i];\n\n    msg.payload.wave_height = waves_data.wave_height[i];\n    msg.payload.wave_direction = waves_data.wave_direction[i];\n    msg.payload.wave_period = waves_data.wave_period[i];\n\n    msg.payload.timestamp = weather_data.time[i];\n\n    node.send(msg);\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 3820,
        "wires": [
            [
                "07c2ad8232d5caad"
            ]
        ]
    },
    {
        "id": "943115b8f820ccdc",
        "type": "comment",
        "z": "b3fbb48bc7759dd9",
        "name": "Historical weather & waves data for 2023",
        "info": "",
        "x": 220,
        "y": 3620,
        "wires": []
    },
    {
        "id": "2721cefa7c8a866b",
        "type": "function",
        "z": "b3fbb48bc7759dd9",
        "name": "CREATE TABLE skg_historical_data",
        "func": "msg.topic = 'CREATE TABLE skg_historical_data (' +\n    'latitude FLOAT,' +\n    'longitude FLOAT,' +\n    'temperature FLOAT,' +\n    'humidity FLOAT,' +\n    'rain FLOAT,' +\n    'snowfall FLOAT,' +\n    'cloud_cover FLOAT,' +\n    'wind_speed FLOAT,' +\n    'wave_height FLOAT,' +\n    'wave_direction FLOAT,' +\n    'wave_period FLOAT,' +\n    'timestamp TEXT' +\n    ')';\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 3660,
        "wires": [
            [
                "de6b86ad806f707e"
            ]
        ]
    },
    {
        "id": "c3a5e7a86a2b023b",
        "type": "function",
        "z": "b3fbb48bc7759dd9",
        "name": "SELECT TABLE skg_historical_data",
        "func": "msg.topic = 'SELECT * FROM skg_historical_data';\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 3700,
        "wires": [
            [
                "de6b86ad806f707e"
            ]
        ]
    },
    {
        "id": "3dfac9d3fdcd87dd",
        "type": "inject",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 3660,
        "wires": [
            [
                "2721cefa7c8a866b"
            ]
        ]
    },
    {
        "id": "3de77f0992f452e6",
        "type": "inject",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 3700,
        "wires": [
            [
                "c3a5e7a86a2b023b"
            ]
        ]
    },
    {
        "id": "8d8aa6abe638242d",
        "type": "function",
        "z": "b3fbb48bc7759dd9",
        "name": "DROP TABLE skg_historical_data",
        "func": "msg.topic = 'DROP TABLE skg_historical_data';\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 3740,
        "wires": [
            [
                "de6b86ad806f707e"
            ]
        ]
    },
    {
        "id": "039279ceaf7b1b4f",
        "type": "inject",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 3740,
        "wires": [
            [
                "8d8aa6abe638242d"
            ]
        ]
    },
    {
        "id": "69c091bf37ab4d8b",
        "type": "inject",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 3820,
        "wires": [
            [
                "918acd51e1cb76cf",
                "83f0ae6c51e45d43"
            ]
        ]
    },
    {
        "id": "aa0d7882b1cd4c80",
        "type": "json",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 470,
        "y": 3820,
        "wires": [
            [
                "81180ce0932c2af4"
            ]
        ]
    },
    {
        "id": "918acd51e1cb76cf",
        "type": "http request",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://marine-api.open-meteo.com/v1/marine?latitude=40.635485&longitude=22.932838&hourly=wave_height,wave_direction,wave_period&start_date=2023-01-01&end_date=2023-12-31",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 310,
        "y": 3840,
        "wires": [
            [
                "aa0d7882b1cd4c80"
            ]
        ]
    },
    {
        "id": "81180ce0932c2af4",
        "type": "join",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 610,
        "y": 3820,
        "wires": [
            [
                "5118dd292870f798"
            ]
        ]
    },
    {
        "id": "83f0ae6c51e45d43",
        "type": "http request",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://archive-api.open-meteo.com/v1/archive?latitude=40.635485&longitude=22.932838&start_date=2023-01-01&end_date=2023-12-31&hourly=temperature_2m,relative_humidity_2m,rain,snowfall,cloud_cover,wind_speed_10m",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 310,
        "y": 3800,
        "wires": [
            [
                "aa0d7882b1cd4c80"
            ]
        ]
    },
    {
        "id": "b4e0149bcaa8f7de",
        "type": "sqlite",
        "z": "b3fbb48bc7759dd9",
        "mydb": "5592c0ac1723dc37",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "Database",
        "x": 640,
        "y": 3960,
        "wires": [
            [
                "7e99717d94942e56"
            ]
        ]
    },
    {
        "id": "7d5889c9714dd893",
        "type": "inject",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 3960,
        "wires": [
            [
                "236b9bdb7c95d4f3"
            ]
        ]
    },
    {
        "id": "236b9bdb7c95d4f3",
        "type": "function",
        "z": "b3fbb48bc7759dd9",
        "name": "SELECT TABLE skg_historical_data",
        "func": "msg.topic = 'SELECT * FROM skg_historical_data';\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 3960,
        "wires": [
            [
                "b4e0149bcaa8f7de"
            ]
        ]
    },
    {
        "id": "030f83b4c801bb2e",
        "type": "function",
        "z": "b3fbb48bc7759dd9",
        "name": "filter data",
        "func": "var temperature = new Array();\n\ntemperature[0] = msg.payload.temperature;\nmsg.payload = {};\nmsg.payload = temperature;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 3900,
        "wires": [
            [
                "fe64daaab45337d9"
            ]
        ]
    },
    {
        "id": "fe64daaab45337d9",
        "type": "join",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "mode": "auto",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": "false",
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "x": 1130,
        "y": 3900,
        "wires": [
            [
                "2011958f919a32e7"
            ]
        ]
    },
    {
        "id": "2011958f919a32e7",
        "type": "function",
        "z": "b3fbb48bc7759dd9",
        "name": "temperature kmeans clusters",
        "func": "var clusterMaker = context.global.clusters;\n\n//number of clusters, defaults to undefined\nclusterMaker.k(4);\n\n//number of iterations (higher number gives more time to converge), defaults to 1000\nclusterMaker.iterations(750);\n\nclusterMaker.data(msg.payload);\nmsg.payload = clusterMaker.clusters();\n\nmsg.payload.sort(function(a, b) {\n    return parseFloat(a.centroid) - parseFloat(b.centroid);\n});\n\nglobal.set(\"skgTemperatureClusters\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1340,
        "y": 3900,
        "wires": [
            [
                "6ecc894271bc75c4"
            ]
        ]
    },
    {
        "id": "6ecc894271bc75c4",
        "type": "debug",
        "z": "b3fbb48bc7759dd9",
        "name": "message",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1600,
        "y": 3960,
        "wires": []
    },
    {
        "id": "4c6bbd5d0b67c5b9",
        "type": "function",
        "z": "b3fbb48bc7759dd9",
        "name": "filter data",
        "func": "var rain = new Array();\n\nrain[0] = msg.payload.rain;\nmsg.payload = {};\nmsg.payload = rain;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 3940,
        "wires": [
            [
                "ad35e5fe4cfcf3a6"
            ]
        ]
    },
    {
        "id": "ad35e5fe4cfcf3a6",
        "type": "join",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "mode": "auto",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": "false",
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "x": 1130,
        "y": 3940,
        "wires": [
            [
                "7fd3234d23957fff"
            ]
        ]
    },
    {
        "id": "7fd3234d23957fff",
        "type": "function",
        "z": "b3fbb48bc7759dd9",
        "name": "rain kmeans clusters",
        "func": "var clusterMaker = context.global.clusters;\n\n//number of clusters, defaults to undefined\nclusterMaker.k(4);\n\n//number of iterations (higher number gives more time to converge), defaults to 1000\nclusterMaker.iterations(750);\n\nclusterMaker.data(msg.payload);\nmsg.payload = clusterMaker.clusters();\n\nmsg.payload.sort(function(a, b) {\n    return parseFloat(b.centroid) - parseFloat(a.centroid);\n});\n\nglobal.set(\"skgRainClusters\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1360,
        "y": 3940,
        "wires": [
            [
                "6ecc894271bc75c4"
            ]
        ]
    },
    {
        "id": "c14154081adff6d6",
        "type": "function",
        "z": "b3fbb48bc7759dd9",
        "name": "filter data",
        "func": "var wind_speed = new Array();\n\nwind_speed[0] = msg.payload.wind_speed;\nmsg.payload = {};\nmsg.payload = wind_speed;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 3980,
        "wires": [
            [
                "b3ed7c0cf065c8e0"
            ]
        ]
    },
    {
        "id": "b3ed7c0cf065c8e0",
        "type": "join",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "mode": "auto",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": "false",
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "x": 1130,
        "y": 3980,
        "wires": [
            [
                "923ac22b1ae352d7"
            ]
        ]
    },
    {
        "id": "923ac22b1ae352d7",
        "type": "function",
        "z": "b3fbb48bc7759dd9",
        "name": "wind_speed kmeans clusters",
        "func": "var clusterMaker = context.global.clusters;\n\n//number of clusters, defaults to undefined\nclusterMaker.k(4);\n\n//number of iterations (higher number gives more time to converge), defaults to 1000\nclusterMaker.iterations(750);\n\nclusterMaker.data(msg.payload);\nmsg.payload = clusterMaker.clusters();\n\nmsg.payload.sort(function(a, b) {\n    return parseFloat(b.centroid) - parseFloat(a.centroid);\n});\n\nglobal.set(\"skgWindSpeedClusters\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1340,
        "y": 3980,
        "wires": [
            [
                "6ecc894271bc75c4"
            ]
        ]
    },
    {
        "id": "e8a32796325599c5",
        "type": "function",
        "z": "b3fbb48bc7759dd9",
        "name": "filter data",
        "func": "var wave_height = new Array();\n\nwave_height[0] = msg.payload.wave_height;\nmsg.payload = {};\nmsg.payload = wave_height;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 4020,
        "wires": [
            [
                "5898e5bdeca47431"
            ]
        ]
    },
    {
        "id": "5898e5bdeca47431",
        "type": "join",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "mode": "auto",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": "false",
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "x": 1130,
        "y": 4020,
        "wires": [
            [
                "ef00d8ed5c44e76a"
            ]
        ]
    },
    {
        "id": "ef00d8ed5c44e76a",
        "type": "function",
        "z": "b3fbb48bc7759dd9",
        "name": "wave_height kmeans clusters",
        "func": "var clusterMaker = context.global.clusters;\n\n//number of clusters, defaults to undefined\nclusterMaker.k(4);\n\n//number of iterations (higher number gives more time to converge), defaults to 1000\nclusterMaker.iterations(750);\n\nclusterMaker.data(msg.payload);\nmsg.payload = clusterMaker.clusters();\n\nmsg.payload.sort(function(a, b) {\n    return parseFloat(b.centroid) - parseFloat(a.centroid);\n});\n\nglobal.set(\"skgWaveHeightClusters\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1330,
        "y": 4020,
        "wires": [
            [
                "6ecc894271bc75c4"
            ]
        ]
    },
    {
        "id": "7e99717d94942e56",
        "type": "split",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 790,
        "y": 3960,
        "wires": [
            [
                "030f83b4c801bb2e",
                "4c6bbd5d0b67c5b9",
                "c14154081adff6d6",
                "e8a32796325599c5"
            ]
        ]
    },
    {
        "id": "09bb12bac2495e4d",
        "type": "inject",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 4260,
        "wires": [
            [
                "641fe2f6bd57d15f",
                "80bd234ca31d85f8"
            ]
        ]
    },
    {
        "id": "4ffc1b978f13e599",
        "type": "json",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 450,
        "y": 4260,
        "wires": [
            [
                "7d3779b8f7c55add"
            ]
        ]
    },
    {
        "id": "641fe2f6bd57d15f",
        "type": "http request",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://api.open-meteo.com/v1/forecast?latitude=40.635485&longitude=22.932838&hourly=temperature_2m,relative_humidity_2m,rain,showers,snowfall,cloud_cover,wind_speed_10m&forecast_days=2&timezone=auto",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 310,
        "y": 4240,
        "wires": [
            [
                "4ffc1b978f13e599"
            ]
        ]
    },
    {
        "id": "80bd234ca31d85f8",
        "type": "http request",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://marine-api.open-meteo.com/v1/marine?latitude=40.635485&longitude=22.932838&hourly=wave_height,wave_direction,wave_period&timezone=auto&forecast_days=2",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 310,
        "y": 4280,
        "wires": [
            [
                "4ffc1b978f13e599"
            ]
        ]
    },
    {
        "id": "7d3779b8f7c55add",
        "type": "join",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 570,
        "y": 4260,
        "wires": [
            [
                "837fde2bc5ec7bd3"
            ]
        ]
    },
    {
        "id": "acd0d34c17c619dc",
        "type": "inject",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 4120,
        "wires": [
            [
                "c419063e84aa5ac6",
                "16308bd0ee02808f"
            ]
        ]
    },
    {
        "id": "c419063e84aa5ac6",
        "type": "http request",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://api.open-meteo.com/v1/forecast?latitude=40.635485&longitude=22.932838&current=temperature_2m,relative_humidity_2m,rain,showers,snowfall,cloud_cover,wind_speed_10m&timezone=auto",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 310,
        "y": 4120,
        "wires": [
            [
                "b6c38af20c9ac053"
            ]
        ]
    },
    {
        "id": "b6c38af20c9ac053",
        "type": "json",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 450,
        "y": 4140,
        "wires": [
            [
                "95622462d15ea142"
            ]
        ]
    },
    {
        "id": "16308bd0ee02808f",
        "type": "http request",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://marine-api.open-meteo.com/v1/marine?latitude=40.635485&longitude=22.932838&current=wave_height,wave_direction,wave_period&timezone=auto",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 310,
        "y": 4160,
        "wires": [
            [
                "b6c38af20c9ac053"
            ]
        ]
    },
    {
        "id": "95622462d15ea142",
        "type": "join",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 570,
        "y": 4140,
        "wires": [
            [
                "62f53edb2a1cdf17"
            ]
        ]
    },
    {
        "id": "8dec9568f194f2ef",
        "type": "comment",
        "z": "b3fbb48bc7759dd9",
        "name": "current data",
        "info": "",
        "x": 130,
        "y": 4080,
        "wires": []
    },
    {
        "id": "c6c2a9c47b5a0f24",
        "type": "comment",
        "z": "b3fbb48bc7759dd9",
        "name": "hourly data",
        "info": "",
        "x": 120,
        "y": 4220,
        "wires": []
    },
    {
        "id": "1b78b350e8b5bad2",
        "type": "debug",
        "z": "b3fbb48bc7759dd9",
        "name": "message",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1020,
        "y": 4200,
        "wires": []
    },
    {
        "id": "c8cd5266853baf37",
        "type": "comment",
        "z": "b3fbb48bc7759dd9",
        "name": "Clustering",
        "info": "",
        "x": 120,
        "y": 3920,
        "wires": []
    },
    {
        "id": "de6b86ad806f707e",
        "type": "sqlite",
        "z": "b3fbb48bc7759dd9",
        "mydb": "5592c0ac1723dc37",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "Database",
        "x": 680,
        "y": 3720,
        "wires": [
            [
                "7604809c6d7e901e"
            ]
        ]
    },
    {
        "id": "7604809c6d7e901e",
        "type": "debug",
        "z": "b3fbb48bc7759dd9",
        "name": "message",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 840,
        "y": 3720,
        "wires": []
    },
    {
        "id": "0294da0f1f0cc7b8",
        "type": "link in",
        "z": "b3fbb48bc7759dd9",
        "name": "link in 30",
        "links": [
            "1ba888fb7e4ead33",
            "3dee2fd4de843f32",
            "e3384e2b9b41942c",
            "0865935337a64331"
        ],
        "x": 525,
        "y": 3780,
        "wires": [
            [
                "de6b86ad806f707e"
            ]
        ]
    },
    {
        "id": "de84111695336a92",
        "type": "link out",
        "z": "b3fbb48bc7759dd9",
        "name": "link out 72",
        "mode": "link",
        "links": [
            "8f23406a8c40fa28",
            "ccb1a923955e85e0",
            "1deaf81aa095cc6d",
            "4c8b7e0bb66aacb4",
            "acd94049dbb1094f",
            "20965ad24c1f3098"
        ],
        "x": 1235,
        "y": 4720,
        "wires": []
    },
    {
        "id": "67e283fba2a4951b",
        "type": "function",
        "z": "b3fbb48bc7759dd9",
        "name": "INSERT TABLE kerkyra_historical_data",
        "func": "var values = Object.values(msg.payload);\nvalues = values.join(\"','\");\n\nmsg.topic = \"INSERT INTO kerkyra_historical_data (latitude, longitude, temperature, humidity, rain, snowfall, cloud_cover, wind_speed, wave_height, wave_direction, wave_period, timestamp) VALUES ('\" + values + \"')\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1040,
        "y": 4720,
        "wires": [
            [
                "de84111695336a92"
            ]
        ]
    },
    {
        "id": "7317377b98c9d28c",
        "type": "function",
        "z": "b3fbb48bc7759dd9",
        "name": "make rows",
        "func": "var weather_data;\nvar waves_data;\n\nvar latitude;\nvar longitude;\n\nif (msg.payload[0].hourly.temperature_2m !== undefined) {\n    weather_data = msg.payload[0].hourly;\n    waves_data = msg.payload[1].hourly;\n    latitude = msg.payload[1].latitude;\n    longitude = msg.payload[1].longitude;\n} else {\n    weather_data = msg.payload[1].hourly;\n    waves_data = msg.payload[0].hourly;\n    latitude = msg.payload[0].latitude;\n    longitude = msg.payload[0].longitude;\n}\n\nfor (var i = 0; i < weather_data.time.length; i++) {  \n    \n    msg.payload = {};\n    \n    msg.payload.latitude = latitude;\n    msg.payload.longitude = longitude;\n\n    msg.payload.temperature = weather_data.temperature_2m[i];\n    msg.payload.humidity = weather_data.relative_humidity_2m[i];\n    msg.payload.rain = weather_data.rain[i];\n    msg.payload.snowfall = weather_data.snowfall[i];\n    msg.payload.cloud_cover = weather_data.cloud_cover[i];\n    msg.payload.wind_speed = weather_data.wind_speed_10m[i];\n\n    msg.payload.wave_height = waves_data.wave_height[i];\n    msg.payload.wave_direction = waves_data.wave_direction[i];\n    msg.payload.wave_period = waves_data.wave_period[i];\n\n    msg.payload.timestamp = weather_data.time[i];\n\n    node.send(msg);\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 4720,
        "wires": [
            [
                "67e283fba2a4951b"
            ]
        ]
    },
    {
        "id": "c16bf3812692751d",
        "type": "comment",
        "z": "b3fbb48bc7759dd9",
        "name": "Historical weather & waves data for 2023",
        "info": "",
        "x": 220,
        "y": 4520,
        "wires": []
    },
    {
        "id": "744793885c35e350",
        "type": "function",
        "z": "b3fbb48bc7759dd9",
        "name": "CREATE TABLE kerkyra_historical_data",
        "func": "msg.topic = 'CREATE TABLE kerkyra_historical_data (' +\n    'latitude FLOAT,' +\n    'longitude FLOAT,' +\n    'temperature FLOAT,' +\n    'humidity FLOAT,' +\n    'rain FLOAT,' +\n    'snowfall FLOAT,' +\n    'cloud_cover FLOAT,' +\n    'wind_speed FLOAT,' +\n    'wave_height FLOAT,' +\n    'wave_direction FLOAT,' +\n    'wave_period FLOAT,' +\n    'timestamp TEXT' +\n    ')';\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 4560,
        "wires": [
            [
                "15f786c6fe98fcdb"
            ]
        ]
    },
    {
        "id": "0f9d6c0cdcc452de",
        "type": "function",
        "z": "b3fbb48bc7759dd9",
        "name": "SELECT TABLE kerkyra_historical_data",
        "func": "msg.topic = 'SELECT * FROM kerkyra_historical_data';\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 4600,
        "wires": [
            [
                "15f786c6fe98fcdb"
            ]
        ]
    },
    {
        "id": "4fe91894e326b90a",
        "type": "inject",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 4560,
        "wires": [
            [
                "744793885c35e350"
            ]
        ]
    },
    {
        "id": "5742d2aff20e6f0e",
        "type": "inject",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 4600,
        "wires": [
            [
                "0f9d6c0cdcc452de"
            ]
        ]
    },
    {
        "id": "f074b443394daba9",
        "type": "function",
        "z": "b3fbb48bc7759dd9",
        "name": "DROP TABLE kerkyra_historical_data",
        "func": "msg.topic = 'DROP TABLE kerkyra_historical_data';\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 4640,
        "wires": [
            [
                "15f786c6fe98fcdb"
            ]
        ]
    },
    {
        "id": "9e67cefc7f0b4c4b",
        "type": "inject",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 4640,
        "wires": [
            [
                "f074b443394daba9"
            ]
        ]
    },
    {
        "id": "952eafc685de5cf0",
        "type": "inject",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 4720,
        "wires": [
            [
                "a0e7e6bdd4f2afc0",
                "68250138f52d4774"
            ]
        ]
    },
    {
        "id": "6135cc4b8e8f7598",
        "type": "json",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 470,
        "y": 4720,
        "wires": [
            [
                "370a8a9fe91f6ff4"
            ]
        ]
    },
    {
        "id": "a0e7e6bdd4f2afc0",
        "type": "http request",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://marine-api.open-meteo.com/v1/marine?latitude=39.63028&longitude=19.90177&hourly=wave_height,wave_direction,wave_period&start_date=2023-01-01&end_date=2023-12-31",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 310,
        "y": 4740,
        "wires": [
            [
                "6135cc4b8e8f7598"
            ]
        ]
    },
    {
        "id": "370a8a9fe91f6ff4",
        "type": "join",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 610,
        "y": 4720,
        "wires": [
            [
                "7317377b98c9d28c"
            ]
        ]
    },
    {
        "id": "68250138f52d4774",
        "type": "http request",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://archive-api.open-meteo.com/v1/archive?latitude=39.63028&longitude=19.90177&start_date=2023-01-01&end_date=2023-12-31&hourly=temperature_2m,relative_humidity_2m,rain,snowfall,cloud_cover,wind_speed_10m",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 310,
        "y": 4700,
        "wires": [
            [
                "6135cc4b8e8f7598"
            ]
        ]
    },
    {
        "id": "95c2aea6916d8ca7",
        "type": "sqlite",
        "z": "b3fbb48bc7759dd9",
        "mydb": "5592c0ac1723dc37",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "Database",
        "x": 660,
        "y": 4860,
        "wires": [
            [
                "a3703197d3fb932f"
            ]
        ]
    },
    {
        "id": "feae2dc4e7115bcb",
        "type": "inject",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 4860,
        "wires": [
            [
                "309c2b0c2bbd109e"
            ]
        ]
    },
    {
        "id": "309c2b0c2bbd109e",
        "type": "function",
        "z": "b3fbb48bc7759dd9",
        "name": "SELECT TABLE kerkyra_historical_data",
        "func": "msg.topic = 'SELECT * FROM kerkyra_historical_data';\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 4860,
        "wires": [
            [
                "95c2aea6916d8ca7"
            ]
        ]
    },
    {
        "id": "b739a3ee5d7d36b2",
        "type": "function",
        "z": "b3fbb48bc7759dd9",
        "name": "filter data",
        "func": "var temperature = new Array();\n\ntemperature[0] = msg.payload.temperature;\nmsg.payload = {};\nmsg.payload = temperature;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 4800,
        "wires": [
            [
                "e4b2973ed013f870"
            ]
        ]
    },
    {
        "id": "e4b2973ed013f870",
        "type": "join",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "mode": "auto",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": "false",
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "x": 1150,
        "y": 4800,
        "wires": [
            [
                "3c93de8ae356321d"
            ]
        ]
    },
    {
        "id": "3c93de8ae356321d",
        "type": "function",
        "z": "b3fbb48bc7759dd9",
        "name": "temperature kmeans clusters",
        "func": "var clusterMaker = context.global.clusters;\n\n//number of clusters, defaults to undefined\nclusterMaker.k(4);\n\n//number of iterations (higher number gives more time to converge), defaults to 1000\nclusterMaker.iterations(750);\n\nclusterMaker.data(msg.payload);\nmsg.payload = clusterMaker.clusters();\n\nmsg.payload.sort(function(a, b) {\n    return parseFloat(a.centroid) - parseFloat(b.centroid);\n});\n\nglobal.set(\"kerkyraTemperatureClusters\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1360,
        "y": 4800,
        "wires": [
            [
                "f5769011a6e67164"
            ]
        ]
    },
    {
        "id": "f5769011a6e67164",
        "type": "debug",
        "z": "b3fbb48bc7759dd9",
        "name": "message",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1620,
        "y": 4860,
        "wires": []
    },
    {
        "id": "feaecd312636fd99",
        "type": "function",
        "z": "b3fbb48bc7759dd9",
        "name": "filter data",
        "func": "var rain = new Array();\n\nrain[0] = msg.payload.rain;\nmsg.payload = {};\nmsg.payload = rain;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 4840,
        "wires": [
            [
                "5903f59b16abb51c"
            ]
        ]
    },
    {
        "id": "5903f59b16abb51c",
        "type": "join",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "mode": "auto",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": "false",
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "x": 1150,
        "y": 4840,
        "wires": [
            [
                "c837070a17f77f25"
            ]
        ]
    },
    {
        "id": "c837070a17f77f25",
        "type": "function",
        "z": "b3fbb48bc7759dd9",
        "name": "rain kmeans clusters",
        "func": "var clusterMaker = context.global.clusters;\n\n//number of clusters, defaults to undefined\nclusterMaker.k(4);\n\n//number of iterations (higher number gives more time to converge), defaults to 1000\nclusterMaker.iterations(750);\n\nclusterMaker.data(msg.payload);\nmsg.payload = clusterMaker.clusters();\n\nmsg.payload.sort(function(a, b) {\n    return parseFloat(b.centroid) - parseFloat(a.centroid);\n});\n\nglobal.set(\"kerkyraRainClusters\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1380,
        "y": 4840,
        "wires": [
            [
                "f5769011a6e67164"
            ]
        ]
    },
    {
        "id": "42289bd4cf83d1f3",
        "type": "function",
        "z": "b3fbb48bc7759dd9",
        "name": "filter data",
        "func": "var wind_speed = new Array();\n\nwind_speed[0] = msg.payload.wind_speed;\nmsg.payload = {};\nmsg.payload = wind_speed;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 4880,
        "wires": [
            [
                "8791e4afc978f51d"
            ]
        ]
    },
    {
        "id": "8791e4afc978f51d",
        "type": "join",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "mode": "auto",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": "false",
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "x": 1150,
        "y": 4880,
        "wires": [
            [
                "bfb13b36cac8ac6a"
            ]
        ]
    },
    {
        "id": "bfb13b36cac8ac6a",
        "type": "function",
        "z": "b3fbb48bc7759dd9",
        "name": "wind_speed kmeans clusters",
        "func": "var clusterMaker = context.global.clusters;\n\n//number of clusters, defaults to undefined\nclusterMaker.k(4);\n\n//number of iterations (higher number gives more time to converge), defaults to 1000\nclusterMaker.iterations(750);\n\nclusterMaker.data(msg.payload);\nmsg.payload = clusterMaker.clusters();\n\nmsg.payload.sort(function(a, b) {\n    return parseFloat(b.centroid) - parseFloat(a.centroid);\n});\n\nglobal.set(\"kerkyraWindSpeedClusters\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1360,
        "y": 4880,
        "wires": [
            [
                "f5769011a6e67164"
            ]
        ]
    },
    {
        "id": "589d64617b56dc80",
        "type": "function",
        "z": "b3fbb48bc7759dd9",
        "name": "filter data",
        "func": "var wave_height = new Array();\n\nwave_height[0] = msg.payload.wave_height;\nmsg.payload = {};\nmsg.payload = wave_height;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 4920,
        "wires": [
            [
                "b14a348125bf3e31"
            ]
        ]
    },
    {
        "id": "b14a348125bf3e31",
        "type": "join",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "mode": "auto",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": "false",
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "x": 1150,
        "y": 4920,
        "wires": [
            [
                "fca57fd35adc5fba"
            ]
        ]
    },
    {
        "id": "fca57fd35adc5fba",
        "type": "function",
        "z": "b3fbb48bc7759dd9",
        "name": "wave_height kmeans clusters",
        "func": "var clusterMaker = context.global.clusters;\n\n//number of clusters, defaults to undefined\nclusterMaker.k(4);\n\n//number of iterations (higher number gives more time to converge), defaults to 1000\nclusterMaker.iterations(750);\n\nclusterMaker.data(msg.payload);\nmsg.payload = clusterMaker.clusters();\n\nmsg.payload.sort(function(a, b) {\n    return parseFloat(b.centroid) - parseFloat(a.centroid);\n});\n\nglobal.set(\"kerkyraWaveHeightClusters\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1350,
        "y": 4920,
        "wires": [
            [
                "f5769011a6e67164"
            ]
        ]
    },
    {
        "id": "a3703197d3fb932f",
        "type": "split",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 810,
        "y": 4860,
        "wires": [
            [
                "b739a3ee5d7d36b2",
                "feaecd312636fd99",
                "42289bd4cf83d1f3",
                "589d64617b56dc80"
            ]
        ]
    },
    {
        "id": "98b96936daa64adf",
        "type": "inject",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 5160,
        "wires": [
            [
                "500cb2ab6ccff52f",
                "5e8654f577b01616"
            ]
        ]
    },
    {
        "id": "6325d58549114110",
        "type": "json",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 450,
        "y": 5160,
        "wires": [
            [
                "67c3b6145d76142f"
            ]
        ]
    },
    {
        "id": "500cb2ab6ccff52f",
        "type": "http request",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://api.open-meteo.com/v1/forecast?latitude=39.63028&longitude=19.90177&hourly=temperature_2m,relative_humidity_2m,rain,showers,snowfall,cloud_cover,wind_speed_10m&forecast_days=2&timezone=auto",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 310,
        "y": 5140,
        "wires": [
            [
                "6325d58549114110"
            ]
        ]
    },
    {
        "id": "5e8654f577b01616",
        "type": "http request",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://marine-api.open-meteo.com/v1/marine?latitude=39.63028&longitude=19.90177&hourly=wave_height,wave_direction,wave_period&timezone=auto&forecast_days=2",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 310,
        "y": 5180,
        "wires": [
            [
                "6325d58549114110"
            ]
        ]
    },
    {
        "id": "67c3b6145d76142f",
        "type": "join",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 570,
        "y": 5160,
        "wires": [
            [
                "6698a205abcbbb26"
            ]
        ]
    },
    {
        "id": "b0516af3d891cb85",
        "type": "inject",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 5020,
        "wires": [
            [
                "4a393e9acf4c7a6a",
                "ca788432f5f8112a"
            ]
        ]
    },
    {
        "id": "4a393e9acf4c7a6a",
        "type": "http request",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://api.open-meteo.com/v1/forecast?latitude=39.63028&longitude=19.90177&current=temperature_2m,relative_humidity_2m,rain,showers,snowfall,cloud_cover,wind_speed_10m&timezone=auto",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 310,
        "y": 5020,
        "wires": [
            [
                "915a4672c83f6360"
            ]
        ]
    },
    {
        "id": "915a4672c83f6360",
        "type": "json",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 450,
        "y": 5040,
        "wires": [
            [
                "97caa45c5f5a244d"
            ]
        ]
    },
    {
        "id": "ca788432f5f8112a",
        "type": "http request",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://marine-api.open-meteo.com/v1/marine?latitude=39.63028&longitude=19.90177&current=wave_height,wave_direction,wave_period&timezone=auto",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 310,
        "y": 5060,
        "wires": [
            [
                "915a4672c83f6360"
            ]
        ]
    },
    {
        "id": "97caa45c5f5a244d",
        "type": "join",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 570,
        "y": 5040,
        "wires": [
            [
                "03f563e784676d1d"
            ]
        ]
    },
    {
        "id": "95d4c52a6c580dd5",
        "type": "comment",
        "z": "b3fbb48bc7759dd9",
        "name": "current data",
        "info": "",
        "x": 130,
        "y": 4980,
        "wires": []
    },
    {
        "id": "3377f88779f7ae52",
        "type": "comment",
        "z": "b3fbb48bc7759dd9",
        "name": "hourly data",
        "info": "",
        "x": 120,
        "y": 5120,
        "wires": []
    },
    {
        "id": "3633e6a3c0256ac8",
        "type": "debug",
        "z": "b3fbb48bc7759dd9",
        "name": "message",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1020,
        "y": 5100,
        "wires": []
    },
    {
        "id": "3d810087b45e2b6f",
        "type": "comment",
        "z": "b3fbb48bc7759dd9",
        "name": "Clustering",
        "info": "",
        "x": 120,
        "y": 4820,
        "wires": []
    },
    {
        "id": "15f786c6fe98fcdb",
        "type": "sqlite",
        "z": "b3fbb48bc7759dd9",
        "mydb": "5592c0ac1723dc37",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "Database",
        "x": 700,
        "y": 4620,
        "wires": [
            [
                "e7c3b8ef18859b23"
            ]
        ]
    },
    {
        "id": "e7c3b8ef18859b23",
        "type": "debug",
        "z": "b3fbb48bc7759dd9",
        "name": "message",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 860,
        "y": 4620,
        "wires": []
    },
    {
        "id": "20965ad24c1f3098",
        "type": "link in",
        "z": "b3fbb48bc7759dd9",
        "name": "link in 35",
        "links": [
            "6ae6f32766c56036",
            "c82ead9aa3f4be51",
            "f8912a8523555735",
            "de84111695336a92"
        ],
        "x": 545,
        "y": 4680,
        "wires": [
            [
                "15f786c6fe98fcdb"
            ]
        ]
    },
    {
        "id": "311c71b2316ef8d9",
        "type": "link out",
        "z": "b3fbb48bc7759dd9",
        "name": "link out 77",
        "mode": "link",
        "links": [
            "8f23406a8c40fa28",
            "ccb1a923955e85e0",
            "1deaf81aa095cc6d",
            "4c8b7e0bb66aacb4",
            "acd94049dbb1094f",
            "d4788347a165885b"
        ],
        "x": 1215,
        "y": 5620,
        "wires": []
    },
    {
        "id": "57e5226279f1cc6f",
        "type": "function",
        "z": "b3fbb48bc7759dd9",
        "name": "INSERT TABLE lesvos_historical_data",
        "func": "var values = Object.values(msg.payload);\nvalues = values.join(\"','\");\n\nmsg.topic = \"INSERT INTO lesvos_historical_data (latitude, longitude, temperature, humidity, rain, snowfall, cloud_cover, wind_speed, wave_height, wave_direction, wave_period, timestamp) VALUES ('\" + values + \"')\";\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1030,
        "y": 5620,
        "wires": [
            [
                "311c71b2316ef8d9"
            ]
        ]
    },
    {
        "id": "388b067cf77ed94b",
        "type": "function",
        "z": "b3fbb48bc7759dd9",
        "name": "make rows",
        "func": "var weather_data;\nvar waves_data;\n\nvar latitude;\nvar longitude;\n\nif (msg.payload[0].hourly.temperature_2m !== undefined) {\n    weather_data = msg.payload[0].hourly;\n    waves_data = msg.payload[1].hourly;\n    latitude = msg.payload[1].latitude;\n    longitude = msg.payload[1].longitude;\n} else {\n    weather_data = msg.payload[1].hourly;\n    waves_data = msg.payload[0].hourly;\n    latitude = msg.payload[0].latitude;\n    longitude = msg.payload[0].longitude;\n}\n\nfor (var i = 0; i < weather_data.time.length; i++) {  \n    \n    msg.payload = {};\n    \n    msg.payload.latitude = latitude;\n    msg.payload.longitude = longitude;\n\n    msg.payload.temperature = weather_data.temperature_2m[i];\n    msg.payload.humidity = weather_data.relative_humidity_2m[i];\n    msg.payload.rain = weather_data.rain[i];\n    msg.payload.snowfall = weather_data.snowfall[i];\n    msg.payload.cloud_cover = weather_data.cloud_cover[i];\n    msg.payload.wind_speed = weather_data.wind_speed_10m[i];\n\n    msg.payload.wave_height = waves_data.wave_height[i];\n    msg.payload.wave_direction = waves_data.wave_direction[i];\n    msg.payload.wave_period = waves_data.wave_period[i];\n\n    msg.payload.timestamp = weather_data.time[i];\n\n    node.send(msg);\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 5620,
        "wires": [
            [
                "57e5226279f1cc6f"
            ]
        ]
    },
    {
        "id": "18936e12334d9a6f",
        "type": "comment",
        "z": "b3fbb48bc7759dd9",
        "name": "Historical weather & waves data for 2023",
        "info": "",
        "x": 220,
        "y": 5420,
        "wires": []
    },
    {
        "id": "fd4e8408b42d96e7",
        "type": "function",
        "z": "b3fbb48bc7759dd9",
        "name": "CREATE TABLE lesvos_historical_data",
        "func": "msg.topic = 'CREATE TABLE lesvos_historical_data (' +\n    'latitude FLOAT,' +\n    'longitude FLOAT,' +\n    'temperature FLOAT,' +\n    'humidity FLOAT,' +\n    'rain FLOAT,' +\n    'snowfall FLOAT,' +\n    'cloud_cover FLOAT,' +\n    'wind_speed FLOAT,' +\n    'wave_height FLOAT,' +\n    'wave_direction FLOAT,' +\n    'wave_period FLOAT,' +\n    'timestamp TEXT' +\n    ')';\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 5460,
        "wires": [
            [
                "d04939e1c5977209"
            ]
        ]
    },
    {
        "id": "4dd066e34438f832",
        "type": "function",
        "z": "b3fbb48bc7759dd9",
        "name": "SELECT TABLE lesvos_historical_data",
        "func": "msg.topic = 'SELECT * FROM lesvos_historical_data';\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 5500,
        "wires": [
            [
                "d04939e1c5977209"
            ]
        ]
    },
    {
        "id": "484fea2c83b630fa",
        "type": "inject",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 5460,
        "wires": [
            [
                "fd4e8408b42d96e7"
            ]
        ]
    },
    {
        "id": "041ecdf61ee69133",
        "type": "inject",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 5500,
        "wires": [
            [
                "4dd066e34438f832"
            ]
        ]
    },
    {
        "id": "3c75f7aa80661f11",
        "type": "function",
        "z": "b3fbb48bc7759dd9",
        "name": "DROP TABLE lesvos_historical_data",
        "func": "msg.topic = 'DROP TABLE lesvos_historical_data';\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 410,
        "y": 5540,
        "wires": [
            [
                "d04939e1c5977209"
            ]
        ]
    },
    {
        "id": "b17e5a303b43a6eb",
        "type": "inject",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 5540,
        "wires": [
            [
                "3c75f7aa80661f11"
            ]
        ]
    },
    {
        "id": "dc81abdc7e6a86cf",
        "type": "inject",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 5620,
        "wires": [
            [
                "a091de0c8c1ee582",
                "9e1a740558d9f447"
            ]
        ]
    },
    {
        "id": "b907cef1878b7d85",
        "type": "json",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 470,
        "y": 5620,
        "wires": [
            [
                "dbb7c3d55ddf6e06"
            ]
        ]
    },
    {
        "id": "a091de0c8c1ee582",
        "type": "http request",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://marine-api.open-meteo.com/v1/marine?latitude=39.10412&longitude=26.56064&hourly=wave_height,wave_direction,wave_period&start_date=2023-01-01&end_date=2023-12-31",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 310,
        "y": 5640,
        "wires": [
            [
                "b907cef1878b7d85"
            ]
        ]
    },
    {
        "id": "dbb7c3d55ddf6e06",
        "type": "join",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 610,
        "y": 5620,
        "wires": [
            [
                "388b067cf77ed94b"
            ]
        ]
    },
    {
        "id": "9e1a740558d9f447",
        "type": "http request",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://archive-api.open-meteo.com/v1/archive?latitude=39.10412&longitude=26.56064&start_date=2023-01-01&end_date=2023-12-31&hourly=temperature_2m,relative_humidity_2m,rain,snowfall,cloud_cover,wind_speed_10m",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 310,
        "y": 5600,
        "wires": [
            [
                "b907cef1878b7d85"
            ]
        ]
    },
    {
        "id": "b8c2dae8e4c92b59",
        "type": "sqlite",
        "z": "b3fbb48bc7759dd9",
        "mydb": "5592c0ac1723dc37",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "Database",
        "x": 640,
        "y": 5760,
        "wires": [
            [
                "35da8d1656dd72f8"
            ]
        ]
    },
    {
        "id": "c757a2c88c5eca7e",
        "type": "inject",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 5760,
        "wires": [
            [
                "cb31b5532b9256c4"
            ]
        ]
    },
    {
        "id": "cb31b5532b9256c4",
        "type": "function",
        "z": "b3fbb48bc7759dd9",
        "name": "SELECT TABLE lesvos_historical_data",
        "func": "msg.topic = 'SELECT * FROM lesvos_historical_data';\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 5760,
        "wires": [
            [
                "b8c2dae8e4c92b59"
            ]
        ]
    },
    {
        "id": "13ef4f7f3d40f2fd",
        "type": "function",
        "z": "b3fbb48bc7759dd9",
        "name": "filter data",
        "func": "var temperature = new Array();\n\ntemperature[0] = msg.payload.temperature;\nmsg.payload = {};\nmsg.payload = temperature;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 5700,
        "wires": [
            [
                "48bbcc866918701b"
            ]
        ]
    },
    {
        "id": "48bbcc866918701b",
        "type": "join",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "mode": "auto",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": "false",
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "x": 1130,
        "y": 5700,
        "wires": [
            [
                "828448d13f63d1d9"
            ]
        ]
    },
    {
        "id": "828448d13f63d1d9",
        "type": "function",
        "z": "b3fbb48bc7759dd9",
        "name": "temperature kmeans clusters",
        "func": "var clusterMaker = context.global.clusters;\n\n//number of clusters, defaults to undefined\nclusterMaker.k(4);\n\n//number of iterations (higher number gives more time to converge), defaults to 1000\nclusterMaker.iterations(750);\n\nclusterMaker.data(msg.payload);\nmsg.payload = clusterMaker.clusters();\n\nmsg.payload.sort(function(a, b) {\n    return parseFloat(a.centroid) - parseFloat(b.centroid);\n});\n\nglobal.set(\"lesvosTemperatureClusters\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1340,
        "y": 5700,
        "wires": [
            [
                "263deca95ca2da2f"
            ]
        ]
    },
    {
        "id": "263deca95ca2da2f",
        "type": "debug",
        "z": "b3fbb48bc7759dd9",
        "name": "message",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1600,
        "y": 5760,
        "wires": []
    },
    {
        "id": "d1c2bb73f33d76f0",
        "type": "function",
        "z": "b3fbb48bc7759dd9",
        "name": "filter data",
        "func": "var rain = new Array();\n\nrain[0] = msg.payload.rain;\nmsg.payload = {};\nmsg.payload = rain;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 5740,
        "wires": [
            [
                "8d204adade327d1b"
            ]
        ]
    },
    {
        "id": "8d204adade327d1b",
        "type": "join",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "mode": "auto",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": "false",
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "x": 1130,
        "y": 5740,
        "wires": [
            [
                "3dca7a5fcc2b9fbf"
            ]
        ]
    },
    {
        "id": "3dca7a5fcc2b9fbf",
        "type": "function",
        "z": "b3fbb48bc7759dd9",
        "name": "rain kmeans clusters",
        "func": "var clusterMaker = context.global.clusters;\n\n//number of clusters, defaults to undefined\nclusterMaker.k(4);\n\n//number of iterations (higher number gives more time to converge), defaults to 1000\nclusterMaker.iterations(750);\n\nclusterMaker.data(msg.payload);\nmsg.payload = clusterMaker.clusters();\n\nmsg.payload.sort(function(a, b) {\n    return parseFloat(b.centroid) - parseFloat(a.centroid);\n});\n\nglobal.set(\"lesvosRainClusters\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1360,
        "y": 5740,
        "wires": [
            [
                "263deca95ca2da2f"
            ]
        ]
    },
    {
        "id": "ed317311eaa24e6c",
        "type": "function",
        "z": "b3fbb48bc7759dd9",
        "name": "filter data",
        "func": "var wind_speed = new Array();\n\nwind_speed[0] = msg.payload.wind_speed;\nmsg.payload = {};\nmsg.payload = wind_speed;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 5780,
        "wires": [
            [
                "8b98a48026533a82"
            ]
        ]
    },
    {
        "id": "8b98a48026533a82",
        "type": "join",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "mode": "auto",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": "false",
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "x": 1130,
        "y": 5780,
        "wires": [
            [
                "b1329525939c26ec"
            ]
        ]
    },
    {
        "id": "b1329525939c26ec",
        "type": "function",
        "z": "b3fbb48bc7759dd9",
        "name": "wind_speed kmeans clusters",
        "func": "var clusterMaker = context.global.clusters;\n\n//number of clusters, defaults to undefined\nclusterMaker.k(4);\n\n//number of iterations (higher number gives more time to converge), defaults to 1000\nclusterMaker.iterations(750);\n\nclusterMaker.data(msg.payload);\nmsg.payload = clusterMaker.clusters();\n\nmsg.payload.sort(function(a, b) {\n    return parseFloat(b.centroid) - parseFloat(a.centroid);\n});\n\nglobal.set(\"lesvosWindSpeedClusters\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1340,
        "y": 5780,
        "wires": [
            [
                "263deca95ca2da2f"
            ]
        ]
    },
    {
        "id": "4e10a38843c6d6ac",
        "type": "function",
        "z": "b3fbb48bc7759dd9",
        "name": "filter data",
        "func": "var wave_height = new Array();\n\nwave_height[0] = msg.payload.wave_height;\nmsg.payload = {};\nmsg.payload = wave_height;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 5820,
        "wires": [
            [
                "5c9960b01b3f600f"
            ]
        ]
    },
    {
        "id": "5c9960b01b3f600f",
        "type": "join",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "mode": "auto",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": "false",
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "x": 1130,
        "y": 5820,
        "wires": [
            [
                "efaaf0f84371884d"
            ]
        ]
    },
    {
        "id": "efaaf0f84371884d",
        "type": "function",
        "z": "b3fbb48bc7759dd9",
        "name": "wave_height kmeans clusters",
        "func": "var clusterMaker = context.global.clusters;\n\n//number of clusters, defaults to undefined\nclusterMaker.k(4);\n\n//number of iterations (higher number gives more time to converge), defaults to 1000\nclusterMaker.iterations(750);\n\nclusterMaker.data(msg.payload);\nmsg.payload = clusterMaker.clusters();\n\nmsg.payload.sort(function(a, b) {\n    return parseFloat(b.centroid) - parseFloat(a.centroid);\n});\n\nglobal.set(\"lesvosWaveHeightClusters\", msg.payload);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1330,
        "y": 5820,
        "wires": [
            [
                "263deca95ca2da2f"
            ]
        ]
    },
    {
        "id": "35da8d1656dd72f8",
        "type": "split",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 790,
        "y": 5760,
        "wires": [
            [
                "13ef4f7f3d40f2fd",
                "d1c2bb73f33d76f0",
                "ed317311eaa24e6c",
                "4e10a38843c6d6ac"
            ]
        ]
    },
    {
        "id": "4dedf9cf35a7e4f1",
        "type": "inject",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 6080,
        "wires": [
            [
                "453fad0b24afc384",
                "bfe970935ed185d9"
            ]
        ]
    },
    {
        "id": "2141df42b8289aeb",
        "type": "json",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 450,
        "y": 6080,
        "wires": [
            [
                "97ca7c24679ba523"
            ]
        ]
    },
    {
        "id": "453fad0b24afc384",
        "type": "http request",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://api.open-meteo.com/v1/forecast?latitude=39.10412&longitude=26.56064&hourly=temperature_2m,relative_humidity_2m,rain,showers,snowfall,cloud_cover,wind_speed_10m&forecast_days=2&timezone=auto",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 310,
        "y": 6060,
        "wires": [
            [
                "2141df42b8289aeb"
            ]
        ]
    },
    {
        "id": "bfe970935ed185d9",
        "type": "http request",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://marine-api.open-meteo.com/v1/marine?latitude=39.10412&longitude=26.56064&hourly=wave_height,wave_direction,wave_period&timezone=auto&forecast_days=2",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 310,
        "y": 6100,
        "wires": [
            [
                "2141df42b8289aeb"
            ]
        ]
    },
    {
        "id": "97ca7c24679ba523",
        "type": "join",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 570,
        "y": 6080,
        "wires": [
            [
                "8274fb280583d717"
            ]
        ]
    },
    {
        "id": "cef1ee5f4c766625",
        "type": "inject",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 5940,
        "wires": [
            [
                "660e98fd438c947c",
                "65ba416572c71773"
            ]
        ]
    },
    {
        "id": "660e98fd438c947c",
        "type": "http request",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://api.open-meteo.com/v1/forecast?latitude=39.10412&longitude=26.56064&current=temperature_2m,relative_humidity_2m,rain,showers,snowfall,cloud_cover,wind_speed_10m&timezone=auto",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 310,
        "y": 5940,
        "wires": [
            [
                "2e926ba0de892d23"
            ]
        ]
    },
    {
        "id": "2e926ba0de892d23",
        "type": "json",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 450,
        "y": 5960,
        "wires": [
            [
                "94492adb8bbbef7c"
            ]
        ]
    },
    {
        "id": "65ba416572c71773",
        "type": "http request",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://marine-api.open-meteo.com/v1/marine?latitude=39.10412&longitude=26.56064&current=wave_height,wave_direction,wave_period&timezone=auto",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 310,
        "y": 5980,
        "wires": [
            [
                "2e926ba0de892d23"
            ]
        ]
    },
    {
        "id": "94492adb8bbbef7c",
        "type": "join",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 570,
        "y": 5960,
        "wires": [
            [
                "b61a57f05ecf3ea7"
            ]
        ]
    },
    {
        "id": "c68b0b9d5f42c7d2",
        "type": "comment",
        "z": "b3fbb48bc7759dd9",
        "name": "current data",
        "info": "",
        "x": 130,
        "y": 5900,
        "wires": []
    },
    {
        "id": "b10dd9ad63a17fd2",
        "type": "comment",
        "z": "b3fbb48bc7759dd9",
        "name": "hourly data",
        "info": "",
        "x": 120,
        "y": 6040,
        "wires": []
    },
    {
        "id": "e4907a70be910e42",
        "type": "debug",
        "z": "b3fbb48bc7759dd9",
        "name": "message",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1020,
        "y": 6020,
        "wires": []
    },
    {
        "id": "cbb07d1b3fc27d79",
        "type": "comment",
        "z": "b3fbb48bc7759dd9",
        "name": "Clustering",
        "info": "",
        "x": 120,
        "y": 5720,
        "wires": []
    },
    {
        "id": "d04939e1c5977209",
        "type": "sqlite",
        "z": "b3fbb48bc7759dd9",
        "mydb": "5592c0ac1723dc37",
        "sqlquery": "msg.topic",
        "sql": "",
        "name": "Database",
        "x": 700,
        "y": 5520,
        "wires": [
            [
                "180f4ceb686fbbcb"
            ]
        ]
    },
    {
        "id": "180f4ceb686fbbcb",
        "type": "debug",
        "z": "b3fbb48bc7759dd9",
        "name": "message",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 860,
        "y": 5520,
        "wires": []
    },
    {
        "id": "d4788347a165885b",
        "type": "link in",
        "z": "b3fbb48bc7759dd9",
        "name": "link in 40",
        "links": [
            "1b6eae2fbcf5596d",
            "3bb4856e658bf9e4",
            "5566d64be5f25298",
            "311c71b2316ef8d9"
        ],
        "x": 545,
        "y": 5580,
        "wires": [
            [
                "d04939e1c5977209"
            ]
        ]
    },
    {
        "id": "89764574cf2ef7e5",
        "type": "ui_dropdown",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "label": "Location",
        "tooltip": "",
        "place": "Select",
        "group": "8d9f152ea4ca25c6",
        "order": 2,
        "width": 8,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Piraeus",
                "value": "Piraeus",
                "type": "str"
            },
            {
                "label": "Crete",
                "value": "Crete",
                "type": "str"
            },
            {
                "label": "Thessaloniki",
                "value": "Thessaloniki",
                "type": "str"
            },
            {
                "label": "Kerkyra",
                "value": "Kerkyra",
                "type": "str"
            },
            {
                "label": "Lesvos",
                "value": "Lesvos",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 1520,
        "y": 1360,
        "wires": [
            [
                "e4fd513dde26525e"
            ]
        ]
    },
    {
        "id": "be499b2c45dbf311",
        "type": "ui_gauge",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "group": "7d0afa32e32bf88b",
        "order": 8,
        "width": 8,
        "height": 4,
        "gtype": "gage",
        "title": "Temperature Gauge",
        "label": "",
        "format": "{{value}}  °C",
        "min": "-50",
        "max": "50",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 3060,
        "y": 440,
        "wires": []
    },
    {
        "id": "cd0cf8aef647eb8d",
        "type": "function",
        "z": "b3fbb48bc7759dd9",
        "name": "temperature",
        "func": "var temperature = msg.payload.temperature;\nmsg.payload = {};\n\nmsg.payload = temperature;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2770,
        "y": 440,
        "wires": [
            [
                "8869049baef29c8b",
                "be499b2c45dbf311"
            ]
        ]
    },
    {
        "id": "eb5ec20fa2f15cd9",
        "type": "ui_gauge",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "group": "7d0afa32e32bf88b",
        "order": 9,
        "width": 8,
        "height": 4,
        "gtype": "gage",
        "title": "Rain Gauge",
        "label": "",
        "format": "{{value}}  mm",
        "min": 0,
        "max": "10",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 3030,
        "y": 480,
        "wires": []
    },
    {
        "id": "b965bdeeff5b4942",
        "type": "ui_gauge",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "group": "7d0afa32e32bf88b",
        "order": 10,
        "width": 8,
        "height": 4,
        "gtype": "gage",
        "title": "Wind Speed Gauge",
        "label": "",
        "format": "{{value}}  km/h",
        "min": 0,
        "max": "60",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 3050,
        "y": 520,
        "wires": []
    },
    {
        "id": "3833f14c641be0d9",
        "type": "ui_gauge",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "group": "7d0afa32e32bf88b",
        "order": 11,
        "width": 8,
        "height": 4,
        "gtype": "gage",
        "title": "Wave Height Gauge",
        "label": "",
        "format": "{{value}}  m",
        "min": 0,
        "max": "5",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 3060,
        "y": 560,
        "wires": []
    },
    {
        "id": "8869049baef29c8b",
        "type": "ui_text",
        "z": "b3fbb48bc7759dd9",
        "group": "7d0afa32e32bf88b",
        "order": 5,
        "width": 6,
        "height": 1,
        "name": "",
        "label": "Temperature ",
        "format": "{{msg.payload}}  °C",
        "layout": "row-center",
        "className": "",
        "style": true,
        "font": "",
        "fontSize": "18",
        "color": "#000000",
        "x": 3030,
        "y": 400,
        "wires": []
    },
    {
        "id": "c01ca1f6d5428d84",
        "type": "function",
        "z": "b3fbb48bc7759dd9",
        "name": "rain",
        "func": "var rain = msg.payload.rain;\nmsg.payload = {};\n\nmsg.payload = rain;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2750,
        "y": 480,
        "wires": [
            [
                "eb5ec20fa2f15cd9"
            ]
        ]
    },
    {
        "id": "1aa6a08794ab714c",
        "type": "function",
        "z": "b3fbb48bc7759dd9",
        "name": "wind_speed",
        "func": "var wind_speed = msg.payload.wind_speed;\nmsg.payload = {};\n\nmsg.payload = wind_speed;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2770,
        "y": 520,
        "wires": [
            [
                "b965bdeeff5b4942"
            ]
        ]
    },
    {
        "id": "fbfa1c8bc6535076",
        "type": "function",
        "z": "b3fbb48bc7759dd9",
        "name": "wave_height",
        "func": "var wave_height = msg.payload.wave_height;\nmsg.payload = {};\n\nmsg.payload = wave_height;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2770,
        "y": 560,
        "wires": [
            [
                "3833f14c641be0d9"
            ]
        ]
    },
    {
        "id": "18676d105663bcf5",
        "type": "link in",
        "z": "b3fbb48bc7759dd9",
        "name": "link in 41",
        "links": [
            "eef4a5a09d040ff3"
        ],
        "x": 2665,
        "y": 440,
        "wires": [
            [
                "cd0cf8aef647eb8d"
            ]
        ]
    },
    {
        "id": "ae7753281502f089",
        "type": "link in",
        "z": "b3fbb48bc7759dd9",
        "name": "link in 42",
        "links": [
            "eef4a5a09d040ff3"
        ],
        "x": 2665,
        "y": 480,
        "wires": [
            [
                "c01ca1f6d5428d84"
            ]
        ]
    },
    {
        "id": "d3e89af8ce76bcf7",
        "type": "link in",
        "z": "b3fbb48bc7759dd9",
        "name": "link in 43",
        "links": [
            "eef4a5a09d040ff3"
        ],
        "x": 2665,
        "y": 520,
        "wires": [
            [
                "1aa6a08794ab714c"
            ]
        ]
    },
    {
        "id": "cbd81dd645dad935",
        "type": "link in",
        "z": "b3fbb48bc7759dd9",
        "name": "link in 44",
        "links": [
            "eef4a5a09d040ff3"
        ],
        "x": 2665,
        "y": 560,
        "wires": [
            [
                "fbfa1c8bc6535076"
            ]
        ]
    },
    {
        "id": "7fae2b4fa3afd88f",
        "type": "ui_chart",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "group": "8d9f152ea4ca25c6",
        "order": 5,
        "width": 9,
        "height": 5,
        "label": "Temperature Chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": "48",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 3230,
        "y": 1300,
        "wires": [
            []
        ]
    },
    {
        "id": "04130550b5958a60",
        "type": "function",
        "z": "b3fbb48bc7759dd9",
        "name": "temperature",
        "func": "var temperature = msg.payload.temperature;\nvar timestamp = msg.payload.timestamp;\nmsg.payload = {};\n\nmsg.payload = temperature;\nmsg.topic = \"Temperature\";\nmsg.timestamp = timestamp;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2950,
        "y": 1300,
        "wires": [
            [
                "7fae2b4fa3afd88f"
            ]
        ]
    },
    {
        "id": "5f76757d5f8040c4",
        "type": "ui_chart",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "group": "8d9f152ea4ca25c6",
        "order": 6,
        "width": 9,
        "height": 5,
        "label": "Rain Chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "",
        "removeOlder": "48",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 3210,
        "y": 1340,
        "wires": [
            []
        ]
    },
    {
        "id": "9c21ed1a0662b0fa",
        "type": "ui_chart",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "group": "8d9f152ea4ca25c6",
        "order": 7,
        "width": 9,
        "height": 5,
        "label": "Wind Speed Chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "",
        "removeOlder": "48",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 3230,
        "y": 1380,
        "wires": [
            []
        ]
    },
    {
        "id": "80d8f34e98af08ce",
        "type": "ui_chart",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "group": "8d9f152ea4ca25c6",
        "order": 8,
        "width": 9,
        "height": 5,
        "label": "Wave Height Chart",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "0",
        "ymax": "",
        "removeOlder": "48",
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 3230,
        "y": 1420,
        "wires": [
            []
        ]
    },
    {
        "id": "ee54e2e448c36853",
        "type": "function",
        "z": "b3fbb48bc7759dd9",
        "name": "rain",
        "func": "var rain = msg.payload.rain;\nvar timestamp = msg.payload.timestamp;\n\nmsg.payload = {};\n\nmsg.payload = rain;\nmsg.topic = \"Rain\";\nmsg.timestamp = timestamp;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2930,
        "y": 1340,
        "wires": [
            [
                "5f76757d5f8040c4"
            ]
        ]
    },
    {
        "id": "8cda498889de588c",
        "type": "function",
        "z": "b3fbb48bc7759dd9",
        "name": "wind_speed",
        "func": "var wind_speed = msg.payload.wind_speed;\nvar timestamp = msg.payload.timestamp;\nmsg.payload = {};\n\nmsg.payload = wind_speed;\nmsg.topic = \"Wind Speed\";\nmsg.timestamp = timestamp;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2950,
        "y": 1380,
        "wires": [
            [
                "9c21ed1a0662b0fa"
            ]
        ]
    },
    {
        "id": "974f16e267ee6724",
        "type": "function",
        "z": "b3fbb48bc7759dd9",
        "name": "wave_height",
        "func": "var wave_height = msg.payload.wave_height;\nvar timestamp = msg.payload.timestamp;\nmsg.payload = {};\n\nmsg.payload = wave_height;\nmsg.topic = \"Wave Height\";\nmsg.timestamp = timestamp;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2950,
        "y": 1420,
        "wires": [
            [
                "80d8f34e98af08ce"
            ]
        ]
    },
    {
        "id": "a6384c924616f267",
        "type": "link out",
        "z": "b3fbb48bc7759dd9",
        "name": "link out 82",
        "mode": "link",
        "links": [
            "f01802169b3737ed",
            "404f45d33f4c233b",
            "f45674510525e798",
            "afe6faf3a7d75d6d"
        ],
        "x": 2755,
        "y": 1360,
        "wires": []
    },
    {
        "id": "f01802169b3737ed",
        "type": "link in",
        "z": "b3fbb48bc7759dd9",
        "name": "link in 45",
        "links": [
            "a6384c924616f267"
        ],
        "x": 2845,
        "y": 1300,
        "wires": [
            [
                "04130550b5958a60"
            ]
        ]
    },
    {
        "id": "404f45d33f4c233b",
        "type": "link in",
        "z": "b3fbb48bc7759dd9",
        "name": "link in 46",
        "links": [
            "a6384c924616f267"
        ],
        "x": 2845,
        "y": 1340,
        "wires": [
            [
                "ee54e2e448c36853"
            ]
        ]
    },
    {
        "id": "f45674510525e798",
        "type": "link in",
        "z": "b3fbb48bc7759dd9",
        "name": "link in 47",
        "links": [
            "a6384c924616f267"
        ],
        "x": 2845,
        "y": 1380,
        "wires": [
            [
                "8cda498889de588c"
            ]
        ]
    },
    {
        "id": "afe6faf3a7d75d6d",
        "type": "link in",
        "z": "b3fbb48bc7759dd9",
        "name": "link in 48",
        "links": [
            "a6384c924616f267"
        ],
        "x": 2845,
        "y": 1420,
        "wires": [
            [
                "974f16e267ee6724"
            ]
        ]
    },
    {
        "id": "e4fd513dde26525e",
        "type": "switch",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Piraeus",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Crete",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Thessaloniki",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Kerkyra",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Lesvos",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 5,
        "x": 1670,
        "y": 1360,
        "wires": [
            [
                "1fcc17c60e63e06c"
            ],
            [
                "e5fa7a3235ab8a40"
            ],
            [
                "d99f50103ee4b56a"
            ],
            [
                "5c001d660af1b6f1"
            ],
            [
                "be9feda135cfa61f"
            ]
        ]
    },
    {
        "id": "d59f2fe6be79d256",
        "type": "link in",
        "z": "b3fbb48bc7759dd9",
        "name": "link in 49",
        "links": [
            "abcdf02e19f35935"
        ],
        "x": 1775,
        "y": 300,
        "wires": [
            [
                "45323fac1bcf2d06",
                "4e5a1b91d383b8b2"
            ]
        ]
    },
    {
        "id": "cac9524cb72acca3",
        "type": "link in",
        "z": "b3fbb48bc7759dd9",
        "name": "link in 50",
        "links": [
            "15c2632f18fe394e"
        ],
        "x": 1775,
        "y": 400,
        "wires": [
            [
                "eace38bd9a62a555",
                "744b48db903c3e26"
            ]
        ]
    },
    {
        "id": "651f42426faaf3e6",
        "type": "link in",
        "z": "b3fbb48bc7759dd9",
        "name": "link in 51",
        "links": [
            "180dafe7004ec5c4"
        ],
        "x": 1775,
        "y": 500,
        "wires": [
            [
                "29860baf27878bcb",
                "318ff756f3b1fe4a"
            ]
        ]
    },
    {
        "id": "6374d3a4f0343ae6",
        "type": "link in",
        "z": "b3fbb48bc7759dd9",
        "name": "link in 52",
        "links": [
            "c56752e387ed2002"
        ],
        "x": 1775,
        "y": 600,
        "wires": [
            [
                "eac69d1ad704e6e1",
                "f406443822496953"
            ]
        ]
    },
    {
        "id": "6b918d56c48ee33a",
        "type": "link in",
        "z": "b3fbb48bc7759dd9",
        "name": "link in 53",
        "links": [
            "a733a65ccde7fa49"
        ],
        "x": 1775,
        "y": 700,
        "wires": [
            [
                "610a75ba7aad369c",
                "0b1f6ee8bb09be19"
            ]
        ]
    },
    {
        "id": "eea4b315412a7419",
        "type": "link in",
        "z": "b3fbb48bc7759dd9",
        "name": "link in 54",
        "links": [
            "abcdf02e19f35935"
        ],
        "x": 185,
        "y": 2340,
        "wires": [
            [
                "f2e53dea5af14a87",
                "20dae60212f7fc16"
            ]
        ]
    },
    {
        "id": "e37c27b79cb420b7",
        "type": "function",
        "z": "b3fbb48bc7759dd9",
        "name": "make row",
        "func": "var weather_data;\nvar waves_data;\n\nvar latitude;\nvar longitude;\n\nif(msg.payload[0].current.temperature_2m !== undefined){\n    weather_data = msg.payload[0].current;\n    waves_data = msg.payload[1].current;\n    latitude = msg.payload[1].latitude;\n    longitude = msg.payload[1].longitude;\n}else{\n    weather_data = msg.payload[1].current;\n    waves_data = msg.payload[0].current;\n    latitude = msg.payload[0].latitude;\n    longitude = msg.payload[0].longitude;\n}\n\nvar message = {};\n\nmessage.temperature = weather_data.temperature_2m;\nmessage.humidity = weather_data.relative_humidity_2m;\nmessage.rain = weather_data.rain;\nmessage.showers = weather_data.showers;\nmessage.snowfall = weather_data.snowfall;\nmessage.cloud_cover = weather_data.cloud_cover;\nmessage.wind_speed = weather_data.wind_speed_10m;\n\nmessage.wave_height = waves_data.wave_height;\nmessage.wave_direction = waves_data.wave_direction;\nmessage.wave_period = waves_data.wave_period;\n\nmessage.latitude = latitude;\nmessage.longitude = longitude;\n\nmessage.timestamp = weather_data.time;\n\nmsg.payload = {};\nmsg.payload = message;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 3220,
        "wires": [
            [
                "8a53d8a6dbf21826"
            ]
        ]
    },
    {
        "id": "62f53edb2a1cdf17",
        "type": "function",
        "z": "b3fbb48bc7759dd9",
        "name": "make row",
        "func": "var weather_data;\nvar waves_data;\n\nvar latitude;\nvar longitude;\n\nif(msg.payload[0].current.temperature_2m !== undefined){\n    weather_data = msg.payload[0].current;\n    waves_data = msg.payload[1].current;\n    latitude = msg.payload[1].latitude;\n    longitude = msg.payload[1].longitude;\n}else{\n    weather_data = msg.payload[1].current;\n    waves_data = msg.payload[0].current;\n    latitude = msg.payload[0].latitude;\n    longitude = msg.payload[0].longitude;\n}\n\nvar message = {};\n\nmessage.temperature = weather_data.temperature_2m;\nmessage.humidity = weather_data.relative_humidity_2m;\nmessage.rain = weather_data.rain;\nmessage.showers = weather_data.showers;\nmessage.snowfall = weather_data.snowfall;\nmessage.cloud_cover = weather_data.cloud_cover;\nmessage.wind_speed = weather_data.wind_speed_10m;\n\nmessage.wave_height = waves_data.wave_height;\nmessage.wave_direction = waves_data.wave_direction;\nmessage.wave_period = waves_data.wave_period;\n\nmessage.latitude = latitude;\nmessage.longitude = longitude;\n\nmessage.timestamp = weather_data.time;\n\nmsg.payload = {};\nmsg.payload = message;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 4140,
        "wires": [
            [
                "a23248ee80c22415"
            ]
        ]
    },
    {
        "id": "03f563e784676d1d",
        "type": "function",
        "z": "b3fbb48bc7759dd9",
        "name": "make row",
        "func": "var weather_data;\nvar waves_data;\n\nvar latitude;\nvar longitude;\n\nif(msg.payload[0].current.temperature_2m !== undefined){\n    weather_data = msg.payload[0].current;\n    waves_data = msg.payload[1].current;\n    latitude = msg.payload[1].latitude;\n    longitude = msg.payload[1].longitude;\n}else{\n    weather_data = msg.payload[1].current;\n    waves_data = msg.payload[0].current;\n    latitude = msg.payload[0].latitude;\n    longitude = msg.payload[0].longitude;\n}\n\nvar message = {};\n\nmessage.temperature = weather_data.temperature_2m;\nmessage.humidity = weather_data.relative_humidity_2m;\nmessage.rain = weather_data.rain;\nmessage.showers = weather_data.showers;\nmessage.snowfall = weather_data.snowfall;\nmessage.cloud_cover = weather_data.cloud_cover;\nmessage.wind_speed = weather_data.wind_speed_10m;\n\nmessage.wave_height = waves_data.wave_height;\nmessage.wave_direction = waves_data.wave_direction;\nmessage.wave_period = waves_data.wave_period;\n\nmessage.latitude = latitude;\nmessage.longitude = longitude;\n\nmessage.timestamp = weather_data.time;\n\nmsg.payload = {};\nmsg.payload = message;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 5040,
        "wires": [
            [
                "ba14c0db1063e21e"
            ]
        ]
    },
    {
        "id": "b61a57f05ecf3ea7",
        "type": "function",
        "z": "b3fbb48bc7759dd9",
        "name": "make row",
        "func": "var weather_data;\nvar waves_data;\n\nvar latitude;\nvar longitude;\n\nif(msg.payload[0].current.temperature_2m !== undefined){\n    weather_data = msg.payload[0].current;\n    waves_data = msg.payload[1].current;\n    latitude = msg.payload[1].latitude;\n    longitude = msg.payload[1].longitude;\n}else{\n    weather_data = msg.payload[1].current;\n    waves_data = msg.payload[0].current;\n    latitude = msg.payload[0].latitude;\n    longitude = msg.payload[0].longitude;\n}\n\nvar message = {};\n\nmessage.temperature = weather_data.temperature_2m;\nmessage.humidity = weather_data.relative_humidity_2m;\nmessage.rain = weather_data.rain;\nmessage.showers = weather_data.showers;\nmessage.snowfall = weather_data.snowfall;\nmessage.cloud_cover = weather_data.cloud_cover;\nmessage.wind_speed = weather_data.wind_speed_10m;\n\nmessage.wave_height = waves_data.wave_height;\nmessage.wave_direction = waves_data.wave_direction;\nmessage.wave_period = waves_data.wave_period;\n\nmessage.latitude = latitude;\nmessage.longitude = longitude;\n\nmessage.timestamp = weather_data.time;\n\nmsg.payload = {};\nmsg.payload = message;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 5960,
        "wires": [
            [
                "4c3a028eb77b5eb7"
            ]
        ]
    },
    {
        "id": "8a53d8a6dbf21826",
        "type": "function",
        "z": "b3fbb48bc7759dd9",
        "name": "clusters",
        "func": "var temperature = msg.payload.temperature;\nvar rain = msg.payload.rain;\nvar wind_speed = msg.payload.wind_speed;\nvar wave_height = msg.payload.wave_height;\nvar timestamp = msg.payload.timestamp;\n\nvar lat = msg.payload.latitude;\nvar lon = msg.payload.longitude;\n\nvar temperature_clusters = global.get('creteTemperatureClusters');\nvar rain_clusters = global.get('creteRainClusters');\nvar wind_speed_clusters = global.get('creteWindSpeedClusters');\nvar wave_height_clusters = global.get('creteWaveHeightClusters');\n\nvar name = \"Crete\"\n\nvar diff;\nvar min;\n\nmin = 10000000;\nvar overall_temperature_cluster = -1;\nfor (var k = 0; k < temperature_clusters.length;k++) {\n    diff = Math.abs(temperature_clusters[k].centroid[0] - temperature);\n    if (diff<min) {\n        overall_temperature_cluster = k;\n        min = diff;\n    }\n}\n\nmin = 10000000;\nvar overall_rain_cluster = -1;\nfor (var k = 0; k < rain_clusters.length; k++) {\n    diff = Math.abs(rain_clusters[k].centroid[0] - rain);\n    if (diff < min) {\n        overall_rain_cluster = k;\n        min = diff;\n    }\n}\n\nmin = 10000000;\nvar overall_wind_speed_cluster = -1;\nfor (var k = 0; k < wind_speed_clusters.length; k++) {\n    diff = Math.abs(wind_speed_clusters[k].centroid[0] - wind_speed);\n    if (diff < min) {\n        overall_wind_speed_cluster = k;\n        min = diff;\n    }\n}\n\nmin = 10000000;\nvar overall_wave_height_cluster = -1;\nfor (var k = 0; k < wave_height_clusters.length; k++) {\n    diff = Math.abs(wave_height_clusters[k].centroid[0] - wave_height);\n    if (diff < min) {\n        overall_wave_height_cluster = k;\n        min = diff;\n    }\n}\n\nvar temperatureState;\nswitch (overall_temperature_cluster) {\n    case 0:\n        temperatureState = \"bad state\"\n        break;\n    case 1:\n        temperatureState = \"moderate state\"\n        break;\n    case 2:\n        temperatureState = \"good state\"\n        break;\n    case 3:\n        temperatureState = \"excellent state\"\n        break;\n    default:\n        temperatureState = \"unknown state\"\n}\n\nvar rainState;\nswitch (overall_rain_cluster) {\n    case 0:\n        rainState = \"bad state\"\n        break;\n    case 1:\n        rainState = \"moderate state\"\n        break;\n    case 2:\n        rainState = \"good state\"\n        break;\n    case 3:\n        rainState = \"excellent state\"\n        break;\n    default:\n        rainState = \"unknown state\"\n}\n\nvar windSpeedState;\nswitch (overall_wind_speed_cluster) {\n    case 0:\n        windSpeedState = \"bad state\"\n        break;\n    case 1:\n        windSpeedState = \"moderate state\"\n        break;\n    case 2:\n        windSpeedState = \"good state\"\n        break;\n    case 3:\n        windSpeedState = \"excellent state\"\n        break;\n    default:\n        windSpeedState = \"unknown state\"\n}\n\nvar waveHeightState;\nswitch (overall_wave_height_cluster) {\n    case 0:\n        waveHeightState = \"bad state\"\n        break;\n    case 1:\n        waveHeightState = \"moderate state\"\n        break;\n    case 2:\n        waveHeightState = \"good state\"\n        break;\n    case 3:\n        waveHeightState = \"excellent state\"\n        break;\n    default:\n        waveHeightState = \"unknown state\"\n}\n\nvar states = [temperatureState, rainState, windSpeedState, waveHeightState];\n\nvar statePriority = {\n    \"bad state\": 3,\n    \"moderate state\": 2,\n    \"good state\": 1,\n    \"excellent state\": 0\n};\n\nvar priorityColor = {\n    3: \"red\",\n    2: \"orange\",\n    1: \"green\",\n    0: \"blue\"\n};\n\nvar highestPriority = -1;\nfor (var i = 0; i < states.length; i++) {\n    var currentState = states[i];\n    if (statePriority.hasOwnProperty(currentState)) {\n        var currentPriority = statePriority[currentState];\n        if (currentPriority > highestPriority) {\n            highestPriority = currentPriority;\n        }\n    }\n}\n\nvar iconColor = \"grey\";\niconColor = priorityColor[highestPriority]\n\nmsg.payload = {};\nmsg.payload.name = name;\nmsg.payload.lat = lat;\nmsg.payload.lon = lon;\nmsg.payload.timestamp = timestamp;\nmsg.payload.iconColor = iconColor;\nmsg.payload.layer = \"location\";\n\nmsg.payload.temperature = temperature;\nmsg.payload.temperatureState = temperatureState;\n\nmsg.payload.rain = rain;\nmsg.payload.rainState = rainState;\n\nmsg.payload.wind_speed = wind_speed;\nmsg.payload.windSpeedState = windSpeedState;\n\nmsg.payload.wave_height = wave_height;\nmsg.payload.waveHeightState = waveHeightState;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 3220,
        "wires": [
            [
                "fe2cce4e0f786f34",
                "2f60f26bbf2db9f5",
                "c50f03f6454c6f03"
            ]
        ]
    },
    {
        "id": "a23248ee80c22415",
        "type": "function",
        "z": "b3fbb48bc7759dd9",
        "name": "clusters",
        "func": "var temperature = msg.payload.temperature;\nvar rain = msg.payload.rain;\nvar wind_speed = msg.payload.wind_speed;\nvar wave_height = msg.payload.wave_height;\nvar timestamp = msg.payload.timestamp;\n\nvar lat = msg.payload.latitude;\nvar lon = msg.payload.longitude;\n\nvar temperature_clusters = global.get('skgTemperatureClusters');\nvar rain_clusters = global.get('skgRainClusters');\nvar wind_speed_clusters = global.get('skgWindSpeedClusters');\nvar wave_height_clusters = global.get('skgWaveHeightClusters');\n\nvar name = \"Thessaloniki\"\n\nvar diff;\nvar min;\n\nmin = 10000000;\nvar overall_temperature_cluster = -1;\nfor (var k = 0; k < temperature_clusters.length;k++) {\n    diff = Math.abs(temperature_clusters[k].centroid[0] - temperature);\n    if (diff<min) {\n        overall_temperature_cluster = k;\n        min = diff;\n    }\n}\n\nmin = 10000000;\nvar overall_rain_cluster = -1;\nfor (var k = 0; k < rain_clusters.length; k++) {\n    diff = Math.abs(rain_clusters[k].centroid[0] - rain);\n    if (diff < min) {\n        overall_rain_cluster = k;\n        min = diff;\n    }\n}\n\nmin = 10000000;\nvar overall_wind_speed_cluster = -1;\nfor (var k = 0; k < wind_speed_clusters.length; k++) {\n    diff = Math.abs(wind_speed_clusters[k].centroid[0] - wind_speed);\n    if (diff < min) {\n        overall_wind_speed_cluster = k;\n        min = diff;\n    }\n}\n\nmin = 10000000;\nvar overall_wave_height_cluster = -1;\nfor (var k = 0; k < wave_height_clusters.length; k++) {\n    diff = Math.abs(wave_height_clusters[k].centroid[0] - wave_height);\n    if (diff < min) {\n        overall_wave_height_cluster = k;\n        min = diff;\n    }\n}\n\nvar temperatureState;\nswitch (overall_temperature_cluster) {\n    case 0:\n        temperatureState = \"bad state\"\n        break;\n    case 1:\n        temperatureState = \"moderate state\"\n        break;\n    case 2:\n        temperatureState = \"good state\"\n        break;\n    case 3:\n        temperatureState = \"excellent state\"\n        break;\n    default:\n        temperatureState = \"unknown state\"\n}\n\nvar rainState;\nswitch (overall_rain_cluster) {\n    case 0:\n        rainState = \"bad state\"\n        break;\n    case 1:\n        rainState = \"moderate state\"\n        break;\n    case 2:\n        rainState = \"good state\"\n        break;\n    case 3:\n        rainState = \"excellent state\"\n        break;\n    default:\n        rainState = \"unknown state\"\n}\n\nvar windSpeedState;\nswitch (overall_wind_speed_cluster) {\n    case 0:\n        windSpeedState = \"bad state\"\n        break;\n    case 1:\n        windSpeedState = \"moderate state\"\n        break;\n    case 2:\n        windSpeedState = \"good state\"\n        break;\n    case 3:\n        windSpeedState = \"excellent state\"\n        break;\n    default:\n        windSpeedState = \"unknown state\"\n}\n\nvar waveHeightState;\nswitch (overall_wave_height_cluster) {\n    case 0:\n        waveHeightState = \"bad state\"\n        break;\n    case 1:\n        waveHeightState = \"moderate state\"\n        break;\n    case 2:\n        waveHeightState = \"good state\"\n        break;\n    case 3:\n        waveHeightState = \"excellent state\"\n        break;\n    default:\n        waveHeightState = \"unknown state\"\n}\n\nvar states = [temperatureState, rainState, windSpeedState, waveHeightState];\n\nvar statePriority = {\n    \"bad state\": 3,\n    \"moderate state\": 2,\n    \"good state\": 1,\n    \"excellent state\": 0\n};\n\nvar priorityColor = {\n    3: \"red\",\n    2: \"orange\",\n    1: \"green\",\n    0: \"blue\"\n};\n\nvar highestPriority = -1;\nfor (var i = 0; i < states.length; i++) {\n    var currentState = states[i];\n    if (statePriority.hasOwnProperty(currentState)) {\n        var currentPriority = statePriority[currentState];\n        if (currentPriority > highestPriority) {\n            highestPriority = currentPriority;\n        }\n    }\n}\n\nvar iconColor = \"grey\";\niconColor = priorityColor[highestPriority]\n\nmsg.payload = {};\nmsg.payload.name = name;\nmsg.payload.lat = lat;\nmsg.payload.lon = lon;\nmsg.payload.timestamp = timestamp;\nmsg.payload.iconColor = iconColor;\nmsg.payload.layer = \"location\";\n\nmsg.payload.temperature = temperature;\nmsg.payload.temperatureState = temperatureState;\n\nmsg.payload.rain = rain;\nmsg.payload.rainState = rainState;\n\nmsg.payload.wind_speed = wind_speed;\nmsg.payload.windSpeedState = windSpeedState;\n\nmsg.payload.wave_height = wave_height;\nmsg.payload.waveHeightState = waveHeightState;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 4140,
        "wires": [
            [
                "1b78b350e8b5bad2",
                "f2249f2a7261d185",
                "68b905c736e4d7e0"
            ]
        ]
    },
    {
        "id": "ba14c0db1063e21e",
        "type": "function",
        "z": "b3fbb48bc7759dd9",
        "name": "clusters",
        "func": "var temperature = msg.payload.temperature;\nvar rain = msg.payload.rain;\nvar wind_speed = msg.payload.wind_speed;\nvar wave_height = msg.payload.wave_height;\nvar timestamp = msg.payload.timestamp;\n\nvar lat = msg.payload.latitude;\nvar lon = msg.payload.longitude;\n\nvar temperature_clusters = global.get('kerkyraTemperatureClusters');\nvar rain_clusters = global.get('kerkyraRainClusters');\nvar wind_speed_clusters = global.get('kerkyraWindSpeedClusters');\nvar wave_height_clusters = global.get('kerkyraWaveHeightClusters');\n\nvar name = \"Kerkyra\"\n\nvar diff;\nvar min;\n\nmin = 10000000;\nvar overall_temperature_cluster = -1;\nfor (var k = 0; k < temperature_clusters.length;k++) {\n    diff = Math.abs(temperature_clusters[k].centroid[0] - temperature);\n    if (diff<min) {\n        overall_temperature_cluster = k;\n        min = diff;\n    }\n}\n\nmin = 10000000;\nvar overall_rain_cluster = -1;\nfor (var k = 0; k < rain_clusters.length; k++) {\n    diff = Math.abs(rain_clusters[k].centroid[0] - rain);\n    if (diff < min) {\n        overall_rain_cluster = k;\n        min = diff;\n    }\n}\n\nmin = 10000000;\nvar overall_wind_speed_cluster = -1;\nfor (var k = 0; k < wind_speed_clusters.length; k++) {\n    diff = Math.abs(wind_speed_clusters[k].centroid[0] - wind_speed);\n    if (diff < min) {\n        overall_wind_speed_cluster = k;\n        min = diff;\n    }\n}\n\nmin = 10000000;\nvar overall_wave_height_cluster = -1;\nfor (var k = 0; k < wave_height_clusters.length; k++) {\n    diff = Math.abs(wave_height_clusters[k].centroid[0] - wave_height);\n    if (diff < min) {\n        overall_wave_height_cluster = k;\n        min = diff;\n    }\n}\n\nvar temperatureState;\nswitch (overall_temperature_cluster) {\n    case 0:\n        temperatureState = \"bad state\"\n        break;\n    case 1:\n        temperatureState = \"moderate state\"\n        break;\n    case 2:\n        temperatureState = \"good state\"\n        break;\n    case 3:\n        temperatureState = \"excellent state\"\n        break;\n    default:\n        temperatureState = \"unknown state\"\n}\n\nvar rainState;\nswitch (overall_rain_cluster) {\n    case 0:\n        rainState = \"bad state\"\n        break;\n    case 1:\n        rainState = \"moderate state\"\n        break;\n    case 2:\n        rainState = \"good state\"\n        break;\n    case 3:\n        rainState = \"excellent state\"\n        break;\n    default:\n        rainState = \"unknown state\"\n}\n\nvar windSpeedState;\nswitch (overall_wind_speed_cluster) {\n    case 0:\n        windSpeedState = \"bad state\"\n        break;\n    case 1:\n        windSpeedState = \"moderate state\"\n        break;\n    case 2:\n        windSpeedState = \"good state\"\n        break;\n    case 3:\n        windSpeedState = \"excellent state\"\n        break;\n    default:\n        windSpeedState = \"unknown state\"\n}\n\nvar waveHeightState;\nswitch (overall_wave_height_cluster) {\n    case 0:\n        waveHeightState = \"bad state\"\n        break;\n    case 1:\n        waveHeightState = \"moderate state\"\n        break;\n    case 2:\n        waveHeightState = \"good state\"\n        break;\n    case 3:\n        waveHeightState = \"excellent state\"\n        break;\n    default:\n        waveHeightState = \"unknown state\"\n}\n\nvar states = [temperatureState, rainState, windSpeedState, waveHeightState];\n\nvar statePriority = {\n    \"bad state\": 3,\n    \"moderate state\": 2,\n    \"good state\": 1,\n    \"excellent state\": 0\n};\n\nvar priorityColor = {\n    3: \"red\",\n    2: \"orange\",\n    1: \"green\",\n    0: \"blue\"\n};\n\nvar highestPriority = -1;\nfor (var i = 0; i < states.length; i++) {\n    var currentState = states[i];\n    if (statePriority.hasOwnProperty(currentState)) {\n        var currentPriority = statePriority[currentState];\n        if (currentPriority > highestPriority) {\n            highestPriority = currentPriority;\n        }\n    }\n}\n\nvar iconColor = \"grey\";\niconColor = priorityColor[highestPriority]\n\nmsg.payload = {};\nmsg.payload.name = name;\nmsg.payload.lat = lat;\nmsg.payload.lon = lon;\nmsg.payload.timestamp = timestamp;\nmsg.payload.iconColor = iconColor;\nmsg.payload.layer = \"location\";\n\nmsg.payload.temperature = temperature;\nmsg.payload.temperatureState = temperatureState;\n\nmsg.payload.rain = rain;\nmsg.payload.rainState = rainState;\n\nmsg.payload.wind_speed = wind_speed;\nmsg.payload.windSpeedState = windSpeedState;\n\nmsg.payload.wave_height = wave_height;\nmsg.payload.waveHeightState = waveHeightState;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 5040,
        "wires": [
            [
                "3633e6a3c0256ac8",
                "615f3b14c3bb66b5",
                "c381cec66dd5b7ad"
            ]
        ]
    },
    {
        "id": "4c3a028eb77b5eb7",
        "type": "function",
        "z": "b3fbb48bc7759dd9",
        "name": "clusters",
        "func": "var temperature = msg.payload.temperature;\nvar rain = msg.payload.rain;\nvar wind_speed = msg.payload.wind_speed;\nvar wave_height = msg.payload.wave_height;\nvar timestamp = msg.payload.timestamp;\n\nvar lat = msg.payload.latitude;\nvar lon = msg.payload.longitude;\n\nvar temperature_clusters = global.get('lesvosTemperatureClusters');\nvar rain_clusters = global.get('lesvosRainClusters');\nvar wind_speed_clusters = global.get('lesvosWindSpeedClusters');\nvar wave_height_clusters = global.get('lesvosWaveHeightClusters');\n\nvar name = \"Lesvos\"\n\nvar diff;\nvar min;\n\nmin = 10000000;\nvar overall_temperature_cluster = -1;\nfor (var k = 0; k < temperature_clusters.length;k++) {\n    diff = Math.abs(temperature_clusters[k].centroid[0] - temperature);\n    if (diff<min) {\n        overall_temperature_cluster = k;\n        min = diff;\n    }\n}\n\nmin = 10000000;\nvar overall_rain_cluster = -1;\nfor (var k = 0; k < rain_clusters.length; k++) {\n    diff = Math.abs(rain_clusters[k].centroid[0] - rain);\n    if (diff < min) {\n        overall_rain_cluster = k;\n        min = diff;\n    }\n}\n\nmin = 10000000;\nvar overall_wind_speed_cluster = -1;\nfor (var k = 0; k < wind_speed_clusters.length; k++) {\n    diff = Math.abs(wind_speed_clusters[k].centroid[0] - wind_speed);\n    if (diff < min) {\n        overall_wind_speed_cluster = k;\n        min = diff;\n    }\n}\n\nmin = 10000000;\nvar overall_wave_height_cluster = -1;\nfor (var k = 0; k < wave_height_clusters.length; k++) {\n    diff = Math.abs(wave_height_clusters[k].centroid[0] - wave_height);\n    if (diff < min) {\n        overall_wave_height_cluster = k;\n        min = diff;\n    }\n}\n\nvar temperatureState;\nswitch (overall_temperature_cluster) {\n    case 0:\n        temperatureState = \"bad state\"\n        break;\n    case 1:\n        temperatureState = \"moderate state\"\n        break;\n    case 2:\n        temperatureState = \"good state\"\n        break;\n    case 3:\n        temperatureState = \"excellent state\"\n        break;\n    default:\n        temperatureState = \"unknown state\"\n}\n\nvar rainState;\nswitch (overall_rain_cluster) {\n    case 0:\n        rainState = \"bad state\"\n        break;\n    case 1:\n        rainState = \"moderate state\"\n        break;\n    case 2:\n        rainState = \"good state\"\n        break;\n    case 3:\n        rainState = \"excellent state\"\n        break;\n    default:\n        rainState = \"unknown state\"\n}\n\nvar windSpeedState;\nswitch (overall_wind_speed_cluster) {\n    case 0:\n        windSpeedState = \"bad state\"\n        break;\n    case 1:\n        windSpeedState = \"moderate state\"\n        break;\n    case 2:\n        windSpeedState = \"good state\"\n        break;\n    case 3:\n        windSpeedState = \"excellent state\"\n        break;\n    default:\n        windSpeedState = \"unknown state\"\n}\n\nvar waveHeightState;\nswitch (overall_wave_height_cluster) {\n    case 0:\n        waveHeightState = \"bad state\"\n        break;\n    case 1:\n        waveHeightState = \"moderate state\"\n        break;\n    case 2:\n        waveHeightState = \"good state\"\n        break;\n    case 3:\n        waveHeightState = \"excellent state\"\n        break;\n    default:\n        waveHeightState = \"unknown state\"\n}\n\nvar states = [temperatureState, rainState, windSpeedState, waveHeightState];\n\nvar statePriority = {\n    \"bad state\": 3,\n    \"moderate state\": 2,\n    \"good state\": 1,\n    \"excellent state\": 0\n};\n\nvar priorityColor = {\n    3: \"red\",\n    2: \"orange\",\n    1: \"green\",\n    0: \"blue\"\n};\n\nvar highestPriority = -1;\nfor (var i = 0; i < states.length; i++) {\n    var currentState = states[i];\n    if (statePriority.hasOwnProperty(currentState)) {\n        var currentPriority = statePriority[currentState];\n        if (currentPriority > highestPriority) {\n            highestPriority = currentPriority;\n        }\n    }\n}\n\nvar iconColor = \"grey\";\niconColor = priorityColor[highestPriority]\n\nmsg.payload = {};\nmsg.payload.name = name;\nmsg.payload.lat = lat;\nmsg.payload.lon = lon;\nmsg.payload.timestamp = timestamp;\nmsg.payload.iconColor = iconColor;\nmsg.payload.layer = \"location\";\n\nmsg.payload.temperature = temperature;\nmsg.payload.temperatureState = temperatureState;\n\nmsg.payload.rain = rain;\nmsg.payload.rainState = rainState;\n\nmsg.payload.wind_speed = wind_speed;\nmsg.payload.windSpeedState = windSpeedState;\n\nmsg.payload.wave_height = wave_height;\nmsg.payload.waveHeightState = waveHeightState;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 5960,
        "wires": [
            [
                "e4907a70be910e42",
                "3c6e56ed8186e046",
                "a3b320601127981b"
            ]
        ]
    },
    {
        "id": "273b4f547094a3df",
        "type": "link in",
        "z": "b3fbb48bc7759dd9",
        "name": "link in 56",
        "links": [
            "15c2632f18fe394e"
        ],
        "x": 185,
        "y": 3240,
        "wires": [
            [
                "86ed5feb1ec54e47",
                "72f52b618aadf0d6"
            ]
        ]
    },
    {
        "id": "e5de4ca4f1141149",
        "type": "link in",
        "z": "b3fbb48bc7759dd9",
        "name": "link in 57",
        "links": [
            "180dafe7004ec5c4"
        ],
        "x": 185,
        "y": 4160,
        "wires": [
            [
                "c419063e84aa5ac6",
                "16308bd0ee02808f"
            ]
        ]
    },
    {
        "id": "e504732a9fa29e71",
        "type": "link in",
        "z": "b3fbb48bc7759dd9",
        "name": "link in 58",
        "links": [
            "c56752e387ed2002"
        ],
        "x": 185,
        "y": 5060,
        "wires": [
            [
                "4a393e9acf4c7a6a",
                "ca788432f5f8112a"
            ]
        ]
    },
    {
        "id": "75210c592a85e6f9",
        "type": "switch",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Piraeus",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Crete",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Thessaloniki",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Kerkyra",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "Lesvos",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 5,
        "x": 1510,
        "y": 500,
        "wires": [
            [
                "abcdf02e19f35935"
            ],
            [
                "15c2632f18fe394e"
            ],
            [
                "180dafe7004ec5c4"
            ],
            [
                "c56752e387ed2002"
            ],
            [
                "a733a65ccde7fa49"
            ]
        ]
    },
    {
        "id": "a41f9a03b9a1035c",
        "type": "ui_dropdown",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "label": "Location",
        "tooltip": "",
        "place": "Select",
        "group": "7d0afa32e32bf88b",
        "order": 2,
        "width": 8,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [
            {
                "label": "Piraeus",
                "value": "Piraeus",
                "type": "str"
            },
            {
                "label": "Crete",
                "value": "Crete",
                "type": "str"
            },
            {
                "label": "Thessaloniki",
                "value": "Thessaloniki",
                "type": "str"
            },
            {
                "label": "Kerkyra",
                "value": "Kerkyra",
                "type": "str"
            },
            {
                "label": "Lesvos",
                "value": "Lesvos",
                "type": "str"
            }
        ],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 1360,
        "y": 500,
        "wires": [
            [
                "75210c592a85e6f9"
            ]
        ]
    },
    {
        "id": "a733a65ccde7fa49",
        "type": "link out",
        "z": "b3fbb48bc7759dd9",
        "name": "link out 83",
        "mode": "link",
        "links": [
            "f9762e8c8e73935a",
            "6b918d56c48ee33a",
            "3c34cad3faa9029f"
        ],
        "x": 1665,
        "y": 580,
        "wires": []
    },
    {
        "id": "c56752e387ed2002",
        "type": "link out",
        "z": "b3fbb48bc7759dd9",
        "name": "link out 84",
        "mode": "link",
        "links": [
            "f9762e8c8e73935a",
            "6374d3a4f0343ae6",
            "e504732a9fa29e71"
        ],
        "x": 1665,
        "y": 540,
        "wires": []
    },
    {
        "id": "180dafe7004ec5c4",
        "type": "link out",
        "z": "b3fbb48bc7759dd9",
        "name": "link out 85",
        "mode": "link",
        "links": [
            "f9762e8c8e73935a",
            "651f42426faaf3e6",
            "e5de4ca4f1141149"
        ],
        "x": 1665,
        "y": 500,
        "wires": []
    },
    {
        "id": "15c2632f18fe394e",
        "type": "link out",
        "z": "b3fbb48bc7759dd9",
        "name": "link out 86",
        "mode": "link",
        "links": [
            "f9762e8c8e73935a",
            "cac9524cb72acca3",
            "273b4f547094a3df"
        ],
        "x": 1665,
        "y": 460,
        "wires": []
    },
    {
        "id": "abcdf02e19f35935",
        "type": "link out",
        "z": "b3fbb48bc7759dd9",
        "name": "link out 87",
        "mode": "link",
        "links": [
            "d59f2fe6be79d256",
            "eea4b315412a7419"
        ],
        "x": 1665,
        "y": 420,
        "wires": []
    },
    {
        "id": "3c34cad3faa9029f",
        "type": "link in",
        "z": "b3fbb48bc7759dd9",
        "name": "link in 59",
        "links": [
            "a733a65ccde7fa49"
        ],
        "x": 185,
        "y": 5980,
        "wires": [
            [
                "660e98fd438c947c",
                "65ba416572c71773"
            ]
        ]
    },
    {
        "id": "acceb051134cf2c7",
        "type": "http request",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://api.open-meteo.com/v1/forecast?latitude=37.944709&longitude=23.638304&current=temperature_2m,relative_humidity_2m,rain,showers,snowfall,cloud_cover,wind_speed_10m&timezone=auto",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 330,
        "y": 280,
        "wires": [
            [
                "166e0a89e897ded9"
            ]
        ]
    },
    {
        "id": "02f7ce9334218f95",
        "type": "http request",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://marine-api.open-meteo.com/v1/marine?latitude=37.944709&longitude=23.638304&current=wave_height,wave_direction,wave_period&timezone=auto",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 330,
        "y": 320,
        "wires": [
            [
                "d00fc06215943a02"
            ]
        ]
    },
    {
        "id": "e5fa7a3235ab8a40",
        "type": "link out",
        "z": "b3fbb48bc7759dd9",
        "name": "link out 93",
        "mode": "link",
        "links": [
            "0b7150c1b2f3e1c7"
        ],
        "x": 1815,
        "y": 1320,
        "wires": []
    },
    {
        "id": "d99f50103ee4b56a",
        "type": "link out",
        "z": "b3fbb48bc7759dd9",
        "name": "link out 94",
        "mode": "link",
        "links": [
            "dd9c1994b36d4672"
        ],
        "x": 1815,
        "y": 1360,
        "wires": []
    },
    {
        "id": "5c001d660af1b6f1",
        "type": "link out",
        "z": "b3fbb48bc7759dd9",
        "name": "link out 95",
        "mode": "link",
        "links": [
            "83d740f73c15afdc"
        ],
        "x": 1815,
        "y": 1400,
        "wires": []
    },
    {
        "id": "be9feda135cfa61f",
        "type": "link out",
        "z": "b3fbb48bc7759dd9",
        "name": "link out 96",
        "mode": "link",
        "links": [
            "3f79750affc1b837"
        ],
        "x": 1815,
        "y": 1440,
        "wires": []
    },
    {
        "id": "1fcc17c60e63e06c",
        "type": "link out",
        "z": "b3fbb48bc7759dd9",
        "name": "link out 97",
        "mode": "link",
        "links": [
            "83c247f0a2536ec5"
        ],
        "x": 1815,
        "y": 1280,
        "wires": []
    },
    {
        "id": "83c247f0a2536ec5",
        "type": "link in",
        "z": "b3fbb48bc7759dd9",
        "name": "link in 60",
        "links": [
            "1fcc17c60e63e06c"
        ],
        "x": 1935,
        "y": 1160,
        "wires": [
            [
                "c5090b9d1c4559f1",
                "0ecb381656df0d45"
            ]
        ]
    },
    {
        "id": "0b7150c1b2f3e1c7",
        "type": "link in",
        "z": "b3fbb48bc7759dd9",
        "name": "link in 61",
        "links": [
            "e5fa7a3235ab8a40"
        ],
        "x": 1935,
        "y": 1260,
        "wires": [
            [
                "bedd5979516be804",
                "7b52dfb82bf61d95"
            ]
        ]
    },
    {
        "id": "dd9c1994b36d4672",
        "type": "link in",
        "z": "b3fbb48bc7759dd9",
        "name": "link in 62",
        "links": [
            "d99f50103ee4b56a"
        ],
        "x": 1935,
        "y": 1360,
        "wires": [
            [
                "039a07979dabaf1c",
                "a64b91022f69fe00"
            ]
        ]
    },
    {
        "id": "83d740f73c15afdc",
        "type": "link in",
        "z": "b3fbb48bc7759dd9",
        "name": "link in 63",
        "links": [
            "5c001d660af1b6f1"
        ],
        "x": 1935,
        "y": 1460,
        "wires": [
            [
                "d3a1c90df38f6a1e",
                "e7ff96215aa55784"
            ]
        ]
    },
    {
        "id": "3f79750affc1b837",
        "type": "link in",
        "z": "b3fbb48bc7759dd9",
        "name": "link in 64",
        "links": [
            "be9feda135cfa61f"
        ],
        "x": 1935,
        "y": 1560,
        "wires": [
            [
                "e66b4746a5d9c3ac",
                "76e7375decbb44ed"
            ]
        ]
    },
    {
        "id": "1d3d9632c03c52db",
        "type": "ui_button",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "group": "8d9f152ea4ca25c6",
        "order": 11,
        "width": 8,
        "height": 1,
        "passthru": false,
        "label": "Clear charts",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "[]",
        "payloadType": "json",
        "topic": "",
        "topicType": "str",
        "x": 2950,
        "y": 1460,
        "wires": [
            [
                "7fae2b4fa3afd88f",
                "5f76757d5f8040c4",
                "9c21ed1a0662b0fa",
                "80d8f34e98af08ce"
            ]
        ]
    },
    {
        "id": "39f25434b9fa727a",
        "type": "ui_button",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "group": "7d0afa32e32bf88b",
        "order": 14,
        "width": 8,
        "height": 1,
        "passthru": false,
        "label": "Clear gauges",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "num",
        "topic": "",
        "topicType": "str",
        "x": 2770,
        "y": 620,
        "wires": [
            [
                "eb5ec20fa2f15cd9",
                "b965bdeeff5b4942",
                "3833f14c641be0d9",
                "be499b2c45dbf311",
                "8869049baef29c8b"
            ]
        ]
    },
    {
        "id": "4eba479c87111f37",
        "type": "function",
        "z": "b3fbb48bc7759dd9",
        "name": "clusters",
        "func": "var temperature = msg.payload.temperature;\nvar rain = msg.payload.rain;\nvar wind_speed = msg.payload.wind_speed;\nvar wave_height = msg.payload.wave_height;\nvar timestamp = msg.payload.timestamp;\n\nvar lat = msg.payload.latitude;\nvar lon = msg.payload.longitude;\n\nvar temperature_clusters = global.get('creteTemperatureClusters');\nvar rain_clusters = global.get('creteRainClusters');\nvar wind_speed_clusters = global.get('creteWindSpeedClusters');\nvar wave_height_clusters = global.get('creteWaveHeightClusters');\n\nvar name = \"Crete\"\n\nvar diff;\nvar min;\n\nmin = 10000000;\nvar overall_temperature_cluster = -1;\nfor (var k = 0; k < temperature_clusters.length;k++) {\n    diff = Math.abs(temperature_clusters[k].centroid[0] - temperature);\n    if (diff<min) {\n        overall_temperature_cluster = k;\n        min = diff;\n    }\n}\n\nmin = 10000000;\nvar overall_rain_cluster = -1;\nfor (var k = 0; k < rain_clusters.length; k++) {\n    diff = Math.abs(rain_clusters[k].centroid[0] - rain);\n    if (diff < min) {\n        overall_rain_cluster = k;\n        min = diff;\n    }\n}\n\nmin = 10000000;\nvar overall_wind_speed_cluster = -1;\nfor (var k = 0; k < wind_speed_clusters.length; k++) {\n    diff = Math.abs(wind_speed_clusters[k].centroid[0] - wind_speed);\n    if (diff < min) {\n        overall_wind_speed_cluster = k;\n        min = diff;\n    }\n}\n\nmin = 10000000;\nvar overall_wave_height_cluster = -1;\nfor (var k = 0; k < wave_height_clusters.length; k++) {\n    diff = Math.abs(wave_height_clusters[k].centroid[0] - wave_height);\n    if (diff < min) {\n        overall_wave_height_cluster = k;\n        min = diff;\n    }\n}\n\nvar temperatureState;\nswitch (overall_temperature_cluster) {\n    case 0:\n        temperatureState = \"bad state\"\n        break;\n    case 1:\n        temperatureState = \"moderate state\"\n        break;\n    case 2:\n        temperatureState = \"good state\"\n        break;\n    case 3:\n        temperatureState = \"excellent state\"\n        break;\n    default:\n        temperatureState = \"unknown state\"\n}\n\nvar rainState;\nswitch (overall_rain_cluster) {\n    case 0:\n        rainState = \"bad state\"\n        break;\n    case 1:\n        rainState = \"moderate state\"\n        break;\n    case 2:\n        rainState = \"good state\"\n        break;\n    case 3:\n        rainState = \"excellent state\"\n        break;\n    default:\n        rainState = \"unknown state\"\n}\n\nvar windSpeedState;\nswitch (overall_wind_speed_cluster) {\n    case 0:\n        windSpeedState = \"bad state\"\n        break;\n    case 1:\n        windSpeedState = \"moderate state\"\n        break;\n    case 2:\n        windSpeedState = \"good state\"\n        break;\n    case 3:\n        windSpeedState = \"excellent state\"\n        break;\n    default:\n        windSpeedState = \"unknown state\"\n}\n\nvar waveHeightState;\nswitch (overall_wave_height_cluster) {\n    case 0:\n        waveHeightState = \"bad state\"\n        break;\n    case 1:\n        waveHeightState = \"moderate state\"\n        break;\n    case 2:\n        waveHeightState = \"good state\"\n        break;\n    case 3:\n        waveHeightState = \"excellent state\"\n        break;\n    default:\n        waveHeightState = \"unknown state\"\n}\n\nvar states = [temperatureState, rainState, windSpeedState, waveHeightState];\n\nvar statePriority = {\n    \"bad state\": 3,\n    \"moderate state\": 2,\n    \"good state\": 1,\n    \"excellent state\": 0\n};\n\nvar priorityColor = {\n    3: \"red\",\n    2: \"orange\",\n    1: \"green\",\n    0: \"blue\"\n};\n\nvar highestPriority = -1;\nfor (var i = 0; i < states.length; i++) {\n    var currentState = states[i];\n    if (statePriority.hasOwnProperty(currentState)) {\n        var currentPriority = statePriority[currentState];\n        if (currentPriority > highestPriority) {\n            highestPriority = currentPriority;\n        }\n    }\n}\n\nvar iconColor = \"grey\";\niconColor = priorityColor[highestPriority]\n\nmsg.payload = {};\nmsg.payload.name = name;\nmsg.payload.lat = lat;\nmsg.payload.lon = lon;\nmsg.payload.timestamp = timestamp;\nmsg.payload.iconColor = iconColor;\n\nmsg.payload.temperature = temperature;\nmsg.payload.temperatureState = temperatureState;\n\nmsg.payload.rain = rain;\nmsg.payload.rainState = rainState;\n\nmsg.payload.wind_speed = wind_speed;\nmsg.payload.windSpeedState = windSpeedState;\n\nmsg.payload.wave_height = wave_height;\nmsg.payload.waveHeightState = waveHeightState;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 3340,
        "wires": [
            [
                "fe2cce4e0f786f34"
            ]
        ]
    },
    {
        "id": "a9ad38ef68e5cea0",
        "type": "function",
        "z": "b3fbb48bc7759dd9",
        "name": "make rows",
        "func": "var weather_data;\nvar waves_data;\n\nvar latitude;\nvar longitude;\n\nif (msg.payload[0].hourly.temperature_2m !== undefined) {\n    weather_data = msg.payload[0].hourly;\n    waves_data = msg.payload[1].hourly;\n    latitude = msg.payload[1].latitude;\n    longitude = msg.payload[1].longitude;\n} else {\n    weather_data = msg.payload[1].hourly;\n    waves_data = msg.payload[0].hourly;\n    latitude = msg.payload[0].latitude;\n    longitude = msg.payload[0].longitude;\n}\n\nvar systemDateTime = new Date();\n\nfor (var i = 0; i < weather_data.time.length; i++) {  \n    \n    var currentDateTime = new Date(weather_data.time[i]);\n    if (currentDateTime < systemDateTime) {\n        continue;\n    }\n    \n    msg.payload = {};\n    \n    msg.payload.latitude = latitude;\n    msg.payload.longitude = longitude;\n\n    msg.payload.temperature = weather_data.temperature_2m[i];\n    msg.payload.humidity = weather_data.relative_humidity_2m[i];\n    msg.payload.rain = weather_data.rain[i];\n    msg.payload.showers = weather_data.showers[i];\n    msg.payload.snowfall = weather_data.snowfall[i];\n    msg.payload.cloud_cover = weather_data.cloud_cover[i];\n    msg.payload.wind_speed = weather_data.wind_speed_10m[i];\n\n    msg.payload.wave_height = waves_data.wave_height[i];\n    msg.payload.wave_direction = waves_data.wave_direction[i];\n    msg.payload.wave_period = waves_data.wave_period[i];\n\n    msg.payload.timestamp = weather_data.time[i];\n\n    node.send(msg);\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 2440,
        "wires": [
            [
                "8b68e5192c6909fa"
            ]
        ]
    },
    {
        "id": "8b68e5192c6909fa",
        "type": "function",
        "z": "b3fbb48bc7759dd9",
        "name": "clusters",
        "func": "var temperature = msg.payload.temperature;\nvar rain = msg.payload.rain;\nvar wind_speed = msg.payload.wind_speed;\nvar wave_height = msg.payload.wave_height;\nvar timestamp = msg.payload.timestamp;\n\nvar lat = msg.payload.latitude;\nvar lon = msg.payload.longitude;\n\nvar temperature_clusters = global.get('piraeusTemperatureClusters');\nvar rain_clusters = global.get('piraeusRainClusters');\nvar wind_speed_clusters = global.get('piraeusWindSpeedClusters');\nvar wave_height_clusters = global.get('piraeusWaveHeightClusters');\n\nvar name = \"Piraeus\"\n\nvar diff;\nvar min;\n\nmin = 10000000;\nvar overall_temperature_cluster = -1;\nfor (var k = 0; k < temperature_clusters.length;k++) {\n    diff = Math.abs(temperature_clusters[k].centroid[0] - temperature);\n    if (diff<min) {\n        overall_temperature_cluster = k;\n        min = diff;\n    }\n}\n\nmin = 10000000;\nvar overall_rain_cluster = -1;\nfor (var k = 0; k < rain_clusters.length; k++) {\n    diff = Math.abs(rain_clusters[k].centroid[0] - rain);\n    if (diff < min) {\n        overall_rain_cluster = k;\n        min = diff;\n    }\n}\n\nmin = 10000000;\nvar overall_wind_speed_cluster = -1;\nfor (var k = 0; k < wind_speed_clusters.length; k++) {\n    diff = Math.abs(wind_speed_clusters[k].centroid[0] - wind_speed);\n    if (diff < min) {\n        overall_wind_speed_cluster = k;\n        min = diff;\n    }\n}\n\nmin = 10000000;\nvar overall_wave_height_cluster = -1;\nfor (var k = 0; k < wave_height_clusters.length; k++) {\n    diff = Math.abs(wave_height_clusters[k].centroid[0] - wave_height);\n    if (diff < min) {\n        overall_wave_height_cluster = k;\n        min = diff;\n    }\n}\n\nvar temperatureState;\nswitch (overall_temperature_cluster) {\n    case 0:\n        temperatureState = \"bad state\"\n        break;\n    case 1:\n        temperatureState = \"moderate state\"\n        break;\n    case 2:\n        temperatureState = \"good state\"\n        break;\n    case 3:\n        temperatureState = \"excellent state\"\n        break;\n    default:\n        temperatureState = \"unknown state\"\n}\n\nvar rainState;\nswitch (overall_rain_cluster) {\n    case 0:\n        rainState = \"bad state\"\n        break;\n    case 1:\n        rainState = \"moderate state\"\n        break;\n    case 2:\n        rainState = \"good state\"\n        break;\n    case 3:\n        rainState = \"excellent state\"\n        break;\n    default:\n        rainState = \"unknown state\"\n}\n\nvar windSpeedState;\nswitch (overall_wind_speed_cluster) {\n    case 0:\n        windSpeedState = \"bad state\"\n        break;\n    case 1:\n        windSpeedState = \"moderate state\"\n        break;\n    case 2:\n        windSpeedState = \"good state\"\n        break;\n    case 3:\n        windSpeedState = \"excellent state\"\n        break;\n    default:\n        windSpeedState = \"unknown state\"\n}\n\nvar waveHeightState;\nswitch (overall_wave_height_cluster) {\n    case 0:\n        waveHeightState = \"bad state\"\n        break;\n    case 1:\n        waveHeightState = \"moderate state\"\n        break;\n    case 2:\n        waveHeightState = \"good state\"\n        break;\n    case 3:\n        waveHeightState = \"excellent state\"\n        break;\n    default:\n        waveHeightState = \"unknown state\"\n}\n\nvar states = [temperatureState, rainState, windSpeedState, waveHeightState];\n\nvar statePriority = {\n    \"bad state\": 3,\n    \"moderate state\": 2,\n    \"good state\": 1,\n    \"excellent state\": 0\n};\n\nvar priorityColor = {\n    3: \"red\",\n    2: \"orange\",\n    1: \"green\",\n    0: \"blue\"\n};\n\nvar highestPriority = -1;\nfor (var i = 0; i < states.length; i++) {\n    var currentState = states[i];\n    if (statePriority.hasOwnProperty(currentState)) {\n        var currentPriority = statePriority[currentState];\n        if (currentPriority > highestPriority) {\n            highestPriority = currentPriority;\n        }\n    }\n}\n\nvar iconColor = \"grey\";\niconColor = priorityColor[highestPriority]\n\nmsg.payload = {};\nmsg.payload.name = name;\nmsg.payload.lat = lat;\nmsg.payload.lon = lon;\nmsg.payload.timestamp = timestamp;\nmsg.payload.iconColor = iconColor;\n\nmsg.payload.temperature = temperature;\nmsg.payload.temperatureState = temperatureState;\n\nmsg.payload.rain = rain;\nmsg.payload.rainState = rainState;\n\nmsg.payload.wind_speed = wind_speed;\nmsg.payload.windSpeedState = windSpeedState;\n\nmsg.payload.wave_height = wave_height;\nmsg.payload.waveHeightState = waveHeightState;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 2440,
        "wires": [
            [
                "9384d79db445db69"
            ]
        ]
    },
    {
        "id": "837fde2bc5ec7bd3",
        "type": "function",
        "z": "b3fbb48bc7759dd9",
        "name": "make rows",
        "func": "var weather_data;\nvar waves_data;\n\nvar latitude;\nvar longitude;\n\nif (msg.payload[0].hourly.temperature_2m !== undefined) {\n    weather_data = msg.payload[0].hourly;\n    waves_data = msg.payload[1].hourly;\n    latitude = msg.payload[1].latitude;\n    longitude = msg.payload[1].longitude;\n} else {\n    weather_data = msg.payload[1].hourly;\n    waves_data = msg.payload[0].hourly;\n    latitude = msg.payload[0].latitude;\n    longitude = msg.payload[0].longitude;\n}\n\nvar systemDateTime = new Date();\n\nfor (var i = 0; i < weather_data.time.length; i++) {  \n    \n    var currentDateTime = new Date(weather_data.time[i]);\n    if (currentDateTime < systemDateTime) {\n        continue;\n    }\n    \n    msg.payload = {};\n    \n    msg.payload.latitude = latitude;\n    msg.payload.longitude = longitude;\n\n    msg.payload.temperature = weather_data.temperature_2m[i];\n    msg.payload.humidity = weather_data.relative_humidity_2m[i];\n    msg.payload.rain = weather_data.rain[i];\n    msg.payload.showers = weather_data.showers[i];\n    msg.payload.snowfall = weather_data.snowfall[i];\n    msg.payload.cloud_cover = weather_data.cloud_cover[i];\n    msg.payload.wind_speed = weather_data.wind_speed_10m[i];\n\n    msg.payload.wave_height = waves_data.wave_height[i];\n    msg.payload.wave_direction = waves_data.wave_direction[i];\n    msg.payload.wave_period = waves_data.wave_period[i];\n\n    msg.payload.timestamp = weather_data.time[i];\n\n    node.send(msg);\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 4260,
        "wires": [
            [
                "7279e8972ae4a411"
            ]
        ]
    },
    {
        "id": "7279e8972ae4a411",
        "type": "function",
        "z": "b3fbb48bc7759dd9",
        "name": "clusters",
        "func": "var temperature = msg.payload.temperature;\nvar rain = msg.payload.rain;\nvar wind_speed = msg.payload.wind_speed;\nvar wave_height = msg.payload.wave_height;\nvar timestamp = msg.payload.timestamp;\n\nvar lat = msg.payload.latitude;\nvar lon = msg.payload.longitude;\n\nvar temperature_clusters = global.get('skgTemperatureClusters');\nvar rain_clusters = global.get('skgRainClusters');\nvar wind_speed_clusters = global.get('skgWindSpeedClusters');\nvar wave_height_clusters = global.get('skgWaveHeightClusters');\n\nvar name = \"Thessaloniki\"\n\nvar diff;\nvar min;\n\nmin = 10000000;\nvar overall_temperature_cluster = -1;\nfor (var k = 0; k < temperature_clusters.length;k++) {\n    diff = Math.abs(temperature_clusters[k].centroid[0] - temperature);\n    if (diff<min) {\n        overall_temperature_cluster = k;\n        min = diff;\n    }\n}\n\nmin = 10000000;\nvar overall_rain_cluster = -1;\nfor (var k = 0; k < rain_clusters.length; k++) {\n    diff = Math.abs(rain_clusters[k].centroid[0] - rain);\n    if (diff < min) {\n        overall_rain_cluster = k;\n        min = diff;\n    }\n}\n\nmin = 10000000;\nvar overall_wind_speed_cluster = -1;\nfor (var k = 0; k < wind_speed_clusters.length; k++) {\n    diff = Math.abs(wind_speed_clusters[k].centroid[0] - wind_speed);\n    if (diff < min) {\n        overall_wind_speed_cluster = k;\n        min = diff;\n    }\n}\n\nmin = 10000000;\nvar overall_wave_height_cluster = -1;\nfor (var k = 0; k < wave_height_clusters.length; k++) {\n    diff = Math.abs(wave_height_clusters[k].centroid[0] - wave_height);\n    if (diff < min) {\n        overall_wave_height_cluster = k;\n        min = diff;\n    }\n}\n\nvar temperatureState;\nswitch (overall_temperature_cluster) {\n    case 0:\n        temperatureState = \"bad state\"\n        break;\n    case 1:\n        temperatureState = \"moderate state\"\n        break;\n    case 2:\n        temperatureState = \"good state\"\n        break;\n    case 3:\n        temperatureState = \"excellent state\"\n        break;\n    default:\n        temperatureState = \"unknown state\"\n}\n\nvar rainState;\nswitch (overall_rain_cluster) {\n    case 0:\n        rainState = \"bad state\"\n        break;\n    case 1:\n        rainState = \"moderate state\"\n        break;\n    case 2:\n        rainState = \"good state\"\n        break;\n    case 3:\n        rainState = \"excellent state\"\n        break;\n    default:\n        rainState = \"unknown state\"\n}\n\nvar windSpeedState;\nswitch (overall_wind_speed_cluster) {\n    case 0:\n        windSpeedState = \"bad state\"\n        break;\n    case 1:\n        windSpeedState = \"moderate state\"\n        break;\n    case 2:\n        windSpeedState = \"good state\"\n        break;\n    case 3:\n        windSpeedState = \"excellent state\"\n        break;\n    default:\n        windSpeedState = \"unknown state\"\n}\n\nvar waveHeightState;\nswitch (overall_wave_height_cluster) {\n    case 0:\n        waveHeightState = \"bad state\"\n        break;\n    case 1:\n        waveHeightState = \"moderate state\"\n        break;\n    case 2:\n        waveHeightState = \"good state\"\n        break;\n    case 3:\n        waveHeightState = \"excellent state\"\n        break;\n    default:\n        waveHeightState = \"unknown state\"\n}\n\nvar states = [temperatureState, rainState, windSpeedState, waveHeightState];\n\nvar statePriority = {\n    \"bad state\": 3,\n    \"moderate state\": 2,\n    \"good state\": 1,\n    \"excellent state\": 0\n};\n\nvar priorityColor = {\n    3: \"red\",\n    2: \"orange\",\n    1: \"green\",\n    0: \"blue\"\n};\n\nvar highestPriority = -1;\nfor (var i = 0; i < states.length; i++) {\n    var currentState = states[i];\n    if (statePriority.hasOwnProperty(currentState)) {\n        var currentPriority = statePriority[currentState];\n        if (currentPriority > highestPriority) {\n            highestPriority = currentPriority;\n        }\n    }\n}\n\nvar iconColor = \"grey\";\niconColor = priorityColor[highestPriority]\n\nmsg.payload = {};\nmsg.payload.name = name;\nmsg.payload.lat = lat;\nmsg.payload.lon = lon;\nmsg.payload.timestamp = timestamp;\nmsg.payload.iconColor = iconColor;\n\nmsg.payload.temperature = temperature;\nmsg.payload.temperatureState = temperatureState;\n\nmsg.payload.rain = rain;\nmsg.payload.rainState = rainState;\n\nmsg.payload.wind_speed = wind_speed;\nmsg.payload.windSpeedState = windSpeedState;\n\nmsg.payload.wave_height = wave_height;\nmsg.payload.waveHeightState = waveHeightState;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 4260,
        "wires": [
            [
                "1b78b350e8b5bad2"
            ]
        ]
    },
    {
        "id": "6698a205abcbbb26",
        "type": "function",
        "z": "b3fbb48bc7759dd9",
        "name": "make rows",
        "func": "var weather_data;\nvar waves_data;\n\nvar latitude;\nvar longitude;\n\nif (msg.payload[0].hourly.temperature_2m !== undefined) {\n    weather_data = msg.payload[0].hourly;\n    waves_data = msg.payload[1].hourly;\n    latitude = msg.payload[1].latitude;\n    longitude = msg.payload[1].longitude;\n} else {\n    weather_data = msg.payload[1].hourly;\n    waves_data = msg.payload[0].hourly;\n    latitude = msg.payload[0].latitude;\n    longitude = msg.payload[0].longitude;\n}\n\nvar systemDateTime = new Date();\n\nfor (var i = 0; i < weather_data.time.length; i++) {  \n    \n    var currentDateTime = new Date(weather_data.time[i]);\n    if (currentDateTime < systemDateTime) {\n        continue;\n    }\n    \n    msg.payload = {};\n    \n    msg.payload.latitude = latitude;\n    msg.payload.longitude = longitude;\n\n    msg.payload.temperature = weather_data.temperature_2m[i];\n    msg.payload.humidity = weather_data.relative_humidity_2m[i];\n    msg.payload.rain = weather_data.rain[i];\n    msg.payload.showers = weather_data.showers[i];\n    msg.payload.snowfall = weather_data.snowfall[i];\n    msg.payload.cloud_cover = weather_data.cloud_cover[i];\n    msg.payload.wind_speed = weather_data.wind_speed_10m[i];\n\n    msg.payload.wave_height = waves_data.wave_height[i];\n    msg.payload.wave_direction = waves_data.wave_direction[i];\n    msg.payload.wave_period = waves_data.wave_period[i];\n\n    msg.payload.timestamp = weather_data.time[i];\n\n    node.send(msg);\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 5160,
        "wires": [
            [
                "2646189b65522ebb"
            ]
        ]
    },
    {
        "id": "2646189b65522ebb",
        "type": "function",
        "z": "b3fbb48bc7759dd9",
        "name": "clusters",
        "func": "var temperature = msg.payload.temperature;\nvar rain = msg.payload.rain;\nvar wind_speed = msg.payload.wind_speed;\nvar wave_height = msg.payload.wave_height;\nvar timestamp = msg.payload.timestamp;\n\nvar lat = msg.payload.latitude;\nvar lon = msg.payload.longitude;\n\nvar temperature_clusters = global.get('kerkyraTemperatureClusters');\nvar rain_clusters = global.get('kerkyraRainClusters');\nvar wind_speed_clusters = global.get('kerkyraWindSpeedClusters');\nvar wave_height_clusters = global.get('kerkyraWaveHeightClusters');\n\nvar name = \"Kerkyra\"\n\nvar diff;\nvar min;\n\nmin = 10000000;\nvar overall_temperature_cluster = -1;\nfor (var k = 0; k < temperature_clusters.length;k++) {\n    diff = Math.abs(temperature_clusters[k].centroid[0] - temperature);\n    if (diff<min) {\n        overall_temperature_cluster = k;\n        min = diff;\n    }\n}\n\nmin = 10000000;\nvar overall_rain_cluster = -1;\nfor (var k = 0; k < rain_clusters.length; k++) {\n    diff = Math.abs(rain_clusters[k].centroid[0] - rain);\n    if (diff < min) {\n        overall_rain_cluster = k;\n        min = diff;\n    }\n}\n\nmin = 10000000;\nvar overall_wind_speed_cluster = -1;\nfor (var k = 0; k < wind_speed_clusters.length; k++) {\n    diff = Math.abs(wind_speed_clusters[k].centroid[0] - wind_speed);\n    if (diff < min) {\n        overall_wind_speed_cluster = k;\n        min = diff;\n    }\n}\n\nmin = 10000000;\nvar overall_wave_height_cluster = -1;\nfor (var k = 0; k < wave_height_clusters.length; k++) {\n    diff = Math.abs(wave_height_clusters[k].centroid[0] - wave_height);\n    if (diff < min) {\n        overall_wave_height_cluster = k;\n        min = diff;\n    }\n}\n\nvar temperatureState;\nswitch (overall_temperature_cluster) {\n    case 0:\n        temperatureState = \"bad state\"\n        break;\n    case 1:\n        temperatureState = \"moderate state\"\n        break;\n    case 2:\n        temperatureState = \"good state\"\n        break;\n    case 3:\n        temperatureState = \"excellent state\"\n        break;\n    default:\n        temperatureState = \"unknown state\"\n}\n\nvar rainState;\nswitch (overall_rain_cluster) {\n    case 0:\n        rainState = \"bad state\"\n        break;\n    case 1:\n        rainState = \"moderate state\"\n        break;\n    case 2:\n        rainState = \"good state\"\n        break;\n    case 3:\n        rainState = \"excellent state\"\n        break;\n    default:\n        rainState = \"unknown state\"\n}\n\nvar windSpeedState;\nswitch (overall_wind_speed_cluster) {\n    case 0:\n        windSpeedState = \"bad state\"\n        break;\n    case 1:\n        windSpeedState = \"moderate state\"\n        break;\n    case 2:\n        windSpeedState = \"good state\"\n        break;\n    case 3:\n        windSpeedState = \"excellent state\"\n        break;\n    default:\n        windSpeedState = \"unknown state\"\n}\n\nvar waveHeightState;\nswitch (overall_wave_height_cluster) {\n    case 0:\n        waveHeightState = \"bad state\"\n        break;\n    case 1:\n        waveHeightState = \"moderate state\"\n        break;\n    case 2:\n        waveHeightState = \"good state\"\n        break;\n    case 3:\n        waveHeightState = \"excellent state\"\n        break;\n    default:\n        waveHeightState = \"unknown state\"\n}\n\nvar states = [temperatureState, rainState, windSpeedState, waveHeightState];\n\nvar statePriority = {\n    \"bad state\": 3,\n    \"moderate state\": 2,\n    \"good state\": 1,\n    \"excellent state\": 0\n};\n\nvar priorityColor = {\n    3: \"red\",\n    2: \"orange\",\n    1: \"green\",\n    0: \"blue\"\n};\n\nvar highestPriority = -1;\nfor (var i = 0; i < states.length; i++) {\n    var currentState = states[i];\n    if (statePriority.hasOwnProperty(currentState)) {\n        var currentPriority = statePriority[currentState];\n        if (currentPriority > highestPriority) {\n            highestPriority = currentPriority;\n        }\n    }\n}\n\nvar iconColor = \"grey\";\niconColor = priorityColor[highestPriority]\n\nmsg.payload = {};\nmsg.payload.name = name;\nmsg.payload.lat = lat;\nmsg.payload.lon = lon;\nmsg.payload.timestamp = timestamp;\nmsg.payload.iconColor = iconColor;\n\nmsg.payload.temperature = temperature;\nmsg.payload.temperatureState = temperatureState;\n\nmsg.payload.rain = rain;\nmsg.payload.rainState = rainState;\n\nmsg.payload.wind_speed = wind_speed;\nmsg.payload.windSpeedState = windSpeedState;\n\nmsg.payload.wave_height = wave_height;\nmsg.payload.waveHeightState = waveHeightState;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 5160,
        "wires": [
            [
                "3633e6a3c0256ac8"
            ]
        ]
    },
    {
        "id": "8274fb280583d717",
        "type": "function",
        "z": "b3fbb48bc7759dd9",
        "name": "make rows",
        "func": "var weather_data;\nvar waves_data;\n\nvar latitude;\nvar longitude;\n\nif (msg.payload[0].hourly.temperature_2m !== undefined) {\n    weather_data = msg.payload[0].hourly;\n    waves_data = msg.payload[1].hourly;\n    latitude = msg.payload[1].latitude;\n    longitude = msg.payload[1].longitude;\n} else {\n    weather_data = msg.payload[1].hourly;\n    waves_data = msg.payload[0].hourly;\n    latitude = msg.payload[0].latitude;\n    longitude = msg.payload[0].longitude;\n}\n\nvar systemDateTime = new Date();\n\nfor (var i = 0; i < weather_data.time.length; i++) {  \n    \n    var currentDateTime = new Date(weather_data.time[i]);\n    if (currentDateTime < systemDateTime) {\n        continue;\n    }\n    \n    msg.payload = {};\n    \n    msg.payload.latitude = latitude;\n    msg.payload.longitude = longitude;\n\n    msg.payload.temperature = weather_data.temperature_2m[i];\n    msg.payload.humidity = weather_data.relative_humidity_2m[i];\n    msg.payload.rain = weather_data.rain[i];\n    msg.payload.showers = weather_data.showers[i];\n    msg.payload.snowfall = weather_data.snowfall[i];\n    msg.payload.cloud_cover = weather_data.cloud_cover[i];\n    msg.payload.wind_speed = weather_data.wind_speed_10m[i];\n\n    msg.payload.wave_height = waves_data.wave_height[i];\n    msg.payload.wave_direction = waves_data.wave_direction[i];\n    msg.payload.wave_period = waves_data.wave_period[i];\n\n    msg.payload.timestamp = weather_data.time[i];\n\n    node.send(msg);\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 710,
        "y": 6080,
        "wires": [
            [
                "1e332a5045242c25"
            ]
        ]
    },
    {
        "id": "1e332a5045242c25",
        "type": "function",
        "z": "b3fbb48bc7759dd9",
        "name": "clusters",
        "func": "var temperature = msg.payload.temperature;\nvar rain = msg.payload.rain;\nvar wind_speed = msg.payload.wind_speed;\nvar wave_height = msg.payload.wave_height;\nvar timestamp = msg.payload.timestamp;\n\nvar lat = msg.payload.latitude;\nvar lon = msg.payload.longitude;\n\nvar temperature_clusters = global.get('lesvosTemperatureClusters');\nvar rain_clusters = global.get('lesvosRainClusters');\nvar wind_speed_clusters = global.get('lesvosWindSpeedClusters');\nvar wave_height_clusters = global.get('lesvosWaveHeightClusters');\n\nvar name = \"Lesvos\"\n\nvar diff;\nvar min;\n\nmin = 10000000;\nvar overall_temperature_cluster = -1;\nfor (var k = 0; k < temperature_clusters.length;k++) {\n    diff = Math.abs(temperature_clusters[k].centroid[0] - temperature);\n    if (diff<min) {\n        overall_temperature_cluster = k;\n        min = diff;\n    }\n}\n\nmin = 10000000;\nvar overall_rain_cluster = -1;\nfor (var k = 0; k < rain_clusters.length; k++) {\n    diff = Math.abs(rain_clusters[k].centroid[0] - rain);\n    if (diff < min) {\n        overall_rain_cluster = k;\n        min = diff;\n    }\n}\n\nmin = 10000000;\nvar overall_wind_speed_cluster = -1;\nfor (var k = 0; k < wind_speed_clusters.length; k++) {\n    diff = Math.abs(wind_speed_clusters[k].centroid[0] - wind_speed);\n    if (diff < min) {\n        overall_wind_speed_cluster = k;\n        min = diff;\n    }\n}\n\nmin = 10000000;\nvar overall_wave_height_cluster = -1;\nfor (var k = 0; k < wave_height_clusters.length; k++) {\n    diff = Math.abs(wave_height_clusters[k].centroid[0] - wave_height);\n    if (diff < min) {\n        overall_wave_height_cluster = k;\n        min = diff;\n    }\n}\n\nvar temperatureState;\nswitch (overall_temperature_cluster) {\n    case 0:\n        temperatureState = \"bad state\"\n        break;\n    case 1:\n        temperatureState = \"moderate state\"\n        break;\n    case 2:\n        temperatureState = \"good state\"\n        break;\n    case 3:\n        temperatureState = \"excellent state\"\n        break;\n    default:\n        temperatureState = \"unknown state\"\n}\n\nvar rainState;\nswitch (overall_rain_cluster) {\n    case 0:\n        rainState = \"bad state\"\n        break;\n    case 1:\n        rainState = \"moderate state\"\n        break;\n    case 2:\n        rainState = \"good state\"\n        break;\n    case 3:\n        rainState = \"excellent state\"\n        break;\n    default:\n        rainState = \"unknown state\"\n}\n\nvar windSpeedState;\nswitch (overall_wind_speed_cluster) {\n    case 0:\n        windSpeedState = \"bad state\"\n        break;\n    case 1:\n        windSpeedState = \"moderate state\"\n        break;\n    case 2:\n        windSpeedState = \"good state\"\n        break;\n    case 3:\n        windSpeedState = \"excellent state\"\n        break;\n    default:\n        windSpeedState = \"unknown state\"\n}\n\nvar waveHeightState;\nswitch (overall_wave_height_cluster) {\n    case 0:\n        waveHeightState = \"bad state\"\n        break;\n    case 1:\n        waveHeightState = \"moderate state\"\n        break;\n    case 2:\n        waveHeightState = \"good state\"\n        break;\n    case 3:\n        waveHeightState = \"excellent state\"\n        break;\n    default:\n        waveHeightState = \"unknown state\"\n}\n\nvar states = [temperatureState, rainState, windSpeedState, waveHeightState];\n\nvar statePriority = {\n    \"bad state\": 3,\n    \"moderate state\": 2,\n    \"good state\": 1,\n    \"excellent state\": 0\n};\n\nvar priorityColor = {\n    3: \"red\",\n    2: \"orange\",\n    1: \"green\",\n    0: \"blue\"\n};\n\nvar highestPriority = -1;\nfor (var i = 0; i < states.length; i++) {\n    var currentState = states[i];\n    if (statePriority.hasOwnProperty(currentState)) {\n        var currentPriority = statePriority[currentState];\n        if (currentPriority > highestPriority) {\n            highestPriority = currentPriority;\n        }\n    }\n}\n\nvar iconColor = \"grey\";\niconColor = priorityColor[highestPriority]\n\nmsg.payload = {};\nmsg.payload.name = name;\nmsg.payload.lat = lat;\nmsg.payload.lon = lon;\nmsg.payload.timestamp = timestamp;\nmsg.payload.iconColor = iconColor;\n\nmsg.payload.temperature = temperature;\nmsg.payload.temperatureState = temperatureState;\n\nmsg.payload.rain = rain;\nmsg.payload.rainState = rainState;\n\nmsg.payload.wind_speed = wind_speed;\nmsg.payload.windSpeedState = windSpeedState;\n\nmsg.payload.wave_height = wave_height;\nmsg.payload.waveHeightState = waveHeightState;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 6080,
        "wires": [
            [
                "e4907a70be910e42"
            ]
        ]
    },
    {
        "id": "1789322a1c8c5151",
        "type": "link out",
        "z": "b3fbb48bc7759dd9",
        "name": "link out 98",
        "mode": "link",
        "links": [
            "425212a24a055c48"
        ],
        "x": 975,
        "y": 2320,
        "wires": []
    },
    {
        "id": "2f60f26bbf2db9f5",
        "type": "link out",
        "z": "b3fbb48bc7759dd9",
        "name": "link out 100",
        "mode": "link",
        "links": [
            "425212a24a055c48"
        ],
        "x": 975,
        "y": 3220,
        "wires": []
    },
    {
        "id": "f2249f2a7261d185",
        "type": "link out",
        "z": "b3fbb48bc7759dd9",
        "name": "link out 101",
        "mode": "link",
        "links": [
            "425212a24a055c48"
        ],
        "x": 975,
        "y": 4140,
        "wires": []
    },
    {
        "id": "615f3b14c3bb66b5",
        "type": "link out",
        "z": "b3fbb48bc7759dd9",
        "name": "link out 102",
        "mode": "link",
        "links": [
            "425212a24a055c48"
        ],
        "x": 975,
        "y": 5040,
        "wires": []
    },
    {
        "id": "3c6e56ed8186e046",
        "type": "link out",
        "z": "b3fbb48bc7759dd9",
        "name": "link out 103",
        "mode": "link",
        "links": [
            "425212a24a055c48"
        ],
        "x": 975,
        "y": 5960,
        "wires": []
    },
    {
        "id": "3817cdd78c576450",
        "type": "ui_worldmap",
        "z": "b3fbb48bc7759dd9",
        "group": "7d0afa32e32bf88b",
        "order": 17,
        "width": 0,
        "height": 0,
        "name": "",
        "lat": "37.944709",
        "lon": "23.638304",
        "zoom": "6",
        "layer": "OSMG",
        "cluster": "",
        "maxage": "",
        "usermenu": "hide",
        "layers": "hide",
        "panit": "false",
        "panlock": "false",
        "zoomlock": "false",
        "hiderightclick": "true",
        "coords": "none",
        "showgrid": "false",
        "showruler": "false",
        "allowFileDrop": "false",
        "path": "/worldmap",
        "overlist": "DR,CO,RA,DN,HM",
        "maplist": "OSMG,OSMC,EsriC,EsriS,EsriT,EsriDG,UKOS",
        "mapname": "",
        "mapurl": "",
        "mapopt": "",
        "mapwms": false,
        "x": 3080,
        "y": 860,
        "wires": []
    },
    {
        "id": "425212a24a055c48",
        "type": "link in",
        "z": "b3fbb48bc7759dd9",
        "name": "link in 65",
        "links": [
            "1789322a1c8c5151",
            "c3e603025a363a6c",
            "2f60f26bbf2db9f5",
            "f2249f2a7261d185",
            "615f3b14c3bb66b5",
            "3c6e56ed8186e046"
        ],
        "x": 2985,
        "y": 840,
        "wires": [
            [
                "3817cdd78c576450"
            ]
        ]
    },
    {
        "id": "67716152f67aecd8",
        "type": "inject",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "55 23 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 1260,
        "wires": [
            [
                "a3338c3ea8a73549",
                "94bee9152a255e0d"
            ]
        ]
    },
    {
        "id": "06651c70ac0f1614",
        "type": "inject",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "55 23 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 1360,
        "wires": [
            [
                "57383dcaff936fcb",
                "dbd478540dae3649"
            ]
        ]
    },
    {
        "id": "eb6f577ef5107201",
        "type": "inject",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "55 23 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 1460,
        "wires": [
            [
                "cd6e5fb1f0cd7a77",
                "4b8aea4626b79da9"
            ]
        ]
    },
    {
        "id": "81e84cf6f9117abc",
        "type": "inject",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "55 23 * * *",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 1560,
        "wires": [
            [
                "0a48a3ca4c091a6a",
                "a10676918fb90a2a"
            ]
        ]
    },
    {
        "id": "d6bb01a04bbd5930",
        "type": "function",
        "z": "b3fbb48bc7759dd9",
        "name": "Clear Map",
        "func": "msg.payload = {\"command\":{\"clear\":\"location\"}}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2930,
        "y": 880,
        "wires": [
            [
                "3817cdd78c576450"
            ]
        ]
    },
    {
        "id": "9e07d5f1956603b6",
        "type": "ui_button",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "group": "7d0afa32e32bf88b",
        "order": 19,
        "width": 8,
        "height": 1,
        "passthru": false,
        "label": "Clear Map",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 2770,
        "y": 880,
        "wires": [
            [
                "d6bb01a04bbd5930"
            ]
        ]
    },
    {
        "id": "13b410a564d95355",
        "type": "link out",
        "z": "b3fbb48bc7759dd9",
        "name": "link out 104",
        "mode": "link",
        "links": [
            "50291e3d9f27846f"
        ],
        "x": 1135,
        "y": 500,
        "wires": []
    },
    {
        "id": "50291e3d9f27846f",
        "type": "link in",
        "z": "b3fbb48bc7759dd9",
        "name": "link in 66",
        "links": [
            "13b410a564d95355"
        ],
        "x": 485,
        "y": 220,
        "wires": [
            [
                "7f2eca1443c6a2d4"
            ]
        ]
    },
    {
        "id": "62f6e9c66e401faf",
        "type": "json",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 2190,
        "y": 500,
        "wires": [
            [
                "18c13a008f529f8b"
            ]
        ]
    },
    {
        "id": "18c13a008f529f8b",
        "type": "join",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 2330,
        "y": 500,
        "wires": [
            [
                "9035102af00b968c"
            ]
        ]
    },
    {
        "id": "358e4040c9a6c1d1",
        "type": "link in",
        "z": "b3fbb48bc7759dd9",
        "name": "link in 67",
        "links": [
            "131680ea12a9a422",
            "a4189ef62e1d758f",
            "900cb2dde7af6844",
            "b2b531587cc78f3c",
            "d87dfe2cda975655",
            "994cfa2dcba34465",
            "5204e62d10554b64",
            "09323af70f20c54e",
            "96ec2b41a1a73227",
            "775013e235c9fc70",
            "ff9d3fabc538ead5",
            "aedd1a42714f73c0",
            "4770713a1dd7a4fb",
            "0c04f31606d907d2",
            "f3e4214d473e8d2d",
            "8e0bbd5de2c6b64e",
            "f2c67974955cb099",
            "68659ce8c0263d09",
            "ce946bb289524993",
            "d856b38cd482fe04",
            "8dad7585d43f131e"
        ],
        "x": 2105,
        "y": 500,
        "wires": [
            [
                "62f6e9c66e401faf"
            ]
        ]
    },
    {
        "id": "131680ea12a9a422",
        "type": "link out",
        "z": "b3fbb48bc7759dd9",
        "name": "link out 105",
        "mode": "link",
        "links": [
            "358e4040c9a6c1d1"
        ],
        "x": 1995,
        "y": 280,
        "wires": []
    },
    {
        "id": "eace38bd9a62a555",
        "type": "http request",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://api.open-meteo.com/v1/forecast?latitude=35.489126&longitude=24.0755468&current=temperature_2m,relative_humidity_2m,rain,showers,snowfall,cloud_cover,wind_speed_10m&timezone=auto",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1890,
        "y": 380,
        "wires": [
            [
                "900cb2dde7af6844"
            ]
        ]
    },
    {
        "id": "744b48db903c3e26",
        "type": "http request",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://marine-api.open-meteo.com/v1/marine?latitude=35.489126&longitude=24.075546&current=wave_height,wave_direction,wave_period&timezone=auto",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1890,
        "y": 420,
        "wires": [
            [
                "b2b531587cc78f3c"
            ]
        ]
    },
    {
        "id": "a4189ef62e1d758f",
        "type": "link out",
        "z": "b3fbb48bc7759dd9",
        "name": "link out 106",
        "mode": "link",
        "links": [
            "358e4040c9a6c1d1"
        ],
        "x": 1995,
        "y": 320,
        "wires": []
    },
    {
        "id": "900cb2dde7af6844",
        "type": "link out",
        "z": "b3fbb48bc7759dd9",
        "name": "link out 107",
        "mode": "link",
        "links": [
            "358e4040c9a6c1d1"
        ],
        "x": 1995,
        "y": 380,
        "wires": []
    },
    {
        "id": "b2b531587cc78f3c",
        "type": "link out",
        "z": "b3fbb48bc7759dd9",
        "name": "link out 108",
        "mode": "link",
        "links": [
            "358e4040c9a6c1d1"
        ],
        "x": 1995,
        "y": 420,
        "wires": []
    },
    {
        "id": "29860baf27878bcb",
        "type": "http request",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://api.open-meteo.com/v1/forecast?latitude=40.635485&longitude=22.932838&current=temperature_2m,relative_humidity_2m,rain,showers,snowfall,cloud_cover,wind_speed_10m&timezone=auto",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1890,
        "y": 480,
        "wires": [
            [
                "d87dfe2cda975655"
            ]
        ]
    },
    {
        "id": "318ff756f3b1fe4a",
        "type": "http request",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://marine-api.open-meteo.com/v1/marine?latitude=40.635485&longitude=22.932838&current=wave_height,wave_direction,wave_period&timezone=auto",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1890,
        "y": 520,
        "wires": [
            [
                "994cfa2dcba34465"
            ]
        ]
    },
    {
        "id": "d87dfe2cda975655",
        "type": "link out",
        "z": "b3fbb48bc7759dd9",
        "name": "link out 109",
        "mode": "link",
        "links": [
            "358e4040c9a6c1d1"
        ],
        "x": 1995,
        "y": 480,
        "wires": []
    },
    {
        "id": "994cfa2dcba34465",
        "type": "link out",
        "z": "b3fbb48bc7759dd9",
        "name": "link out 110",
        "mode": "link",
        "links": [
            "358e4040c9a6c1d1"
        ],
        "x": 1995,
        "y": 520,
        "wires": []
    },
    {
        "id": "eac69d1ad704e6e1",
        "type": "http request",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://api.open-meteo.com/v1/forecast?latitude=39.63028&longitude=19.90177&current=temperature_2m,relative_humidity_2m,rain,showers,snowfall,cloud_cover,wind_speed_10m&timezone=auto",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1890,
        "y": 580,
        "wires": [
            [
                "5204e62d10554b64"
            ]
        ]
    },
    {
        "id": "f406443822496953",
        "type": "http request",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://marine-api.open-meteo.com/v1/marine?latitude=39.63028&longitude=19.90177&current=wave_height,wave_direction,wave_period&timezone=auto",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1890,
        "y": 620,
        "wires": [
            [
                "09323af70f20c54e"
            ]
        ]
    },
    {
        "id": "5204e62d10554b64",
        "type": "link out",
        "z": "b3fbb48bc7759dd9",
        "name": "link out 111",
        "mode": "link",
        "links": [
            "358e4040c9a6c1d1"
        ],
        "x": 1995,
        "y": 580,
        "wires": []
    },
    {
        "id": "09323af70f20c54e",
        "type": "link out",
        "z": "b3fbb48bc7759dd9",
        "name": "link out 112",
        "mode": "link",
        "links": [
            "358e4040c9a6c1d1"
        ],
        "x": 1995,
        "y": 620,
        "wires": []
    },
    {
        "id": "610a75ba7aad369c",
        "type": "http request",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://api.open-meteo.com/v1/forecast?latitude=39.10412&longitude=26.56064&current=temperature_2m,relative_humidity_2m,rain,showers,snowfall,cloud_cover,wind_speed_10m&timezone=auto",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1890,
        "y": 680,
        "wires": [
            [
                "96ec2b41a1a73227"
            ]
        ]
    },
    {
        "id": "0b1f6ee8bb09be19",
        "type": "http request",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://marine-api.open-meteo.com/v1/marine?latitude=39.10412&longitude=26.56064&current=wave_height,wave_direction,wave_period&timezone=auto",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1890,
        "y": 720,
        "wires": [
            [
                "775013e235c9fc70"
            ]
        ]
    },
    {
        "id": "96ec2b41a1a73227",
        "type": "link out",
        "z": "b3fbb48bc7759dd9",
        "name": "link out 113",
        "mode": "link",
        "links": [
            "358e4040c9a6c1d1"
        ],
        "x": 1995,
        "y": 680,
        "wires": []
    },
    {
        "id": "775013e235c9fc70",
        "type": "link out",
        "z": "b3fbb48bc7759dd9",
        "name": "link out 114",
        "mode": "link",
        "links": [
            "358e4040c9a6c1d1"
        ],
        "x": 1995,
        "y": 720,
        "wires": []
    },
    {
        "id": "45323fac1bcf2d06",
        "type": "http request",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://api.open-meteo.com/v1/forecast?latitude=37.944709&longitude=23.638304&current=temperature_2m,relative_humidity_2m,rain,showers,snowfall,cloud_cover,wind_speed_10m&timezone=auto",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1890,
        "y": 280,
        "wires": [
            [
                "131680ea12a9a422"
            ]
        ]
    },
    {
        "id": "4e5a1b91d383b8b2",
        "type": "http request",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://marine-api.open-meteo.com/v1/marine?latitude=37.944709&longitude=23.638304&current=wave_height,wave_direction,wave_period&timezone=auto",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1890,
        "y": 320,
        "wires": [
            [
                "a4189ef62e1d758f"
            ]
        ]
    },
    {
        "id": "9035102af00b968c",
        "type": "function",
        "z": "b3fbb48bc7759dd9",
        "name": "filter data",
        "func": "var weather_data;\nvar waves_data;\n\nvar latitude;\nvar longitude;\n\nif(msg.payload[0].current.temperature_2m !== undefined){\n    weather_data = msg.payload[0].current;\n    waves_data = msg.payload[1].current;\n    latitude = msg.payload[1].latitude;\n    longitude = msg.payload[1].longitude;\n}else{\n    weather_data = msg.payload[1].current;\n    waves_data = msg.payload[0].current;\n    latitude = msg.payload[0].latitude;\n    longitude = msg.payload[0].longitude;\n}\n\nvar timestamp = weather_data.time;\n\nmsg.payload = {};\n\nmsg.payload.latitude = latitude;\nmsg.payload.longitude = longitude;\n\nmsg.payload.temperature = weather_data.temperature_2m;\nmsg.payload.rain = weather_data.rain;\nmsg.payload.wind_speed = weather_data.wind_speed_10m;\n\nmsg.payload.wave_height = waves_data.wave_height;\n\nmsg.payload.timestamp = weather_data.time\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2480,
        "y": 500,
        "wires": [
            [
                "eef4a5a09d040ff3"
            ]
        ]
    },
    {
        "id": "9cd1daf56ae3fb33",
        "type": "comment",
        "z": "b3fbb48bc7759dd9",
        "name": "UI Gauges tab",
        "info": "",
        "x": 1370,
        "y": 380,
        "wires": []
    },
    {
        "id": "49c0836cf426aedd",
        "type": "comment",
        "z": "b3fbb48bc7759dd9",
        "name": "Current data by location selected",
        "info": "",
        "x": 1430,
        "y": 420,
        "wires": []
    },
    {
        "id": "c45ea3ca20997b22",
        "type": "comment",
        "z": "b3fbb48bc7759dd9",
        "name": "UI Charts tab",
        "info": "",
        "x": 1530,
        "y": 1240,
        "wires": []
    },
    {
        "id": "ae2cebd2f69c1e04",
        "type": "comment",
        "z": "b3fbb48bc7759dd9",
        "name": "Hourly data by location selected",
        "info": "",
        "x": 1590,
        "y": 1280,
        "wires": []
    },
    {
        "id": "ee462ee1f2a4aba8",
        "type": "json",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 2350,
        "y": 1360,
        "wires": [
            [
                "2adcd0416373135d"
            ]
        ]
    },
    {
        "id": "0ecb381656df0d45",
        "type": "http request",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://marine-api.open-meteo.com/v1/marine?latitude=37.944709&longitude=23.638304&hourly=wave_height,wave_direction,wave_period&timezone=auto&forecast_days=2",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 2050,
        "y": 1180,
        "wires": [
            [
                "bca10209dc6343d3"
            ]
        ]
    },
    {
        "id": "2adcd0416373135d",
        "type": "join",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 2490,
        "y": 1360,
        "wires": [
            [
                "b98af50c60547faa"
            ]
        ]
    },
    {
        "id": "bedd5979516be804",
        "type": "http request",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://api.open-meteo.com/v1/forecast?latitude=35.489126&longitude=24.075546&hourly=temperature_2m,relative_humidity_2m,rain,showers,snowfall,cloud_cover,wind_speed_10m&forecast_days=2&timezone=auto",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 2050,
        "y": 1240,
        "wires": [
            [
                "e5cdada7e3e35423"
            ]
        ]
    },
    {
        "id": "7b52dfb82bf61d95",
        "type": "http request",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://marine-api.open-meteo.com/v1/marine?latitude=35.489126&longitude=24.075546&hourly=wave_height,wave_direction,wave_period&timezone=auto&forecast_days=2",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 2050,
        "y": 1280,
        "wires": [
            [
                "d6e422d62c183c4a"
            ]
        ]
    },
    {
        "id": "e1bb6fbb39fdf76d",
        "type": "link out",
        "z": "b3fbb48bc7759dd9",
        "name": "link out 115",
        "mode": "link",
        "links": [
            "c0fb0b0507bf787d"
        ],
        "x": 2155,
        "y": 1140,
        "wires": []
    },
    {
        "id": "bca10209dc6343d3",
        "type": "link out",
        "z": "b3fbb48bc7759dd9",
        "name": "link out 116",
        "mode": "link",
        "links": [
            "c0fb0b0507bf787d"
        ],
        "x": 2155,
        "y": 1180,
        "wires": []
    },
    {
        "id": "c0fb0b0507bf787d",
        "type": "link in",
        "z": "b3fbb48bc7759dd9",
        "name": "link in 68",
        "links": [
            "e1bb6fbb39fdf76d",
            "bca10209dc6343d3",
            "e5cdada7e3e35423",
            "d6e422d62c183c4a",
            "5ef95bc1d846e5f6",
            "6d9bd678abf4363f",
            "9ed5316c686534c6",
            "8f98759d0d3eaa53",
            "d055d45a9f4ed71f",
            "82c29ec6b58b4762"
        ],
        "x": 2265,
        "y": 1360,
        "wires": [
            [
                "ee462ee1f2a4aba8"
            ]
        ]
    },
    {
        "id": "e5cdada7e3e35423",
        "type": "link out",
        "z": "b3fbb48bc7759dd9",
        "name": "link out 117",
        "mode": "link",
        "links": [
            "c0fb0b0507bf787d"
        ],
        "x": 2155,
        "y": 1240,
        "wires": []
    },
    {
        "id": "d6e422d62c183c4a",
        "type": "link out",
        "z": "b3fbb48bc7759dd9",
        "name": "link out 118",
        "mode": "link",
        "links": [
            "c0fb0b0507bf787d"
        ],
        "x": 2155,
        "y": 1280,
        "wires": []
    },
    {
        "id": "039a07979dabaf1c",
        "type": "http request",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://api.open-meteo.com/v1/forecast?latitude=40.635485&longitude=22.932838&hourly=temperature_2m,relative_humidity_2m,rain,showers,snowfall,cloud_cover,wind_speed_10m&forecast_days=2&timezone=auto",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 2050,
        "y": 1340,
        "wires": [
            [
                "5ef95bc1d846e5f6"
            ]
        ]
    },
    {
        "id": "a64b91022f69fe00",
        "type": "http request",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://marine-api.open-meteo.com/v1/marine?latitude=40.635485&longitude=22.932838&hourly=wave_height,wave_direction,wave_period&timezone=auto&forecast_days=2",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 2050,
        "y": 1380,
        "wires": [
            [
                "6d9bd678abf4363f"
            ]
        ]
    },
    {
        "id": "5ef95bc1d846e5f6",
        "type": "link out",
        "z": "b3fbb48bc7759dd9",
        "name": "link out 119",
        "mode": "link",
        "links": [
            "c0fb0b0507bf787d"
        ],
        "x": 2155,
        "y": 1340,
        "wires": []
    },
    {
        "id": "6d9bd678abf4363f",
        "type": "link out",
        "z": "b3fbb48bc7759dd9",
        "name": "link out 120",
        "mode": "link",
        "links": [
            "c0fb0b0507bf787d"
        ],
        "x": 2155,
        "y": 1380,
        "wires": []
    },
    {
        "id": "d3a1c90df38f6a1e",
        "type": "http request",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://api.open-meteo.com/v1/forecast?latitude=39.63028&longitude=19.90177&hourly=temperature_2m,relative_humidity_2m,rain,showers,snowfall,cloud_cover,wind_speed_10m&forecast_days=2&timezone=auto",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 2050,
        "y": 1440,
        "wires": [
            [
                "9ed5316c686534c6"
            ]
        ]
    },
    {
        "id": "e7ff96215aa55784",
        "type": "http request",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://marine-api.open-meteo.com/v1/marine?latitude=39.63028&longitude=19.90177&hourly=wave_height,wave_direction,wave_period&timezone=auto&forecast_days=2",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 2050,
        "y": 1480,
        "wires": [
            [
                "8f98759d0d3eaa53"
            ]
        ]
    },
    {
        "id": "9ed5316c686534c6",
        "type": "link out",
        "z": "b3fbb48bc7759dd9",
        "name": "link out 121",
        "mode": "link",
        "links": [
            "c0fb0b0507bf787d"
        ],
        "x": 2155,
        "y": 1440,
        "wires": []
    },
    {
        "id": "8f98759d0d3eaa53",
        "type": "link out",
        "z": "b3fbb48bc7759dd9",
        "name": "link out 122",
        "mode": "link",
        "links": [
            "c0fb0b0507bf787d"
        ],
        "x": 2155,
        "y": 1480,
        "wires": []
    },
    {
        "id": "e66b4746a5d9c3ac",
        "type": "http request",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://api.open-meteo.com/v1/forecast?latitude=39.10412&longitude=26.56064&hourly=temperature_2m,relative_humidity_2m,rain,showers,snowfall,cloud_cover,wind_speed_10m&forecast_days=2&timezone=auto",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 2050,
        "y": 1540,
        "wires": [
            [
                "d055d45a9f4ed71f"
            ]
        ]
    },
    {
        "id": "76e7375decbb44ed",
        "type": "http request",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://marine-api.open-meteo.com/v1/marine?latitude=39.10412&longitude=26.56064&hourly=wave_height,wave_direction,wave_period&timezone=auto&forecast_days=2",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 2050,
        "y": 1580,
        "wires": [
            [
                "82c29ec6b58b4762"
            ]
        ]
    },
    {
        "id": "d055d45a9f4ed71f",
        "type": "link out",
        "z": "b3fbb48bc7759dd9",
        "name": "link out 123",
        "mode": "link",
        "links": [
            "c0fb0b0507bf787d"
        ],
        "x": 2155,
        "y": 1540,
        "wires": []
    },
    {
        "id": "82c29ec6b58b4762",
        "type": "link out",
        "z": "b3fbb48bc7759dd9",
        "name": "link out 124",
        "mode": "link",
        "links": [
            "c0fb0b0507bf787d"
        ],
        "x": 2155,
        "y": 1580,
        "wires": []
    },
    {
        "id": "c5090b9d1c4559f1",
        "type": "http request",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://api.open-meteo.com/v1/forecast?latitude=37.944709&longitude=23.638304&hourly=temperature_2m,relative_humidity_2m,rain,showers,snowfall,cloud_cover,wind_speed_10m&forecast_days=2&timezone=auto",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 2050,
        "y": 1140,
        "wires": [
            [
                "e1bb6fbb39fdf76d"
            ]
        ]
    },
    {
        "id": "b98af50c60547faa",
        "type": "function",
        "z": "b3fbb48bc7759dd9",
        "name": "filter data",
        "func": "var weather_data;\nvar waves_data;\n\nvar latitude;\nvar longitude;\n\nif (msg.payload[0].hourly.temperature_2m !== undefined) {\n    weather_data = msg.payload[0].hourly;\n    waves_data = msg.payload[1].hourly;\n    latitude = msg.payload[1].latitude;\n    longitude = msg.payload[1].longitude;\n} else {\n    weather_data = msg.payload[1].hourly;\n    waves_data = msg.payload[0].hourly;\n    latitude = msg.payload[0].latitude;\n    longitude = msg.payload[0].longitude;\n}\n\nvar systemDateTime = new Date();\n\nfor (var i = 0; i < weather_data.time.length; i++) {  \n    \n    var currentDateTime = new Date(weather_data.time[i]);\n    if (currentDateTime < systemDateTime) {\n        continue;\n    }\n    \n    msg.payload = {};\n    \n    msg.payload.latitude = latitude;\n    msg.payload.longitude = longitude;\n\n    msg.payload.temperature = weather_data.temperature_2m[i];\n    msg.payload.rain = weather_data.rain[i];\n    msg.payload.wind_speed = weather_data.wind_speed_10m[i];\n\n    msg.payload.wave_height = waves_data.wave_height[i];\n\n    msg.payload.timestamp = weather_data.time[i];\n\n    node.send(msg);\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2640,
        "y": 1360,
        "wires": [
            [
                "a6384c924616f267"
            ]
        ]
    },
    {
        "id": "30344a53ac70dfa4",
        "type": "amqp-out",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "broker": "64f16ecdc3ead396",
        "exchangeName": "",
        "exchangeType": "direct",
        "exchangeRoutingKey": "amq.direct",
        "exchangeRoutingKeyType": "str",
        "exchangeDurable": true,
        "amqpProperties": "{ \"headers\": {} }",
        "rpcTimeoutMilliseconds": 3000,
        "outputs": 0,
        "x": 1030,
        "y": 2260,
        "wires": []
    },
    {
        "id": "c50f03f6454c6f03",
        "type": "amqp-out",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "broker": "64f16ecdc3ead396",
        "exchangeName": "",
        "exchangeType": "direct",
        "exchangeRoutingKey": "amq.direct",
        "exchangeRoutingKeyType": "str",
        "exchangeDurable": true,
        "amqpProperties": "{ \"headers\": {} }",
        "rpcTimeoutMilliseconds": 3000,
        "outputs": 0,
        "x": 1030,
        "y": 3160,
        "wires": []
    },
    {
        "id": "68b905c736e4d7e0",
        "type": "amqp-out",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "broker": "64f16ecdc3ead396",
        "exchangeName": "",
        "exchangeType": "direct",
        "exchangeRoutingKey": "amq.direct",
        "exchangeRoutingKeyType": "str",
        "exchangeDurable": true,
        "amqpProperties": "{ \"headers\": {} }",
        "rpcTimeoutMilliseconds": 3000,
        "outputs": 0,
        "x": 1030,
        "y": 4080,
        "wires": []
    },
    {
        "id": "c381cec66dd5b7ad",
        "type": "amqp-out",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "broker": "64f16ecdc3ead396",
        "exchangeName": "",
        "exchangeType": "direct",
        "exchangeRoutingKey": "amq.direct",
        "exchangeRoutingKeyType": "str",
        "exchangeDurable": true,
        "amqpProperties": "{ \"headers\": {} }",
        "rpcTimeoutMilliseconds": 3000,
        "outputs": 0,
        "x": 1030,
        "y": 4980,
        "wires": []
    },
    {
        "id": "a3b320601127981b",
        "type": "amqp-out",
        "z": "b3fbb48bc7759dd9",
        "name": "",
        "broker": "64f16ecdc3ead396",
        "exchangeName": "",
        "exchangeType": "direct",
        "exchangeRoutingKey": "amq.direct",
        "exchangeRoutingKeyType": "str",
        "exchangeDurable": true,
        "amqpProperties": "{ \"headers\": {} }",
        "rpcTimeoutMilliseconds": 3000,
        "outputs": 0,
        "x": 1030,
        "y": 5900,
        "wires": []
    },
    {
        "id": "38e0128001728987",
        "type": "comment",
        "z": "b3fbb48bc7759dd9",
        "name": "Piraeus",
        "info": "",
        "x": 110,
        "y": 1760,
        "wires": []
    },
    {
        "id": "29964a77d4d28522",
        "type": "comment",
        "z": "b3fbb48bc7759dd9",
        "name": "Crete",
        "info": "",
        "x": 110,
        "y": 2660,
        "wires": []
    },
    {
        "id": "b383cbcd68de63b4",
        "type": "comment",
        "z": "b3fbb48bc7759dd9",
        "name": "Thessaloniki ",
        "info": "",
        "x": 130,
        "y": 3580,
        "wires": []
    },
    {
        "id": "3b08fb445f6dadce",
        "type": "comment",
        "z": "b3fbb48bc7759dd9",
        "name": "Kerkyra",
        "info": "",
        "x": 110,
        "y": 4480,
        "wires": []
    },
    {
        "id": "b8c17b958f27e656",
        "type": "comment",
        "z": "b3fbb48bc7759dd9",
        "name": "Lesvos",
        "info": "",
        "x": 110,
        "y": 5380,
        "wires": []
    },
    {
        "id": "2a1f2aab5c071364",
        "type": "ui_spacer",
        "z": "b3fbb48bc7759dd9",
        "name": "spacer",
        "group": "8d9f152ea4ca25c6",
        "order": 1,
        "width": 4,
        "height": 1
    },
    {
        "id": "32a28cecaaf803f1",
        "type": "ui_spacer",
        "z": "b3fbb48bc7759dd9",
        "name": "spacer",
        "group": "8d9f152ea4ca25c6",
        "order": 3,
        "width": 6,
        "height": 1
    },
    {
        "id": "148795a8f2446b89",
        "type": "ui_spacer",
        "z": "b3fbb48bc7759dd9",
        "name": "spacer",
        "group": "8d9f152ea4ca25c6",
        "order": 4,
        "width": 18,
        "height": 1
    },
    {
        "id": "f1f3dab587c5eee8",
        "type": "ui_spacer",
        "z": "b3fbb48bc7759dd9",
        "name": "spacer",
        "group": "8d9f152ea4ca25c6",
        "order": 9,
        "width": 18,
        "height": 1
    },
    {
        "id": "c322589c136117b8",
        "type": "ui_spacer",
        "z": "b3fbb48bc7759dd9",
        "name": "spacer",
        "group": "8d9f152ea4ca25c6",
        "order": 10,
        "width": 4,
        "height": 1
    },
    {
        "id": "d27cf54f242b3d51",
        "type": "ui_spacer",
        "z": "b3fbb48bc7759dd9",
        "name": "spacer",
        "group": "8d9f152ea4ca25c6",
        "order": 12,
        "width": 6,
        "height": 1
    },
    {
        "id": "45eaefce4960ca07",
        "type": "ui_spacer",
        "z": "b3fbb48bc7759dd9",
        "name": "spacer",
        "group": "7d0afa32e32bf88b",
        "order": 1,
        "width": 4,
        "height": 1
    },
    {
        "id": "75df8fbadf18ebaf",
        "type": "ui_spacer",
        "z": "b3fbb48bc7759dd9",
        "name": "spacer",
        "group": "7d0afa32e32bf88b",
        "order": 3,
        "width": 4,
        "height": 1
    },
    {
        "id": "9315638334d3e4c7",
        "type": "ui_spacer",
        "z": "b3fbb48bc7759dd9",
        "name": "spacer",
        "group": "7d0afa32e32bf88b",
        "order": 4,
        "width": 5,
        "height": 1
    },
    {
        "id": "f5381814277431b2",
        "type": "ui_spacer",
        "z": "b3fbb48bc7759dd9",
        "name": "spacer",
        "group": "7d0afa32e32bf88b",
        "order": 6,
        "width": 5,
        "height": 1
    },
    {
        "id": "1c928cefeb458f32",
        "type": "ui_spacer",
        "z": "b3fbb48bc7759dd9",
        "name": "spacer",
        "group": "7d0afa32e32bf88b",
        "order": 7,
        "width": 16,
        "height": 1
    },
    {
        "id": "c153fa91db95e802",
        "type": "ui_spacer",
        "z": "b3fbb48bc7759dd9",
        "name": "spacer",
        "group": "7d0afa32e32bf88b",
        "order": 12,
        "width": 16,
        "height": 1
    },
    {
        "id": "150126263e3fb7e4",
        "type": "ui_spacer",
        "z": "b3fbb48bc7759dd9",
        "name": "spacer",
        "group": "7d0afa32e32bf88b",
        "order": 13,
        "width": 4,
        "height": 1
    },
    {
        "id": "3d23f7c35831be89",
        "type": "ui_spacer",
        "z": "b3fbb48bc7759dd9",
        "name": "spacer",
        "group": "7d0afa32e32bf88b",
        "order": 15,
        "width": 4,
        "height": 1
    },
    {
        "id": "410fd9614eb0eaca",
        "type": "ui_spacer",
        "z": "b3fbb48bc7759dd9",
        "name": "spacer",
        "group": "7d0afa32e32bf88b",
        "order": 16,
        "width": 16,
        "height": 1
    },
    {
        "id": "c49b86040eb3af05",
        "type": "ui_spacer",
        "z": "b3fbb48bc7759dd9",
        "name": "spacer",
        "group": "7d0afa32e32bf88b",
        "order": 18,
        "width": 4,
        "height": 1
    },
    {
        "id": "05f97b74c0cdea37",
        "type": "ui_spacer",
        "z": "b3fbb48bc7759dd9",
        "name": "spacer",
        "group": "7d0afa32e32bf88b",
        "order": 20,
        "width": 4,
        "height": 1
    },
    {
        "id": "5592c0ac1723dc37",
        "type": "sqlitedb",
        "db": "C:\\Users\\User\\Downloads\\weather.db",
        "mode": "RWC"
    },
    {
        "id": "8d9f152ea4ca25c6",
        "type": "ui_group",
        "name": "Charts",
        "tab": "84a709054f375393",
        "order": 1,
        "disp": true,
        "width": "18",
        "collapse": false,
        "className": ""
    },
    {
        "id": "7d0afa32e32bf88b",
        "type": "ui_group",
        "name": "Gauges",
        "tab": "7b464b72b377df74",
        "order": 1,
        "disp": true,
        "width": "16",
        "collapse": false,
        "className": ""
    },
    {
        "id": "64f16ecdc3ead396",
        "type": "amqp-broker",
        "name": "",
        "host": "localhost",
        "port": "5672",
        "vhost": "",
        "tls": false,
        "credsFromSettings": false
    },
    {
        "id": "84a709054f375393",
        "type": "ui_tab",
        "name": "Chart",
        "icon": "dashboard",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "7b464b72b377df74",
        "type": "ui_tab",
        "name": "Gauge",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    }
]